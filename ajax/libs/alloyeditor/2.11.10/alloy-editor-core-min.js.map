{"version":3,"sources":["webpack://AlloyEditor/webpack/bootstrap","webpack://AlloyEditor/external {\"amd\":\"react\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"root\":\"React\",\"umd\":\"react\"}","webpack://AlloyEditor/./src/components/buttons/button-icon.jsx","webpack://AlloyEditor/./src/adapter/editor-context.js","webpack://AlloyEditor/./src/components/base/button-command.js","webpack://AlloyEditor/./src/components/base/button-state-classes.js","webpack://AlloyEditor/./src/oop/lang.js","webpack://AlloyEditor/external {\"amd\":\"react-dom\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"root\":\"ReactDOM\",\"umd\":\"react-dom\"}","webpack://AlloyEditor/./src/components/base/button-style.js","webpack://AlloyEditor/./node_modules/prop-types/index.js","webpack://AlloyEditor/./src/components/base/button-command-active.js","webpack://AlloyEditor/./src/components/base/widget-focus-manager.js","webpack://AlloyEditor/./src/components/base/button-keystroke.js","webpack://AlloyEditor/./src/components/buttons/button-dropdown.jsx","webpack://AlloyEditor/./src/components/buttons/button-commands-list.jsx","webpack://AlloyEditor/./src/components/base/button-action-style.js","webpack://AlloyEditor/./src/components/buttons/button-styles-list.jsx","webpack://AlloyEditor/./src/components/base/widget-dropdown.js","webpack://AlloyEditor/./src/components/base/widget-exclusive.js","webpack://AlloyEditor/./src/components/buttons/button-link-edit.jsx","webpack://AlloyEditor/./src/components/base/button-props.js","webpack://AlloyEditor/./src/components/base/toolbar-buttons.js","webpack://AlloyEditor/./src/oop/oop.js","webpack://AlloyEditor/./src/selections/selection-test.js","webpack://AlloyEditor/./src/components/buttons/button-styles-list-header.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-command-list-item.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-video-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-autocomplete-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-edit-browse.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-target-edit.jsx","webpack://AlloyEditor/./src/components/buttons/button-target-list.jsx","webpack://AlloyEditor/./src/components/buttons/button-link.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-edit.jsx","webpack://AlloyEditor/./src/components/compat/widget-interaction-point.js","webpack://AlloyEditor/./src/oop/attribute.js","webpack://AlloyEditor/./src/selections/selection-arrowbox.js","webpack://AlloyEditor/./src/selections/selection-position.js","webpack://AlloyEditor/./src/selections/selections.js","webpack://AlloyEditor/./src/plugins/index.js","webpack://AlloyEditor/./src/adapter/main.js","webpack://AlloyEditor/./src/components/base/index.js","webpack://AlloyEditor/./src/components/buttons/index.js","webpack://AlloyEditor/./src/components/buttons/button-accessibility-image-alt.jsx","webpack://AlloyEditor/./src/components/buttons/button-background-color.jsx","webpack://AlloyEditor/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://AlloyEditor/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://AlloyEditor/./src/components/buttons/button-bold.jsx","webpack://AlloyEditor/./src/components/buttons/button-camera.jsx","webpack://AlloyEditor/./src/components/buttons/button-code.jsx","webpack://AlloyEditor/./src/components/buttons/button-color.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed-video.jsx","webpack://AlloyEditor/./src/components/buttons/button-embed.jsx","webpack://AlloyEditor/./src/components/buttons/button-h1.jsx","webpack://AlloyEditor/./src/components/buttons/button-h2.jsx","webpack://AlloyEditor/./src/components/buttons/button-hline.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-image-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-indent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-italic.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-audio.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-item-selector-video.jsx","webpack://AlloyEditor/./src/components/buttons/button-link-browse.jsx","webpack://AlloyEditor/./src/components/buttons/button-ol.jsx","webpack://AlloyEditor/./src/components/buttons/button-outdent-block.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-left.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align-right.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-align.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-center.jsx","webpack://AlloyEditor/./src/components/buttons/button-paragraph-justify.jsx","webpack://AlloyEditor/./src/components/buttons/button-quote.jsx","webpack://AlloyEditor/./src/components/buttons/button-remove-format.jsx","webpack://AlloyEditor/./src/components/buttons/button-remove-image.jsx","webpack://AlloyEditor/./src/components/buttons/button-separator.jsx","webpack://AlloyEditor/./src/components/buttons/button-spacing.jsx","webpack://AlloyEditor/./src/components/buttons/button-strike.jsx","webpack://AlloyEditor/./src/components/buttons/button-styles.jsx","webpack://AlloyEditor/./src/components/buttons/button-subscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-superscript.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-cell.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-column.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-heading.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-remove.jsx","webpack://AlloyEditor/./src/components/buttons/button-table-row.jsx","webpack://AlloyEditor/./src/components/buttons/button-table.jsx","webpack://AlloyEditor/./src/components/buttons/button-twitter.jsx","webpack://AlloyEditor/./src/components/buttons/button-ul.jsx","webpack://AlloyEditor/./src/components/buttons/button-underline.jsx","webpack://AlloyEditor/./src/components/compat/index.js","webpack://AlloyEditor/./src/components/compat/button-action-style.js","webpack://AlloyEditor/./src/components/compat/button-command-active.js","webpack://AlloyEditor/./src/components/compat/button-command.js","webpack://AlloyEditor/./src/components/compat/button-keystroke.js","webpack://AlloyEditor/./src/components/compat/button-props.js","webpack://AlloyEditor/./src/components/compat/button-state-classes.js","webpack://AlloyEditor/./src/components/compat/button-style.js","webpack://AlloyEditor/./src/components/compat/toolbar-buttons.js","webpack://AlloyEditor/./src/components/compat/widget-arrow-box.js","webpack://AlloyEditor/./src/components/compat/widget-dropdown.js","webpack://AlloyEditor/./src/components/compat/widget-exclusive.js","webpack://AlloyEditor/./src/components/compat/widget-focus-manager.js","webpack://AlloyEditor/./src/components/compat/widget-position.js","webpack://AlloyEditor/./src/components/toolbars/index.js","webpack://AlloyEditor/./src/components/toolbars/toolbar-add.jsx","webpack://AlloyEditor/./src/components/toolbars/toolbar-styles.jsx","webpack://AlloyEditor/./src/adapter/core.js","webpack://AlloyEditor/./src/core/index.js","webpack://AlloyEditor/./src/core/debounce.js","webpack://AlloyEditor/./src/core/link.js","webpack://AlloyEditor/./src/core/plugins.js","webpack://AlloyEditor/./src/core/selection-region.js","webpack://AlloyEditor/./src/core/table.js","webpack://AlloyEditor/./src/core/tools.js","webpack://AlloyEditor/./src/core/uicore.js","webpack://AlloyEditor/./src/plugins/addimages.js","webpack://AlloyEditor/./src/plugins/autolink.js","webpack://AlloyEditor/./src/plugins/autolist.js","webpack://AlloyEditor/./src/plugins/dragresize.js","webpack://AlloyEditor/./src/plugins/dragresize_ie.js","webpack://AlloyEditor/./src/plugins/dragresize_ie11.js","webpack://AlloyEditor/./src/plugins/embed.js","webpack://AlloyEditor/./src/plugins/priorities.js","webpack://AlloyEditor/./src/plugins/embedurl.js","webpack://AlloyEditor/./src/plugins/Resizer.es.js","webpack://AlloyEditor/./src/plugins/DragEvent.es.js","webpack://AlloyEditor/./src/plugins/imagealignment.js","webpack://AlloyEditor/./src/plugins/pasteimages.js","webpack://AlloyEditor/./src/plugins/placeholder.js","webpack://AlloyEditor/./src/plugins/selectionkeystrokes.js","webpack://AlloyEditor/./src/plugins/tableresize.js","webpack://AlloyEditor/./src/plugins/tabletools.js","webpack://AlloyEditor/./src/components/uibridge/index.js","webpack://AlloyEditor/./src/components/uibridge/button.jsx","webpack://AlloyEditor/./src/components/uibridge/menu-button.jsx","webpack://AlloyEditor/./src/components/uibridge/menu.jsx","webpack://AlloyEditor/./src/components/uibridge/panel-menu-button.jsx","webpack://AlloyEditor/./src/components/uibridge/richcombo.jsx","webpack://AlloyEditor/./src/components/uibridge/uibridge.js","webpack://AlloyEditor/./src/commands/index.js","webpack://AlloyEditor/./src/commands/remove-image.js","webpack://AlloyEditor/./src/components/main.jsx","webpack://AlloyEditor/./src/oop/base.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","undefined","ButtonIcon","_react","_editorContext","_ref","_ref$className","className","symbol","_react2","default","createElement","_editorContext2","Consumer","_ref2","editor","nativeEditor","spritemap","config","path","classNamePrefix","combinedClassName","height","width","href","EditorContext","React","createContext","toProps","Component","forwardingComponent","forwardRef","props","ref","context","_extends","WrappedComponent","_class","_temp2","_WrappedComponent","ButtonCommand","_temp","_this","_ret","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","execCommand","data","command","fire","_inherits","contextType","_lang","ButtonStateClasses","_createClass","stateClasses","Lang","isFunction","isActive","isArray","toString","isBoolean","isNull","isNumber","isFinite","isObject","valueType","_typeof","isString","mix","receiver","supplier","toInt","parseInt","ButtonStyle","_get","style","parts","split","currentMember","shift","_style","CKEDITOR","elementPath","getStyle","checkActive","ButtonCommandActive","getCommand","state","TRISTATE_ON","_reactDom","DIRECTION_NONE","DIRECTION_NEXT","DIRECTION_PREV","ACTION_NONE","ACTION_MOVE_FOCUS","ACTION_DISMISS_FOCUS","WidgetFocusManager","focus","event","_isValidTarget","target","_descendants","activeDescendantEl","_activeDescendant","document","activeElement","focusFirstChild","indexOf","stopPropagation","preventDefault","handleKey","action","_getFocusAction","type","_moveFocus","direction","onDismiss","_refresh","keys","_getFocusMoveDirection","dismissAction","_getFocusDismissAction","dismiss","focusMoveDirection","_isValidKey","keyCode","dismissNext","dismissPrev","circular","next","prev","shifKey","element","tagName","toLowerCase","numDescendants","descendant","setAttribute","Math","max","min","_this2","domNode","ReactDOM","findDOMNode","descendants","querySelectorAll","priorityDescendants","slice","forEach","item","dataTabIndex","getAttribute","push","sort","a","b","some","index","ButtonKeystroke","keystroke","commandName","exec","keystrokeFn","fn","addCommand","_defaultKeystrokeCommand","keystrokeHandler","keystrokes","setKeystroke","_widgetFocusManager","ButtonDropdown","onFocus","onKeyDown","tabIndex","role","children","defaultProps","_widgetFocusManager2","_buttonCommandListItem","ButtonCommandsList","createRef","current","id","listId","_renderActions","commands","items","map","_buttonCommandListItem2","description","label","icon","ButtonActionStyle","applyStyle","getSelection","lock","removeStyle","unlock","_buttonDropdown","_buttonStylesListHeader","_buttonStylesListItemRemove","_buttonStylesListItem","ButtonStylesList","blockStyles","inlineStyles","objectStyles","styles","STYLE_BLOCK","STYLE_INLINE","STYLE_OBJECT","_blockStyles","_inlineStyles","_objectStyles","removeStylesItem","showRemoveStylesItem","_buttonStylesListItemRemove2","toggleDropdown","_buttonDropdown2","_buttonStylesListHeader2","AlloyEditor","Strings","_renderStylesItems","_buttonStylesListItem2","activeStyle","styleFn","WidgetDropdown","mergeDropdownProps","obj","itemKey","tools","merge","expanded","itemDropdown","dropdownTrigger","toggleDirection","setState","moveFocus","nextProps","WidgetExclusive","requestExclusive","itemExclusive","filter","cancelExclusive","renderExclusive","_widgetDropdown","_buttonIcon","_buttonLinkAutocompleteList","_buttonLinkTargetEdit","ButtonLinkEdit","_clearLink","linkHref","_focusLinkInput","_handleKeyDown","_updateLink","autocompleteSelected","Link","advanceSelection","_handleLinkHrefChange","_handleLinkTargetChange","linkTarget","_removeLink","linkUtils","selection","bookmarks","createBookmarks","remove","advance","selectBookmarks","appendProtocol","linkAttrs","modifySelection","update","linkInput","_getInitialState","manualSelection","targetSelector","allowedTargets","handleLinkTargetChange","selectedTarget","linkTargetDefault","ButtonLinkTargetEdit","autocompleteDropdown","dataFn","autocompleteDropdownProps","handleLinkAutocompleteClick","_handleLinkAutocompleteClick","setAutocompleteState","_setAutocompleteState","term","ButtonLinkAutocompleteList","_buttonLinkAutocompleteList2","buttonClearLink","aria-label","clearInput","onClick","title","clear","_buttonIcon2","placeholderProp","env","ie","placeholder","editLink","removeLink","disabled","showTargetSelector","_buttonLinkTargetEdit2","onChange","confirm","_isValidState","defaultLinkTarget","link","getFromSelection","initialLink","instance","focusLinkEl","requestAnimationFrame","setTimeout","validState","selected","autocompleteUrl","customIndexStart","_widgetDropdown2","ButtonProps","buttonCfg","ToolbarButtons","_animationFrameId","cancelAnimationFrame","arrowBoxClasses","getInteractionPoint","SELECTION_TOP_TO_BOTTOM","attrs","viewPaneSize","dom","getViewPaneSize","x","left","y","top","eventPayload","editorEvent","selectionData","nativeEvent","pos","pageX","region","endRect","startRect","SELECTION_BOTTOM_TO_TOP","_getXPoint","_getYPoint","eventX","right","leftDist","abs","rightDist","elementTarget","$","offsetTop","offsetHeight","bottom","gutter","offsetWidth","SELECTION_LEFT_TO_RIGHT","SELECTION_RIGHT_TO_LEFT","domElement","hasClass","startPoint","endPoint","setStyles","opacity","pointerEvents","removeClass","addClass","uiNode","scrollTop","isVisible","interactionPoint","finalX","finalY","initialX","initialY","parseFloat","constrainToViewport","res","getConstrainedPosition","moveToPoint","body","uiNodeStyle","getComputedStyle","uiNodeMarginLeft","getPropertyValue","uiNodeMarginRight","totalWidth","clientWidth","xy","getWidgetXYPoint","buttons","additionalProps","reduce","list","button","getToolbarButtons","buttonProps","toolbarButtons","filterExclusive","Buttons","cfg","mergeExclusiveProps","tabKey","trigger","extend","protoProps","staticProps","Error","supplierProto","receiverProto","constructor","superclass","_isRangeAtElementEnd","range","getText","endOffset","equals","startContainer","endContainer","startOffset","embedSelectionTest","payload","embedUrlSelectionTest","headingTextSelectionTest","headings","selectionEmpty","isSelectionEmpty","getCommonAncestor","isReadOnly","contains","linkSelectionTest","getRanges","elementIsNotImage","getName","imageSelectionTest","hasImage","findOne","isImage","textSelectionTest","tableSelectionTest","table","Table","isEditable","SelectionTest","embed","embedUrl","header","image","text","ButtonsStylesListHeader","ButtonStylesListItemRemove","_removeStyles","removeBlocks","blockItem","blockStyle","normal","_buttonActionStyle","_buttonStyle","ButtonStylesListItem","_onClick","styleCfg","margin","_preview","buildPreview","dangerouslySetInnerHTML","__html","_buttonActionStyle2","_buttonStyle2","ButtonCameraImage","takePhoto","videoEl","_videoContainerRef","canvasEl","_canvasContainerRef","getContext","_videoHeight","videoWidth","drawImage","imgURL","toDataURL","el","createFromHtml","insertElement","_handleStreamError","error","alert","_handleStreamSuccess","stream","addEventListener","videoHeight","isNaN","_stream","navigator","mozGetUserMedia","mozSrcObject","srcObject","play","_buttonTakePhotoRef","stop","getVideoTracks","track","getUserMedia","webkitGetUserMedia","msGetUserMedia","video","audio","_buttonCommand","ButtonCommandListItem","_getClassName","_buttonCommand2","KEY_ENTER","KEY_ESC","ButtonEmbedEdit","_embedLink","url","_removeEmbed","embedWrapper","getAscendant","getInitialState","selectedElement","getSelectedElement","clearLinkStyle","deleteEmbed","data-type","ButtonEmbedVideoEdit","_embedVideoURL","videoURL","_focusVideoUrlInput","refs","_handleVideoURLChange","newState","all","new","old","initialEmbed","inputPlaceholder","pasteVideoLink","clearVideoURLStyle","clearTimeout","_timeout","_updateItems","delay","_renderAutocompleteItems","nextState","data-value","_this3","promise","Promise","resolve","then","_buttonLinkEdit","ButtonLinkEditBrowse","_browseClick","documentBrowseLinkUrl","browseLinkCallback","documentBrowseLinkCallback","linkEditButtonRef","changeLinkCallback","selectedItem","linkTitle","plugins","creole","location","origin","_buttonLinkEdit2","_buttonTargetList","allowedLinkTargets","aria-expanded","_buttonTargetList2","ButtonTargetList","listTargets","_renderListTargets","linkTargetSelf","linkTargetBlank","linkTargetParent","linkTargetTop","targets","_getAllowedTargetItems","_buttonKeystroke","_buttonProps","_buttonStateClasses","ButtonLink","_requestExclusive","cssClass","getStateClasses","mergeButtonCfgProps","CTRL","_buttonProps2","_buttonKeystroke2","_buttonStateClasses2","ButtonTableEdit","_createTable","tableUtils","tableAttributes","cols","rows","_handleChange","inputName","rowsRef","colsRef","time","Date","now","rowsId","colsId","htmlFor","columns","border","cellPadding","cellSpacing","_propTypes","WidgetInteractionPoint","propTypes","PropTypes","Attribute","__config__","__ATTRS__","attr","currentAttr","ATTRS","_isInitialized","_init","curValue","_callStringOrFunction","set","readOnly","writeOnce","validator","setter","stringOrFunction","result","_toConsumableArray","hasDefaultValue","hasPassedValueViaConfig","valueFn","tableSelectionGetArrowBoxClasses","SelectionGetArrowBoxClasses","DEFAULT_GUTTER","centerToolbar","toolbar","rect","toolbarNode","halfNodeWidth","scrollPosition","getScrollPosition","widgetXY","caretPosition","ranges","nodeType","Node","ELEMENT_NODE","getParent","startContainerClientRect","getClientRect","endPosition","imageSelectionSetPosition","tableSelectionSetPosition","SelectionSetPosition","_selectionArrowbox","_selectionPosition","_selectionTest","Selections","test","setPosition","full","simple","getArrowBoxClasses","_embedurl","embedurl","_base","Base","_buttons","_compat","Compat","_toolbars","_attribute","_oop","_selections","_core","BRIDGE_BUTTONS","editable","node","srcNode","implementEventTarget","Core","getBasePath","ALLOYEDITOR_BASEPATH","scripts","getElementsByTagName","match","src","regexBasePath","loadLanguageResources","callback","once","_langResourceRequested","languages","userLanguage","language","lang","locale","scriptLoader","load","getUrl","loaded","resource","basePath","timestamp","charAt","on","implementOn","getButtons","acc","val","registerBridgeButton","buttonName","pluginName","OOP","Toolbars","_buttonAccessibilityImageAlt","_buttonBackgroundColor","_buttonBold","_buttonCameraImage","_buttonCamera","_buttonCode","_buttonColor","_buttonCommandsList","_buttonEmbedEdit","_buttonEmbedVideoEdit","_buttonEmbedVideo","_buttonEmbed","_buttonH","_buttonH3","_buttonHline","_buttonImageAlignCenter","_buttonImageAlignLeft","_buttonImageAlignRight","_buttonImage","_buttonIndentBlock","_buttonItalic","_buttonItemSelectorAudio","_buttonItemSelectorImage","_buttonItemSelectorVideo","_buttonLinkBrowse","_buttonLinkEditBrowse","_buttonLink","_buttonOl","_buttonOutdentBlock","_buttonParagraphAlignLeft","_buttonParagraphAlignRight","_buttonParagraphAlign","_buttonParagraphCenter","_buttonParagraphJustify","_buttonQuote","_buttonRemoveFormat","_buttonRemoveImage","_buttonSeparator","_buttonSpacing","_buttonStrike","_buttonStylesList","_buttonStyles","_buttonSubscript","_buttonSuperscript","_buttonTableCell","_buttonTableColumn","_buttonTableEdit","_buttonTableHeading","_buttonTableRemove","_buttonTableRow","_buttonTable","_buttonTwitter","_buttonUl","_buttonUnderline","ButtonAccessibilityImageAlt","ButtonBackgroundColor","ButtonBold","ButtonCamera","ButtonCode","ButtonColor","ButtonEmbed","ButtonEmbedVideo","ButtonH1","ButtonH2","ButtonHline","ButtonImageAlignCenter","ButtonImageAlignLeft","ButtonImageAlignRight","ButtonImage","ButtonIndentBlock","ButtonItalic","ButtonItemSelectorAudio","ButtonItemSelectorImage","ButtonItemSelectorVideo","ButtonLinkBrowse","ButtonOl","ButtonOutdentBlock","ButtonParagraphAlign","ButtonParagraphAlignLeft","ButtonParagraphAlignRight","ButtonParagraphCenter","ButtonParagraphJustify","ButtonQuote","ButtonRemoveFormat","ButtonRemoveImage","ButtonSeparator","ButtonSpacing","ButtonStrike","ButtonStylesListHeader","ButtonStyles","ButtonSubscript","ButtonSuperscript","ButtonTableCell","ButtonTableColumn","ButtonTableHeading","ButtonTableRemove","ButtonTableRow","ButtonTable","ButtonTwitter","ButtonUl","ButtonUnderline","_initialiseProps","getStartElement","_element","imageElement","imageAlt","_handleAltChange","_updateImageAlt","focusAltEl","refAltInput","_focusAltInput","activeColor","activeColorClass","colors","_getColors","itemStyle","attributes","class","styleClass","_checkActive","_props","buttonStylesProps","_buttonStylesList2","styleConfig","_applyStyle","primary","success","danger","warning","info","bool","string","arrayOf","number","func","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","any","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","bold","aria-pressed","_buttonCameraImage2","protocol","cameraDisabled","camera","code","dark","darkGray","secondary","light","lighter","white","_buttonEmbedVideoEdit2","_buttonEmbedEdit2","SHIFT","h1","h2","horizontalrule","_buttonCommandActive","alignCenter","_buttonCommandActive2","alignLeft","alignRight","handleClick","fileInput","click","_onInputChange","inputEl","files","reader","FileReader","file","onload","imageFiles","imageData","readAsDataURL","inputSyle","display","accept","indent","italic","_handleClick","_buttonLinkEditBrowse2","_buttonLink2","ButtonOrderedList","numberedlist","outdent","buttonCommandsList","buttonCommandsListId","_buttonCommandsList2","_getCommands","inlineIcons","activeCommand","alignment","pop","iconClassName","aria-owns","row","alignJustify","quote","removeformat","removeImage","activeSpacing","spacings","_getSpacings","active","lastElement","strike","_getStyles","buttonStylesList","formatted","cite","subscript","superscript","cell","cellInsertBefore","cellInsertAfter","cellDelete","cellMerge","cellMergeDown","cellMergeRight","cellSplitHorizontal","cellSplitVertical","column","columnInsertBefore","columnInsertAfter","columnDelete","activeHeading","getHeading","activeHeadingIntro","headers","activeHeadingLabel","headersNone","headersRow","headersColumn","headersBoth","_removeTable","deleteTable","rowInsertBefore","rowInsertAfter","rowDelete","_buttonTableEdit2","MAX_TWEET_LENGTH","_getHref","twitter","selectedText","getSelectedText","substring","via","twitterHref","ButtonUnorderedlist","bulletedlist","underline","modifiesSelection","selectionChange","componentWillMount","random","componentWillUnmount","isDisabled","getToolbarButtonGroups","WidgetArrowBox","componentWillReceiveProps","_nextProps","componentDidMount","componentDidUpdate","_widgetInteractionPoint","WidgetPosition","mixins","getDefaultProps","cancelAnimation","halfWidth","_animate","show","updatePosition","_toolbarAdd","_toolbarStyles","ToolbarAdd","ToolbarStyles","_toolbarButtons","_widgetExclusive","POSITION_LEFT","POSITION_RIGHT","_updatePosition","_prevProps","_prevState","isContentEditable","_getButtons","_getToolbarClassName","add","data-tabindex","clientRect","offsetLeft","position","gutterExclusive","floor","_widgetExclusive2","_toolbarButtons2","currentSelection","_getCurrentSelection","getArrowBoxClassesFn","_getSelectionFunction","cssClasses","buttonsGroup","selectionType","hasGroups","selectionFn","selectionFunction","selections","testFn","setPositionFn","_commands","_main","EMBED_VIDEO_WIDTH","EMBED_VIDEO_HEIGHT","_oop2","initializer","inline","allowedContent","toolbars","removePlugins","extraPlugins","embedProviders","placeholderClass","pasteFromWordRemoveStyles","pasteFromWordRemoveFontStyles","selectionKeystrokes","edge","plugin","version","replace","_addReadOnlyLinkClickListener","extraCommands","extraCommandKeys","_editor","_renderUI","destructor","_destroyed","_editorUIElement","unmountComponentAtNode","parentNode","removeChild","_clearSelections","destroy","isMSSelection","empty","getWindow","removeAllRanges","_defaultReadOnlyClickFn","mouseEvent","hasCtrlKey","ctrlKey","metaKey","shouldOpen","listenerData","ckElement","getTarget","_redirectLink","_getNativeEditor","open","editorUIElement","appendChild","callbackRef","_mainUI","render","Provider","_main2","eventsDelay","_toElement","getElementById","_validateAllowedContent","_validateToolbars","tpl","urlSchemes","enableContentEditable","removeImageCommand","_debounce","debounce","timeout","debounceHandle","callFn","callArgs","callContext","detach","REGEX_BOOKMARK_SCHEME","REGEX_EMAIL_SCHEME","REGEX_URI_SCHEME","moveToElementEditEnd","nextNode","getNextEditableNode","whitespace","offset","setStart","setEnd","selectRanges","URI","collapsed","insertNode","selectNodeContents","_getCompleteURI","data-cke-saved-href","applyToRange","select","is","getChildren","count","getItem","shrink","SHRINK_TEXT","alwaysRemoveElement","selectElement","uri","setAttributes","removeAttrs","setAttrs","removeAttributes","wrapPluginLifecycle","methods","methodName","override","originalPluginMethod","phase","__processingPlugin__","filterUnwantedDependencies","requires","require","pluginsLoad","names","scope","SelectionRegion","createSelectionFromPoint","createSelectionFromRange","startX","startY","endX","endY","end","start","caretPositionFromPoint","offsetNode","createRange","caretRangeFromPoint","createTextRange","endRange","duplicate","setEndPoint","getCaretRegion","bookmarkNodeEl","startNode","scrollPos","getSelectionData","getNative","getSelectionRegion","getClientRectsRegion","getSelectionDirection","getType","SELECTION_NONE","nativeSelection","defaultRect","clientRects","Infinity","getClientRects","rangeCount","getRangeAt","anchorNode","compareDocumentPosition","focusNode","anchorOffset","focusOffset","DOCUMENT_POSITION_PRECEDING","init","IE_NON_DIRECTLY_EDITABLE_ELEMENT","col","colgroup","tbody","td","tfoot","th","thead","tr","HEADING_BOTH","HEADING_COL","HEADING_NONE","HEADING_ROW","_createElement","append","j","appendBogus","setHeading","heading","firstCell","cells","moveToPosition","POSITION_AFTER_START","webkit","NODE_ELEMENT","hasAttribute","rowHeadingSettings","tHead","colHeadingSettings","nodeName","headingSettings","parent","getChildCount","POSITION_BEFORE_START","newCell","tableHead","tableBody","getElementsByTag","tableHeading","hadColHeading","needColHeading","needRowHeading","tableFirstRow","tableFirstRowChildCount","getChild","renameNode","createTHead","previousFirstRow","getFirst","newFirstRow","newFirstRowChildCount","removeAttribute","insertBefore","hasColHeading","headingCommands","jsonp","urlTemplate","urlParams","errorCallback","callbackKey","getNextNumber","_","jsonpCallbacks","response","cleanUp","scriptElement","output","getBody","cancel","simulate","eventInstance","createEvent","initEvent","dispatchEvent","ariaState","ariaElement","_createAriaElement","uiTasksTimeout","uicore","handleUI","allowEsc","handleAria","_event","innerHTML","join","handleMouseLeave","aeUINodes","found","relatedTarget","message","focusHandler","attachListener","removeListener","statusElement","isIE","_onDragEnter","_onDragOver","_onDragDrop","_onPaste","_handleFiles","_processFile","transferFiles","dataTransfer","clientX","clientY","_preventEvent","clipboardData","pastedData","imageFile","getAsFile","bin","userAgent","KEY_BACK","KEY_COMMA","KEY_SEMICOLON","KEY_SPACE","DELIMITERS","REGEX_LAST_WORD","REGEX_URL","REGEX_EMAIL","_onKeyUp","method","dataValue","RegExp","_isValidURL","_isValidEmail","_getLastWord","previousText","_currentKeyCode","previousNode","getPrevious","lastChild","getLast","_startContainer","_offset","lastWord","email","_onKeyDown","_ckLink","_replaceContentByLink","content","ckLink","linkNode","_subscribeToKeyEvent","nextEditableNode","enclosedNode","getEnclosedNode","caretOffset","getNext","newRange","setEndAfter","DEFAULT_CONFIG","regex","_checkForBackspaceAndUndo","insertHtml","bullet","_getListConfig","configRegex","autolist","textContainer","regexLen","autolistCfg","regexItem","_createList","listConfig","setText","IMAGE_HANDLES","both","scale","POSITION_ELEMENT_FN","bl","handle","box","positionElement","bm","round","br","lm","tl","_box","tm","rm","IMAGE_SNAP_TO_SIZE","isFirefox","documentElement","isWebKit","enablePlugin","snapToSize","imageScaleResize","resizer","Resizer","mouseDownListener","e","isHandle","initDrag","hide","html","self","resizeElement","removeEventListener","resizeTimeout","DragEvent","events","mousemove","keydown","mouseup","toArray","len","arr","ctx","String","getBoundingBox","getBoundingClientRect","pageXOffset","pageYOffset","addCss","onLoad","_evt","container","preview","handles","handleName","createHandle","classList","otherImages","splice","showHandles","elements","getElementsByClassName","hideHandles","drag","onStart","showPreview","isDragging","onDrag","calculateSize","updatePreview","previewBox","updateHandles","onRelease","hidePreview","onComplete","resizeComplete","backgroundImage","delta","ratio","others","other","startPos","currentPos","shiftKey","ctrl","alt","altKey","which","release","alignmentsObj","center","cursor","regexPercent","template","widgetDef","widgets","initOn","alignClasses","image2_alignClasses","captionedClass","image2_captionedClass","helpers","image2","hasCaption","caption","ready","checkHasNaturalRatio","wrapper","align","alignElement","setData","image2_disableResizer","setupResizer","getStyleableElement","getWidgetAllowedContent","contentTransformations","features","checkFeature","contenteditable","data-cke-saved-src","oldData","classes","dimension","setDimensions","downcast","downcastWidgetElement","draggable","editables","selector","getWidgetFeatures","getClasses","classRegex","repository","parseElementClasses","getLabel","pathName","requiredContent","styleableElements","upcast","upcastWidgetElement","isCenterWrapper","centerWrapperChecker","dimensions","figure","replaceWith","isLinkedOrStandaloneImage","attrsHolder","resizeWrapper","img","parseCssText","wrapWith","htmlParser","isEmpty","writeCssText","validChildren","div","child","enterMode","ENTER_P","widget","doc","imageOrLink","oldResizeWrapper","evt","factor","screenX","screenY","startWidth","startHeight","clientHeight","listeners","cursorClass","nativeEvt","newWidth","newHeight","updateData","moveDiffX","moveDiffY","attachToDocuments","collection","globalDoc","onMouseMove","onMouseUp","widgetElement","rules","figcaption","hidpi","icons","natural","getNatural","naturalWidth","naturalHeigh","Image","heigh","templateBlock","afterInit","block","integrate","alignCommandIntegrator","ae_dragresize_ie11","stateShifter","ae_dragresize_ie11_alignClasses","ae_dragresize_ie11_captionedClass","shiftables","stateActions","oldValue","newValue","changed","marginLeft","marginRight","newData","deflate","wrapInCentering","unwrapFromCentering","setStyle","captionPlaceholder","replaceSafely","needsDeflate","newEl","wrapInLink","getLinkAttributesGetter","removed","unwrapFromLink","attribsAndStyles","text-align","activeEnterMode","move","linkData","replacing","replaced","insertElementIntoRange","inflate","naturalHeight","getLinkAttributes","getLinkAttributesParser","parseLinkAttributes","removeWidgetAlignment","imageAlignment","deflated","focused","setWrapperAlign","shiftState","advanced","advCSSClasses","trim","ae_dragresize_ie11_disableResizer","dragHandlerStyle","dragHandlerContainer","TRISTATE_OFF","unlink","querySelector","imageStyles","heightStyles","widthStyles","resizerNE","resizerNW","resizerSE","resizerSW","factorX","factorY","adjustToX","adjustToY","execCallbacks","enabled","refresh","getFocusedWidget","allowed","registered","TRISTATE_DISABLED","_priorities","REGEX_HTTP","REGEX_DEFAULT_LINK","DEFAULT_AE_EMBED_URL_TPL","DEFAULT_AE_EMBED_WIDGET_TPL","DEFAULT_AE_EMBED_DEFAULT_LINK_TPL","AE_EMBED_URL_TPL","embedUrlTemplate","AE_EMBED_WIDGET_TPL","embedWidgetTpl","AE_EMBED_DEFAULT_LINK_TPL","embedLinkDefaultTpl","defaultEmbedWidgetUpcastFn","mask","encodeURIComponent","createATag","setHtml","_msg","aTagHtml","embedWidgetUpcastFn","HIGH_PRIORITY","addElementCallback","FILTER_SKIP_TREE","DEFAULT_PRIORITY","_Resizer","DEFAULT_LFR_EMBED_WIDGET_TPL","EMBED_ALIGNMENT","CENTER","LEFT","RIGHT","ALIGN_VALUES","CENTERED_EMBED_STYLE","getEmbedAlignment","embedAlignment","centeredEmbed","every","styleCheck","vendorPrefixes","vendorPrefix","removeEmbedAlignment","setEmbedAlignment","wrapperElement","parentElement","pwidth","JSON","parse","stringify","iframeElement","selectWidget","root","find","elementList","currentAlignment","currentElement","LFR_EMBED_WIDGET_TPL","providers","provider","scheme","generateEmbedContent","helpMessage","videoPlaybackDisabled","helpMessageIcon","Liferay","Util","getLexiconIconTpl","upcastWidget","iframe","embedContent","getOuterHtml","widgetFragment","fragment","fromHtml","showError","errorMsg","validProvider","embedId","_selectEmbedWidget","platformNotSupported","enterValidUrl","stylesJSON","_error","bounds","alignValue","selectedEmbed","sender","_DragEvent","editorBounds","_IMAGE_STYLE_ALIGNMEN","IMAGE_ALIGNMENT","IMAGE_STYLE_ALIGNMENT","_defineProperty","getImageAlignment","centeredImage","imageContainer","textAlign","removeImageAlignment","setImageAlignment","refreshCommands","brFiller","needsBrFiller","enterModeEmptyValue","1","2","3","_checkEmptyData","_removePlaceholderClass","editableNode","innerHtml","editorNode","selectionKeystroke","pxUnit","cssLength","getWidth","getBorderWidth","side","computed","borderMap","thin","medium","thick","getMasterPillarRow","$rows","maxCells","cellsCount","$elected","$tr","buildTableColumnPillars","pillars","pillarIndex","rtl","tBodies","tbodyPosition","getDocumentPosition","nextTd","colSpan","pillarLeft","pillarRight","pillarWidth","getPillarAtPosition","positionX","pillar","ColumnResizer","currentShift","leftShiftBoundary","leftSideCells","resizing","rightShiftBoundary","rightSideCells","isResizing","posX","resizerNewPosition","onMouseDown","resizeStart","columnIndex","buildTableMap","leftColumnCells","rightColumnCells","leftMinSize","Number","MAX_VALUE","rightMinSize","leftCell","rightCell","setOpacity","resizeEnd","resizeColumn","removeCustomData","_loop","leftOldWidth","rightOldWidth","tableWidth","sizeShift","getPageOffset","getDocumentElement","clearPillarsCache","dest","toElement","isInline","getCustomData","setCustomData","cellNodeRegex","getSelectedCells","retval","database","moveOutOfCellGuard","setMarker","nearestCell","walker","guard","dtd","clearAllMarkers","getFocusElementAfterDelCells","cellsToDelete","last","focusedCell","insertRow","getDocument","startRow","startRowIndex","rowIndex","lastCell","endRowIndex","rowSpan","endRow","cloneRow","nextRow","newRow","clone","insertAfter","cellIndex","deleteRows","selectionOrRow","rowsToDelete","mapRow","cellRowIndex","nextMapRow","cursorPosition","getCellColIndex","isStart","rowCells","colIndex","mapCell","getColumnsIndices","insertColumn","startCol","lastCol","cloneCol","nextCol","nextCell","insertedCells","deleteColumns","selectionOrCell","startColIndex","endColIndex","firstRowCells","insertCell","startElement","deleteCells","cellToFocus","placeCursorInCell","trimCell","bogus","getBogus","placeAtEnd","docInner","docOuter","collapse","cellInRow","tableMap","oRow","cellInCol","oCol","mergeCells","mergeDirection","isDetect","commonAncestor","mapHeight","mapWidth","startColumn","targetCell","rowspan","colspan","er","lastRowIndex","totalRowSpan","totalColSpan","frag","documentFragment","cellFirstChild","isBlockBoundary","whitespaces","moveChildren","trs","nodeList","tailTr","verticalSplitCell","newRowSpan","newCellRowSpan","newRowIndex","ceil","newCellTr","newCellRow","candidateCell","cellsInSameRow","horizontalSplitCell","newColSpan","newCellColSpan","cellsInSameCol","createDef","def","contextSensitive","addCmd","cmd","addFeature","aRows","aMap","oCell","iColSpan","iRowSpan","rs","cs","BUTTON_DEFS","generateButtonBridge","buttonDefinition","ButtonBridge","buttonCommand","buttonOnClick","_React$Component","buttonClassName","buttonDisplayName","buttonLabel","buttonType","iconStyle","cssStyle","skin","getIconStyle","cssStyleParts","backgroundPosition","backgroundSize","displayName","UI_BUTTON","beforeInit","ui","addButton","addHandler","MENUBUTTON_DEFS","generateMenuButtonBridge","menuButtonName","menuButtonDefinition","MenuButtonBridge","panelMenuButtonDisplayName","_getMenuItems","onMenu","menuItems","menuItem","getMenuItem","menuItemDefinition","definition","menuItemState","UI_MENU_BUTTON","addMenuButton","UI_MENUBUTTON","groups","groupsOrder","menuGroups","addMenuGroup","order","addMenuItem","group","addMenuItems","definitions","itemName","removeMenuItem","PANEL_MENU_DEFS","generatePanelMenuButtonBridge","panelMenuButtonName","panelMenuButtonDefinition","PanelMenuButtonBridge","panel","_getPanel","panelMenuButtonOnBlock","onBlock","blockElement","getHtml","UI_PANELBUTTON","addPanelMenuButton","RICH_COMBO_DEFS","generateRichComboBridge","richComboName","richComboDefinition","RichComboBridge","currentValue","editorCombo","currentTarget","_items","setValue","_setValue","onRender","_cacheValue","richComboLabel","_getItems","richCombo","UI_RICHCOMBO","addRichCombo","originalUIAddFn","typeHandler","handlers","_removeImage","nextRange","native","UI","_onDismissToolbarFocus","hidden","_onEditorInteraction","_onActionPerformed","_onEditorKey","_mousedownListener","_setUIHidden","_keyDownListener","prevProps","prevState","_getAvailableToolbarsMessage","ariaUpdate","_ariaUpdateTemplates","_getAriaUpdates","ariaUpdates","noToolbar","ariaUpdateNoToolbar","oneToolbar","ariaUpdateOneToolbar","manyToolbars","ariaUpdateManyToolbars","toolbarsNodeList","toolbarNames","_getAriaUpdateTemplate","domEvent","targetNode","_callChain","wat","ctor","reverse"],"mappings":"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","file":"alloy-editor-core-min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\nexport default function ButtonIcon({className = '', symbol}) {\n\treturn (\n\t\t<EditorContext.Consumer>\n\t\t\t{({editor}) => {\n\t\t\t\tconst nativeEditor = editor.get('nativeEditor');\n\t\t\t\tconst spritemap = nativeEditor.config.spritemap || '';\n\t\t\t\tconst path = `${spritemap}#${symbol}`;\n\t\t\t\tconst classNamePrefix = className ? ` ${className}` : '';\n\t\t\t\tconst combinedClassName = `ae-svg-icon${classNamePrefix}`;\n\n\t\t\t\treturn (\n\t\t\t\t\t<svg className={combinedClassName} height=\"18\" width=\"18\">\n\t\t\t\t\t\t<use href={path} />\n\t\t\t\t\t</svg>\n\t\t\t\t);\n\t\t\t}}\n\t\t</EditorContext.Consumer>\n\t);\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * React context to avoid explicitly passing the editor instance all\n * through the component hierarchy via props.\n */\nconst EditorContext = React.createContext({});\n\n/**\n * Helper that passes the editor context in via a prop.\n *\n * Context can only be accessed in `render()` and in lifecycle methods\n * (`componentDidMount()` etc). If a component needs to access context\n * elsewhere, such as in a constructor, the context needs to be passed\n * in via a prop.\n */\nEditorContext.toProps = Component => {\n\tconst forwardingComponent = React.forwardRef((props, ref) => (\n\t\t<EditorContext.Consumer>\n\t\t\t{context => <Component {...props} context={context} ref={ref} />}\n\t\t</EditorContext.Consumer>\n\t));\n\tforwardingComponent.key = Component.key;\n\treturn forwardingComponent;\n};\n\nexport default EditorContext;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nexport default WrappedComponent =>\n\tclass ButtonCommand extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t\t * @method execCommand\n\t\t */\n\t\texecCommand = data => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.execCommand(this.props.command, data);\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n *\n * @class ButtonStateClasses\n */\nexport default WrappedComponent =>\n\tclass ButtonStateClasses extends WrappedComponent {\n\t\t/**\n\t\t * Returns the list of state classes associated to the current element's state, according\n\t\t * to the results of the isActive method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStateClasses\n\t\t * @method getStateClasses\n\t\t * @return {String} A string with the state CSS classes.\n\t\t */\n\t\tgetStateClasses() {\n\t\t\tlet stateClasses = '';\n\n\t\t\t// Check for active state\n\t\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\t\tstateClasses += 'ae-button-pressed';\n\t\t\t}\n\n\t\t\treturn stateClasses;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides core language utilities.\n *\n * @class Lang\n */\nconst Lang = {\n\t/**\n\t * Check if the passed value is an array.\n\t *\n\t * @memberof Lang\n\t * @method isArray\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an array, false otherwise.\n\t * @static\n\t */\n\tisArray(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Check if the passed value is boolean.\n\t *\n\t * @memberof Lang\n\t * @method isBoolean\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is boolean, false otherwise.\n\t * @static\n\t */\n\tisBoolean(value) {\n\t\treturn typeof value === 'boolean';\n\t},\n\n\t/**\n\t * Check if the passed value is a function.\n\t *\n\t * @memberof Lang\n\t * @method isFunction\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a function, false otherwise.\n\t * @static\n\t */\n\tisFunction(value) {\n\t\treturn typeof value === 'function';\n\t},\n\n\t/**\n\t * Check if the passed value is NULL.\n\t *\n\t * @memberof Lang\n\t * @method isNull\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is NULL, false otherwise.\n\t * @static\n\t */\n\tisNull(value) {\n\t\treturn value === null;\n\t},\n\n\t/**\n\t * Check if the passed value is number.\n\t *\n\t * @memberof Lang\n\t * @method isNumber\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is number, false otherwise.\n\t * @static\n\t */\n\tisNumber(value) {\n\t\treturn typeof value === 'number' && isFinite(value);\n\t},\n\n\t/**\n\t * Check if the passed value is an object\n\t *\n\t * @memberof Lang\n\t * @method isObject\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is an object, false otherwise.\n\t * @static\n\t */\n\tisObject(value) {\n\t\tconst valueType = typeof value;\n\n\t\treturn value && (valueType === 'object' || Lang.isFunction(value));\n\t},\n\n\t/**\n\t * Check if the passed value is a string.\n\t *\n\t * @memberof Lang\n\t * @method isString\n\t * @param {Any} value The value which have to be checked.\n\t * @return {Boolean} True if the passed value is a string, false otherwise.\n\t * @static\n\t */\n\tisString(value) {\n\t\treturn typeof value === 'string';\n\t},\n\n\t/**\n\t * Adds all properties from the supplier to the receiver.\n\t * The function will add all properties, not only these owned by the supplier.\n\t *\n\t * @memberof Lang\n\t * @method mix\n\t * @param {Object} receiver The object which will receive properties.\n\t * @param {Object} supplier The object which provides properties.\n\t * @return {Object} The modified receiver.\n\t * @static\n\t */\n\tmix(receiver, supplier) {\n\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\tfor (const key in supplier) {\n\t\t\tif (hasOwnProperty.call(supplier, key)) {\n\t\t\t\treceiver[key] = supplier[key];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Converts value to Integer.\n\t *\n\t * @memberof Lang\n\t * @method toInt\n\t * @param {Any} value The value which have to be converted to Integer.\n\t * @return {Integer} The converted value.\n\t * @static\n\t */\n\ttoInt(value) {\n\t\treturn parseInt(value, 10);\n\t},\n};\n\nexport default Lang;\n","(function() { module.exports = window[undefined]; }());","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tlet style = this.props.style;\n\n\t\t\tif (Lang.isString(style)) {\n\t\t\t\tconst parts = style.split('.');\n\t\t\t\tlet currentMember = this.context.editor.get('nativeEditor')\n\t\t\t\t\t.config;\n\t\t\t\tlet property = parts.shift();\n\n\t\t\t\twhile (\n\t\t\t\t\tproperty &&\n\t\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t\t) {\n\t\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\t\tproperty = parts.shift();\n\t\t\t\t}\n\n\t\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\t\tstyle = currentMember;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._style = new CKEDITOR.style(style);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis._style = null;\n\t\t}\n\n\t\t/**\n\t\t * Returns instance of CKEDITOR.style which represents the current button style.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method getStyle\n\t\t * @return {CKEDITOR.style} The current style representation.\n\t\t */\n\t\tgetStyle() {\n\t\t\treturn this._style;\n\t\t}\n\n\t\t/**\n\t\t * Checks if style is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @method isActive\n\t\t * @return {Boolean} True if style is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\tconst elementPath = editor.elementPath();\n\t\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t\t}\n\t};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to determine if\n * a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nexport default WrappedComponent =>\n\tclass ButtonCommandActive extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Checks if the command is active in the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommandActive\n\t\t * @method isActive\n\t\t * @return {Boolean} True if the command is active, false otherwise.\n\t\t */\n\t\tisActive() {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst command = editor.getCommand(this.props.command);\n\n\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nexport default WrappedComponent =>\n\tclass WidgetFocusManager extends WrappedComponent {\n\t\t/**\n\t\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidMount\n\t\t */\n\t\tcomponentDidMount() {\n\t\t\tif (Lang.isFunction(super.componentDidMount)) {\n\t\t\t\tsuper.componentDidMount();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t\t * Refreshes the descendants list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method componentDidUpdate\n\t\t */\n\t\tcomponentDidUpdate() {\n\t\t\tif (Lang.isFunction(super.componentDidUpdate)) {\n\t\t\t\tsuper.componentDidUpdate();\n\t\t\t}\n\n\t\t\tthis._refresh();\n\t\t}\n\n\t\t/**\n\t\t * Focuses the current active descendant.\n\t\t *\n\t\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method focus\n\t\t */\n\t\tfocus = event => {\n\t\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\t\tthis._activeDescendant\n\t\t\t\t\t];\n\t\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t\t// but the div element, which contains the button.\n\t\t\t\t\tif (\n\t\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._descendants.indexOf(\n\t\t\t\t\t\t\t\tdocument.activeElement\n\t\t\t\t\t\t\t) === -1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t\t * @method handleKey\n\t\t */\n\t\thandleKey = event => {\n\t\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\t\tif (action.type) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t */\n\t\tmoveFocus(direction) {\n\t\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\t\tthis._moveFocus(direction);\n\t\t}\n\n\t\t/**\n\t\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t\t * should produce.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusAction\n\t\t * @param {object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} An action object with type and direction properties.\n\t\t */\n\t\t_getFocusAction(event) {\n\t\t\tconst action = {\n\t\t\t\ttype: ACTION_NONE,\n\t\t\t};\n\n\t\t\tif (this.props.keys) {\n\t\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\t\tif (direction) {\n\t\t\t\t\taction.direction = direction;\n\t\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t\t}\n\n\t\t\t\tconst dismissAction = this._getFocusDismissAction(\n\t\t\t\t\tevent,\n\t\t\t\t\tdirection\n\t\t\t\t);\n\n\t\t\t\tif (dismissAction.dismiss) {\n\t\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn action;\n\t\t}\n\n\t\t/**\n\t\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusDismissAction\n\t\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t\t */\n\t\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\t\tconst dismissAction = {\n\t\t\t\tdirection: focusMoveDirection,\n\t\t\t\tdismiss: false,\n\t\t\t};\n\n\t\t\tif (this.props.onDismiss) {\n\t\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissNext)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis._isValidKey(event.keyCode, this.props.keys.dismissPrev)\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t\t!this.props.circular &&\n\t\t\t\t\tfocusMoveDirection\n\t\t\t\t) {\n\t\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn dismissAction;\n\t\t}\n\n\t\t/**\n\t\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t\t * shift key modifier, the direction of the movement is inverted.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _getFocusMoveDirection\n\t\t * @param {Object} event The Keyboard event.\n\t\t * @protected\n\t\t * @return {Number} The computed direction of the expected focus movement.\n\t\t */\n\t\t_getFocusMoveDirection(event) {\n\t\t\tlet direction = DIRECTION_NONE;\n\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\t\tdirection = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\t\tdirection = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (event.shifKey) {\n\t\t\t\tdirection *= -1;\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given keyCode is valid for the given set of keys.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t\t * @param {Number} keyCode An event keyCode.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t\t */\n\t\t_isValidKey(keyCode, keys) {\n\t\t\treturn Lang.isArray(keys)\n\t\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t\t: keyCode === keys;\n\t\t}\n\n\t\t/**\n\t\t * Indicates if a given element is valid for focus management. User input elements such as\n\t\t * input, select or textarea are excluded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _isValidKey\n\t\t * @param {DOMNode} element A DOM element.\n\t\t * @protected\n\t\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t\t */\n\t\t_isValidTarget(element) {\n\t\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\t\treturn (\n\t\t\t\ttagName !== 'input' &&\n\t\t\t\ttagName !== 'select' &&\n\t\t\t\ttagName !== 'textarea'\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Moves the focus among descendants in the especified direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _moveFocus\n\t\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t\t * @protected\n\t\t */\n\t\t_moveFocus(direction) {\n\t\t\tconst numDescendants = this._descendants.length;\n\n\t\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\t\tthis._activeDescendant += direction;\n\n\t\t\tif (this.props.circular) {\n\t\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t\t// same way for negative numbers\n\t\t\t\tthis._activeDescendant =\n\t\t\t\t\t((this._activeDescendant % numDescendants) +\n\t\t\t\t\t\tnumDescendants) %\n\t\t\t\t\tnumDescendants;\n\t\t\t} else {\n\t\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\t\tdescendant.setAttribute('tabIndex', 0);\n\t\t\tdescendant.focus();\n\t\t}\n\n\t\t/**\n\t\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @method _refresh\n\t\t * @protected\n\t\t */\n\t\t_refresh() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\t\tthis.props.descendants\n\t\t\t\t);\n\n\t\t\t\tlet priorityDescendants = [];\n\n\t\t\t\tthis._descendants = [];\n\n\t\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tthis._descendants = priorityDescendants.concat(\n\t\t\t\t\tthis._descendants\n\t\t\t\t);\n\n\t\t\t\tthis._activeDescendant = 0;\n\n\t\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\t\tthis.focus();\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nexport default WrappedComponent =>\n\tclass ButtonKeystroke extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillMount\n\t\t */\n\t\tcomponentWillMount() {\n\t\t\tif (Lang.isFunction(super.componentWillMount)) {\n\t\t\t\tsuper.componentWillMount();\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst keystroke = this.props.keystroke;\n\n\t\t\tconst commandName = `keystroke:${keystroke.name}`;\n\n\t\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\t\tif (!command) {\n\t\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\t\texec: function(editor) {\n\t\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this),\n\t\t\t\t});\n\n\t\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t\t}\n\n\t\t\tthis._defaultKeystrokeCommand =\n\t\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @method componentWillUnmount\n\t\t */\n\t\tcomponentWillUnmount() {\n\t\t\tif (Lang.isFunction(super.componentWillUnmount)) {\n\t\t\t\tsuper.componentWillUnmount();\n\t\t\t}\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.setKeystroke(\n\t\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t\t);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ButtonDropdown class provides markup and keyboard navigation behaviour to a dropdown\n * opened from a button.\n *\n * @class ButtonDropdown\n */\nclass ButtonDropdown extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the dropdown in the configuration.\n\t *\n\t * @default dropdown\n\t * @memberof ButtonDropdown\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'dropdown';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonDropdown\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul className=\"ae-listbox\" role=\"listbox\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WidgetFocusManager(ButtonDropdown);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\n\n/**\n * The ButtonCommandsList class provides functionality for showing a list of commands that can be\n * executed to the current selection..\n *\n * @class ButtonCommandsList\n * @uses WidgetFocusManager\n */\nclass ButtonCommandsList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandsList\n\t * @memberof ButtonCommandsList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandsList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._ref = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._ref.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-arrow-box ae-arrow-box-top-left ae-dropdown\"\n\t\t\t\tonFocus={this.focus}\n\t\t\t\tonKeyDown={this.handleKey}\n\t\t\t\tref={this._ref}\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<ul\n\t\t\t\t\tclassName=\"ae-listbox\"\n\t\t\t\t\tid={this.props.listId}\n\t\t\t\t\trole=\"listbox\">\n\t\t\t\t\t{this._renderActions(this.props.commands)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonCommandListItem with the description of the row action that will be executed.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandsList\n\t * @method _renderActions\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonCommandListItem class\n\t */\n\t_renderActions(commands) {\n\t\tlet items;\n\n\t\tif (commands && commands.length) {\n\t\t\titems = commands.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.command} role=\"option\">\n\t\t\t\t\t\t<ButtonCommandListItem\n\t\t\t\t\t\t\tcommand={item.command}\n\t\t\t\t\t\t\tdescription={\n\t\t\t\t\t\t\t\ttypeof item.label === 'string'\n\t\t\t\t\t\t\t\t\t? item.label\n\t\t\t\t\t\t\t\t\t: item.label()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ticon={item.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonCommandsList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style implementation for a\n * button based on the `applyStyle` and `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following methods which can be obtained\n * out of the box using the {{#crossLink \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nexport default WrappedComponent =>\n\tclass ButtonActionStyle extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Removes or applies the component style to the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonActionStyle\n\t\t * @method applyStyle\n\t\t */\n\t\tapplyStyle = () => {\n\t\t\tif (\n\t\t\t\tLang.isFunction(this.isActive) &&\n\t\t\t\tLang.isFunction(this.getStyle)\n\t\t\t) {\n\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\teditor.getSelection().lock();\n\n\t\t\t\tif (this.isActive()) {\n\t\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t\t} else {\n\t\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t\t}\n\n\t\t\t\teditor.getSelection().unlock();\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t}\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonsStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\n\n/**\n * The ButtonStylesList class provides functionality for showing a list of styles that can be\n * applied to the current selection..\n *\n * @class ButtonStylesList\n * @uses WidgetFocusManager\n */\nclass ButtonStylesList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowRemoveStylesItem: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @memberof ButtonStylesList\n\t * @static\n\t * @property {String} key\n\t * @default buttonStylesList\n\t */\n\tstatic key = 'buttonStylesList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the list node to allow keyboard interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst blockStyles = [];\n\t\tconst inlineStyles = [];\n\t\tconst objectStyles = [];\n\n\t\tthis.props.styles.forEach(item => {\n\t\t\tconst style = new CKEDITOR.style(item.style);\n\n\t\t\tif (style.type === CKEDITOR.STYLE_BLOCK) {\n\t\t\t\tblockStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_INLINE) {\n\t\t\t\tinlineStyles.push(item);\n\t\t\t} else if (style.type === CKEDITOR.STYLE_OBJECT) {\n\t\t\t\tobjectStyles.push(item);\n\t\t\t}\n\t\t});\n\n\t\tthis._blockStyles = blockStyles;\n\t\tthis._inlineStyles = inlineStyles;\n\t\tthis._objectStyles = objectStyles;\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet removeStylesItem;\n\n\t\tif (this.props.showRemoveStylesItem) {\n\t\t\tremoveStylesItem = (\n\t\t\t\t<ButtonStylesListItemRemove\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown {...this.props}>\n\t\t\t\t{removeStylesItem}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.blockStyles}\n\t\t\t\t\tstyles={this._blockStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._blockStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.inlineStyles}\n\t\t\t\t\tstyles={this._inlineStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._inlineStyles)}\n\n\t\t\t\t<ButtonsStylesListHeader\n\t\t\t\t\tname={AlloyEditor.Strings.objectStyles}\n\t\t\t\t\tstyles={this._objectStyles}\n\t\t\t\t/>\n\t\t\t\t{this._renderStylesItems(this._objectStyles)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Renders instances of ButtonStylesListItem with the preview of the correspondent block, inline or object styles.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesList\n\t * @method _renderStylesItems\n\t * @param {Array} styles List of styles for which preview should be rendered.\n\t * @protected\n\t * @return {Array} Rendered instances of ButtonStylesListItem class\n\t */\n\t_renderStylesItems(styles) {\n\t\tlet items;\n\n\t\tif (styles && styles.length) {\n\t\t\titems = styles.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key={item.name} role=\"option\">\n\t\t\t\t\t\t<ButtonStylesListItem\n\t\t\t\t\t\t\tactiveStyle={this.props.activeStyle}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tstyle={item.style}\n\t\t\t\t\t\t\tstyleFn={item.styleFn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonStylesList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nexport default WrappedComponent =>\n\tclass WidgetDropdown extends WrappedComponent {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method componentWillReceiveProps\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tdropdownTrigger: null,\n\t\t\t\titemDropdown: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with two more properties:\n\t\t * - expanded - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - toggleDropdown - function, which can be used by an widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method mergeDropdownProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to dropdown state.\n\t\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeDropdownProps = (obj, itemKey) => {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Sets the active dropdown of the widget or discards the toggled item from the state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetDropdown\n\t\t * @method toggleDropdown\n\t\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t\t */\n\t\ttoggleDropdown = (itemDropdown, toggleDirection) => {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\t\titemDropdown:\n\t\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t\t: null,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nexport default WrappedComponent =>\n\tclass WidgetExclusive extends WrappedComponent {\n\t\t/**\n\t\t * Cancels the exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method cancelExclusive\n\t\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t\t */\n\t\tcancelExclusive(itemExclusive) {\n\t\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\t\tthis.setState({\n\t\t\t\t\titemExclusive: null,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Lifecycle. Invoked when a component is receiving new props.\n\t\t * This method is not called for the initial render.\n\t\t * Calling this.setState() within this function will not trigger an additional render.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method componentWillReceiveProps\n\t\t * @param {Object} nextProps Object containing the current set of properties.\n\t\t */\n\t\tcomponentWillReceiveProps(nextProps) {\n\t\t\tif (Lang.isFunction(super.componentWillReceiveProps)) {\n\t\t\t\tsuper.componentWillReceiveProps(nextProps);\n\t\t\t}\n\n\t\t\t// Receiving properties means that the component is being re-rendered.\n\t\t\t// Re-rendering is triggered by editorInteraction, so we have to\n\t\t\t// reset the exclusive state and render the UI according to the new selection.\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Filters the items and returns only those with exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method filterExclusive\n\t\t * @param {Array} items The widgets to be filtered.\n\t\t * @return {Array|Object} The item with executive state.\n\t\t */\n\t\tfilterExclusive(items) {\n\t\t\treturn items.filter(item => {\n\t\t\t\tif (this.state.itemExclusive) {\n\t\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Merges the provided object with three more properties:\n\t\t * - cancelExclusive - function, which can be used by a widget in order to cancel executive state.\n\t\t * - renderExclusive - boolean flag which indicates if an widget should be rendered exclusively.\n\t\t * - requestExclusive - function, which can be used by a widget in order to obtain exclusive state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method mergeExclusiveProps\n\t\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t\t *    to exclusive state.\n\t\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t\t * @return {Object} The merged object.\n\t\t */\n\t\tmergeExclusiveProps(obj, itemKey) {\n\t\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Requests and sets exclusive state of an widget.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetExclusive\n\t\t * @method requestExclusive\n\t\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t\t */\n\t\trequestExclusive = itemExclusive => {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive,\n\t\t\t});\n\t\t};\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\n\n/**\n * The ButtonLinkEdit class provides functionality for creating and editing a link in a document.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEdit\n * @uses WidgetDropdown\n * @uses WidgetFocusManager\n */\nclass ButtonLinkEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tappendProtocol: true,\n\t\tautocompleteUrl: '',\n\t\tcircular: true,\n\t\tcustomIndexStart: true,\n\t\tdefaultLinkTarget: '',\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t\tshowTargetSelector: true,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkEdit\n\t * @memberof ButtonLinkEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this._getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tthis._focusLinkInput();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this._getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet targetSelector = {\n\t\t\tallowedTargets: this.props.allowedTargets,\n\t\t\teditor: this.context.editor,\n\t\t\thandleLinkTargetChange: this._handleLinkTargetChange,\n\t\t\tselectedTarget:\n\t\t\t\tthis.state.linkTarget || AlloyEditor.Strings.linkTargetDefault,\n\t\t};\n\n\t\ttargetSelector = this.mergeDropdownProps(\n\t\t\ttargetSelector,\n\t\t\tButtonLinkTargetEdit.key\n\t\t);\n\n\t\tlet autocompleteDropdown;\n\n\t\tif (this.props.data) {\n\t\t\tlet dataFn = this.props.data;\n\n\t\t\tif (!Lang.isFunction(dataFn)) {\n\t\t\t\tconst items = this.props.data;\n\n\t\t\t\tdataFn = () => items;\n\t\t\t}\n\n\t\t\tlet autocompleteDropdownProps = {\n\t\t\t\tautocompleteSelected: this.state.autocompleteSelected,\n\t\t\t\tdata: dataFn,\n\t\t\t\teditor: this.context.editor,\n\t\t\t\thandleLinkAutocompleteClick: this._handleLinkAutocompleteClick,\n\t\t\t\tonDismiss: this.props.toggleDropdown,\n\t\t\t\tsetAutocompleteState: this._setAutocompleteState,\n\t\t\t\tterm: this.state.linkHref,\n\t\t\t};\n\n\t\t\tautocompleteDropdownProps = this.mergeDropdownProps(\n\t\t\t\tautocompleteDropdownProps,\n\t\t\t\tButtonLinkAutocompleteList.key\n\t\t\t);\n\n\t\t\tautocompleteDropdown = (\n\t\t\t\t<ButtonLinkAutocompleteList {...autocompleteDropdownProps} />\n\t\t\t);\n\t\t}\n\n\t\tlet buttonClearLink;\n\n\t\tif (this.state.linkHref) {\n\t\t\tbuttonClearLink = (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\tconst placeholderProp = {};\n\n\t\tif (!CKEDITOR.env.ie && AlloyEditor.Strings) {\n\t\t\tplaceholderProp.placeholder = AlloyEditor.Strings.editLink;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.removeLink}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.remove}>\n\t\t\t\t\t<ButtonIcon symbol=\"chain-broken\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t{this.props.showTargetSelector && (\n\t\t\t\t\t\t<ButtonLinkTargetEdit {...targetSelector} />\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"ae-container-input\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\t{...placeholderProp}\n\t\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{autocompleteDropdown}\n\t\t\t\t\t</div>\n\t\t\t\t\t{buttonClearLink}\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._updateLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _getInitialState\n\t * @protected\n\t * @return {Object}\n\t */\n\t_getInitialState() {\n\t\t// Can't access context from contructor, so get editor from props.\n\t\tconst {editor} = this.props.context;\n\t\tconst {defaultLinkTarget} = this.props;\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\teditor.get('nativeEditor')\n\t\t).getFromSelection();\n\t\tconst href = (link && link.getAttribute('href')) || '';\n\t\tconst target =\n\t\t\t(link && link.getAttribute('target')) || defaultLinkTarget;\n\n\t\treturn {\n\t\t\tautocompleteSelected: false,\n\t\t\telement: link,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t\ttarget,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t\tlinkTarget: target,\n\t\t};\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput() {\n\t\tconst instance = this;\n\n\t\tconst focusLinkEl = function() {\n\t\t\tinstance.linkInput.current.focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusLinkEl);\n\t\t} else {\n\t\t\tsetTimeout(focusLinkEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13 || event.keyCode === 27) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === 13) {\n\t\t\tthis._updateLink();\n\t\t} else if (event.keyCode === 40) {\n\t\t\tthis.setState({\n\t\t\t\tautocompleteSelected: true,\n\t\t\t});\n\t\t} else if (event.keyCode === 27) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tnew CKEDITOR.Link(editor).advanceSelection();\n\n\t\t\tthis.context.editor\n\t\t\t\t.get('nativeEditor')\n\t\t\t\t.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when the link target changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkTargetChange\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkTargetChange = event => {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkTarget: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t};\n\n\t/**\n\t * Updates the component state when an autocomplete link result is selected by user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _handleLinkAutocompleteClick\n\t * @param {SyntheticEvent} event The click event.\n\t * @protected\n\t */\n\t_handleLinkAutocompleteClick(event) {\n\t\tthis.setState({\n\t\t\titemDropdown: null,\n\t\t\tlinkHref: event.target.getAttribute('data-value'),\n\t\t});\n\n\t\tthis._focusLinkInput();\n\t}\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href and that either that or the link target are different\n\t * from the original link.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} [description]\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\t(this.state.linkHref !== this.state.initialLink.href ||\n\t\t\t\tthis.state.linkTarget !== this.state.initialLink.target);\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the link in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _removeLink\n\t * @protected\n\t */\n\t_removeLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\t\tconst selection = editor.getSelection();\n\t\tconst bookmarks = selection.createBookmarks();\n\n\t\tlinkUtils.remove(this.state.element, {advance: true});\n\n\t\tselection.selectBookmarks(bookmarks);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Update autocompleteSelected state to focus and select autocomplete´s dropdown\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _setAutocompleteState\n\t * @protected\n\t */\n\t_setAutocompleteState(state) {\n\t\tthis.setState({\n\t\t\tautocompleteSelected: state.selected,\n\t\t});\n\t}\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkEdit\n\t * @method _updateLink\n\t * @protected\n\t */\n\t_updateLink = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {\n\t\t\tappendProtocol: this.props.appendProtocol,\n\t\t});\n\t\tlet linkAttrs = {\n\t\t\ttarget: this.state.linkTarget || null,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (this.state.linkHref) {\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = this.state.linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tif (!this.state.linkTarget) linkAttrs = {};\n\n\t\t\t\tlinkUtils.create(\n\t\t\t\t\tthis.state.linkHref,\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(\n\tWidgetDropdown(WidgetFocusManager(ButtonLinkEdit))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * ButtonCfgProps is a class that provides a mergeButtonCfgProps method for\n * merging React props and the native CKEDITOR's buttonCfg.\n *\n * @class ButtonProps\n */\nexport default WrappedComponent =>\n\tclass ButtonProps extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Merges the properties, passed to the current component with user's configuration\n\t\t * via `buttonCfg` property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @method mergeButtonCfgProps\n\t\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t\t * button. If not passed, the user configuration will be merged with `this.props`\n\t\t * @return {Object} The merged properties\n\t\t */\n\t\tmergeButtonCfgProps(props = this.props) {\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\t\treturn CKEDITOR.tools.merge(props, buttonCfg['linkEdit']);\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons provides a list of buttons which have to be displayed\n * on the current toolbar depending on user preferences and given state.\n *\n * @class ToolbarButtons\n */\nexport default WrappedComponent =>\n\tclass ToolbarButtons extends WrappedComponent {\n\t\tstatic contextType = EditorContext;\n\n\t\t/**\n\t\t * Lifecycle. Returns the default values of the properties used in the\n\t\t * toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getDefaultProps\n\t\t */\n\t\tstatic defaultProps = {\n\t\t\t...WrappedComponent.defaultProps,\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\n\t\t/**\n\t\t * Cancels an scheduled animation frame.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method cancelAnimation\n\t\t */\n\t\tcancelAnimation() {\n\t\t\tif (this._animationFrameId) {\n\t\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Provides functionality for displaying toolbar Arrow box on top or on bottom of the toolbar\n\t\t * depending on the point of user interaction with the editor.\n\t\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t\t * on the getInteractionPoint method to calculate the selection direction.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getArrowBoxClasses\n\t\t * @return {String} A string with the arrow box CSS classes.\n\t\t */\n\t\tgetArrowBoxClasses() {\n\t\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\n\t\t\treturn arrowBoxClasses;\n\t\t}\n\n\t\t/**\n\t\t * Returns an object which contains the position of the element in page coordinates,\n\t\t * restricted to fit to given viewport.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getConstrainedPosition\n\t\t * @param {Object} attrs The following properties, provided as numbers:\n\t\t * - height\n\t\t * - left\n\t\t * - top\n\t\t * - width\n\t\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t\t * - width\n\t\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t\t * element.\n\t\t */\n\t\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\t\tviewPaneSize =\n\t\t\t\tviewPaneSize ||\n\t\t\t\tnew CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\t\tlet x = attrs.left;\n\t\t\tlet y = attrs.top;\n\n\t\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t\t}\n\n\t\t\tif (y < 0) {\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position, in page coordinates, according to which a toolbar should appear.\n\t\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t\t *\n\t\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t\t * the selection.\n\t\t *\n\t\t * @instance\n\t\t * @method getInteractionPoint\n\t\t * @return {Object} An Object which contains the following properties:\n\t\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t */\n\t\tgetInteractionPoint() {\n\t\t\tconst eventPayload = this.props.editorEvent\n\t\t\t\t? this.props.editorEvent.data\n\t\t\t\t: null;\n\n\t\t\tif (!eventPayload) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectionData = eventPayload.selectionData;\n\n\t\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\t\tconst pos = {\n\t\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\t\ty: selectionData.region.top,\n\t\t\t};\n\n\t\t\tlet direction = selectionData.region.direction;\n\n\t\t\tconst endRect = selectionData.region.endRect;\n\n\t\t\tconst startRect = selectionData.region.startRect;\n\n\t\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t}\n\n\t\t\tlet x;\n\t\t\tlet y;\n\n\t\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t\t// otherwise show it on the middle of the selection.\n\n\t\t\tif (pos.x && pos.y) {\n\t\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t\t} else {\n\t\t\t\t\ty = Math.max(\n\t\t\t\t\t\tpos.y,\n\t\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.top;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdirection,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getXPoint\n\t\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated X point in page coordinates.\n\t\t */\n\t\t_getXPoint(selectionData, eventX) {\n\t\t\tconst region = selectionData.region;\n\n\t\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\t\tlet x;\n\n\t\t\tif (left < eventX && right > eventX) {\n\t\t\t\tx = eventX;\n\t\t\t} else {\n\t\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\t\tif (leftDist < rightDist) {\n\t\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\t\tx = left;\n\t\t\t\t} else {\n\t\t\t\t\tx = right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn x;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar.\n\t\t *\n\t\t * @instance\n\t\t * @method _getYPoint\n\t\t * @param {Object} nativeEvent The data about event is fired\n\t\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t\t * @protected\n\t\t * @return {Number} The calculated Y point in page coordinates.\n\t\t */\n\t\t_getYPoint(selectionData, nativeEvent) {\n\t\t\tlet y = 0;\n\n\t\t\tif (selectionData && nativeEvent) {\n\t\t\t\tconst elementTarget = new CKEDITOR.dom.element(\n\t\t\t\t\tnativeEvent.target\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\telementTarget.$ &&\n\t\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t\t) {\n\t\t\t\t\ty =\n\t\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t\t} else {\n\t\t\t\t\ty = selectionData.region.bottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn y;\n\t\t}\n\n\t\t/**\n\t\t * Returns the position of the toolbar taking in consideration the\n\t\t * {{#crossLink \"ToolbarButtons/gutter:attribute\"}}{{/crossLink}} attribute.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @protected\n\t\t * @method  getWidgetXYPoint\n\t\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t\t */\n\t\tgetWidgetXYPoint(left, top, direction) {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tconst gutter = this.props.gutter;\n\n\t\t\tif (\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t\t) {\n\t\t\t\tleft = left - gutter.left - domNode.offsetWidth / 2;\n\n\t\t\t\ttop =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t\t} else if (\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t\t) {\n\t\t\t\tleft =\n\t\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t\t}\n\n\t\t\tif (left < 0) {\n\t\t\t\tleft = 0;\n\t\t\t}\n\n\t\t\tif (top < 0) {\n\t\t\t\ttop = 0;\n\t\t\t}\n\n\t\t\treturn [left, top];\n\t\t}\n\n\t\t/**\n\t\t * Returns true if the toolbar is visible, false otherwise\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method isVisible\n\t\t * @return {Boolean} True if the toolbar is visible, false otherwise\n\t\t */\n\t\tisVisible() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (domNode) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Moves a toolbar from a starting point to a destination point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method moveToPoint\n\t\t * @param  {Object} startPoint The starting point for the movement.\n\t\t * @param  {Object} endPoint The destination point for the movement.\n\t\t */\n\t\tmoveToPoint(startPoint, endPoint) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(\n\t\t\t\tReactDOM.findDOMNode(this)\n\t\t\t);\n\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: startPoint[0] + 'px',\n\t\t\t\ttop: startPoint[1] + 'px',\n\t\t\t\topacity: 0,\n\t\t\t\tpointerEvents: 'none',\n\t\t\t});\n\n\t\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(() => {\n\t\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\t\topacity: 1,\n\t\t\t\t});\n\n\t\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdomElement.setStyles({\n\t\t\t\t\t\tpointerEvents: '',\n\t\t\t\t\t});\n\t\t\t\t}, 150);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Shows the toolbar with the default animation transition.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method show\n\t\t */\n\t\tshow() {\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tif (!this.isVisible() && domNode) {\n\t\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\t\tif (interactionPoint) {\n\t\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\t\tlet finalX;\n\t\t\t\t\tlet finalY;\n\t\t\t\t\tlet initialX;\n\t\t\t\t\tlet initialY;\n\n\t\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\t\tfinalY = res.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t) {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinitialY =\n\t\t\t\t\t\t\tthis.props.selectionData.region.top + scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Updates the toolbar position based on the current interaction point.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method updatePosition\n\t\t */\n\t\tupdatePosition() {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\tif (interactionPoint && domNode) {\n\t\t\t\tconst uiNode =\n\t\t\t\t\tthis.context.editor.get('uiNode') || document.body;\n\t\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t\t10\n\t\t\t\t);\n\t\t\t\tconst totalWidth =\n\t\t\t\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\t\t\t\tconst scrollTop =\n\t\t\t\t\tuiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\t\tinteractionPoint.x,\n\t\t\t\t\tinteractionPoint.y,\n\t\t\t\t\tinteractionPoint.direction\n\t\t\t\t);\n\t\t\t\txy[1] += scrollTop;\n\n\t\t\t\tif (xy[0] < 0) {\n\t\t\t\t\txy[0] = 0;\n\t\t\t\t}\n\t\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t\t}\n\n\t\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\t\ttop: xy[1] + 'px',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Analyses the current selection and returns the buttons or button groups to be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @method getToolbarButtonGroups\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t\t */\n\t\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\treturn buttons.reduce((list, button) => {\n\t\t\t\tif (Array.isArray(button)) {\n\t\t\t\t\tlist.push(this.getToolbarButtons(button, additionalProps));\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\treturn this.getToolbarButtons(buttons, additionalProps);\n\t\t\t\t}\n\t\t\t}, []);\n\t\t}\n\n\t\t/**\n\t\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t\t * buttons should be present in a given state.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ToolbarButtons\n\t\t * @method getToolbarButtons\n\t\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t\t */\n\t\tgetToolbarButtons(buttons, additionalProps) {\n\t\t\tconst buttonProps = {};\n\n\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\t\tif (Lang.isFunction(buttons)) {\n\t\t\t\tbuttons = buttons.call(this) || [];\n\t\t\t}\n\n\t\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\t\tbuttons\n\t\t\t\t\t.filter(button => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map(button => {\n\t\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t\t] = CKEDITOR.tools.merge(\n\t\t\t\t\t\t\t\tbuttonCfg[button],\n\t\t\t\t\t\t\t\tbutton.cfg\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn button;\n\t\t\t\t\t})\n\t\t\t).map(function(button, index) {\n\t\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t\t{\n\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\t\ttabIndex:\n\t\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t: -1,\n\t\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t\t},\n\t\t\t\t\tbutton.key\n\t\t\t\t);\n\n\t\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\t\tif (additionalProps) {\n\t\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t\t}\n\n\t\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\t\treturn React.createElement(button, props);\n\t\t\t}, this);\n\n\t\t\treturn toolbarButtons;\n\t\t}\n\t};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Sets the prototype, constructor and superclass properties to support an inheritance strategy\n * that can chain constructors and methods. Static members will not be inherited.\n *\n * @memberof OOP\n * @method extend\n * @param {Function} receiver The class which will extend another class.\n * @param {Function} supplier The class which will provide the properties the child class.\n * @param {Object} protoProps Prototype properties to add/override.\n * @param {Object} staticProps Static properties to add/overwrite.\n * @return {Function} The extended class.\n * @static\n */\nconst extend = function(receiver, supplier, protoProps, staticProps) {\n\tif (!supplier || !receiver) {\n\t\tthrow new Error('extend failed, verify dependencies');\n\t}\n\n\tconst supplierProto = supplier.prototype;\n\n\tconst receiverProto = Object.create(supplierProto);\n\treceiver.prototype = receiverProto;\n\n\treceiverProto.constructor = receiver;\n\treceiver.superclass = supplierProto;\n\n\t// assign constructor property\n\tif (\n\t\tsupplier !== Object &&\n\t\tsupplierProto.constructor === Object.prototype.constructor\n\t) {\n\t\tsupplierProto.constructor = supplier;\n\t}\n\n\t// add prototype overrides\n\tif (protoProps) {\n\t\tLang.mix(receiverProto, protoProps);\n\t}\n\n\t// add object overrides\n\tif (staticProps) {\n\t\tLang.mix(receiver, staticProps);\n\t}\n\n\treturn receiver;\n};\n\nexport default extend;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst _isRangeAtElementEnd = function(range, element) {\n\t// Finding if a range is at the end of an element is somewhat tricky\n\t// due to how CKEditor handles ranges. It might depend on whether a\n\t// source node inside the element is selected or not. For now, we\n\t// need to cover the following cases:\n\t//\n\t// - The text length of the element is the same as the endOffset of\n\t//   the range.\n\t// - Both start and end containers match the element and the start\n\t//   and end offsets are 1.\n\n\treturn (\n\t\telement.getText().length === range.endOffset ||\n\t\t(element.equals(range.startContainer) &&\n\t\t\telement.equals(range.endContainer) &&\n\t\t\trange.startOffset === range.endOffset &&\n\t\t\trange.endOffset === 1)\n\t);\n};\n\nconst embedSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'ae_embed'\n\t);\n};\n\nconst embedUrlSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\tselectionData.element &&\n\t\tselectionData.element.getAttribute('data-widget') === 'embedurl'\n\t);\n};\n\nconst headingTextSelectionTest = function(payload) {\n\tconst headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst selectionData = payload.data.selectionData;\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly() &&\n\t\tnativeEditor.elementPath().contains(headings)\n\t);\n};\n\nconst linkSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst range = nativeEditor.getSelection().getRanges()[0];\n\tconst selectionData = payload.data.selectionData;\n\n\tconst element = new CKEDITOR.Link(nativeEditor).getFromSelection();\n\tconst isSelectionEmpty = nativeEditor.isSelectionEmpty();\n\tconst elementIsNotImage = selectionData.element\n\t\t? selectionData.element.getName() !== 'img'\n\t\t: true;\n\n\treturn !!(\n\t\tisSelectionEmpty &&\n\t\telementIsNotImage &&\n\t\telement &&\n\t\telement.getText().length !== range.endOffset &&\n\t\telement &&\n\t\t!element.isReadOnly() &&\n\t\t!_isRangeAtElementEnd(range, element)\n\t);\n};\n\nconst imageSelectionTest = function(payload) {\n\tconst selectionData = payload.data.selectionData;\n\tconst element = selectionData.element;\n\tconst hasImage = !!element && !!element.findOne('img');\n\tconst isImage = !!element && element.getName() === 'img';\n\n\treturn !!(element && (hasImage || isImage));\n};\n\nconst textSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst selectionEmpty = nativeEditor.isSelectionEmpty();\n\n\tconst selectionData = payload.data.selectionData;\n\n\treturn !!(\n\t\t!selectionData.element &&\n\t\tselectionData.region &&\n\t\t!selectionEmpty &&\n\t\t!nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getCommonAncestor()\n\t\t\t.isReadOnly()\n\t);\n};\n\nconst tableSelectionTest = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\n\tconst table = new CKEDITOR.Table(nativeEditor);\n\tconst element = table.getFromSelection();\n\n\treturn !!(element && table.isEditable(element));\n};\n\nconst SelectionTest = {\n\tembed: embedSelectionTest,\n\tembedUrl: embedUrlSelectionTest,\n\theader: headingTextSelectionTest,\n\timage: imageSelectionTest,\n\tlink: linkSelectionTest,\n\ttable: tableSelectionTest,\n\ttext: textSelectionTest,\n};\n\nexport default SelectionTest;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonsStylesListHeader class provides the header of an list of style items.\n *\n * @class ButtonsStylesListHeader\n */\nclass ButtonsStylesListHeader extends React.Component {\n\tstatic key = 'buttonStylesListHeader';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonsStylesListHeader\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.styles && this.props.styles.length) {\n\t\t\treturn <span className=\"ae-list-header\">{this.props.name}</span>;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport default ButtonsStylesListHeader;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonStylesListItemRemove class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItemRemove\n */\nclass ButtonStylesListItemRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tremoveBlocks: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'pre'],\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItemRemove\n\t * @memberof ButtonStylesListItemRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItemRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<li role=\"option\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this._removeStyles}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t{AlloyEditor.Strings.normal}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t}\n\n\t/**\n\t * Removes all inline styles and configured block elements applied to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItemRemove\n\t * @method _removeStyles\n\t * @protected\n\t */\n\t_removeStyles = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.execCommand('removeFormat');\n\n\t\tthis.props.removeBlocks.forEach(blockItem => {\n\t\t\tconst blockStyle = new CKEDITOR.style({element: blockItem});\n\n\t\t\teditor.removeStyle(blockStyle);\n\t\t});\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonStylesListItemRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStyle from '../base/button-style';\n\n/**\n * The ButtonStylesListItem class provides functionality for previewing a style definition\n * inside a list and applying it to the current editor selection.\n *\n * @class ButtonStylesListItem\n * @uses ButtonActionStyle\n * @uses ButtonStyle\n */\nclass ButtonStylesListItem extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonStylesListItem\n\t * @memberof ButtonStylesListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonStylesListItem';\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\t// Styles with wildcard element (*) generate an empty tag in their preview < class=\"custom-class\" />.\n\t\t// We default to element span and remove the margins to obtain a more consistent set of previews.\n\t\tlet styleCfg = {\n\t\t\telement: 'span',\n\t\t\tstyles: {\n\t\t\t\tmargin: 0,\n\t\t\t},\n\t\t};\n\n\t\tstyleCfg = CKEDITOR.tools.merge(styleCfg, this.props.style);\n\n\t\tthis._preview = new CKEDITOR.style(styleCfg).buildPreview(\n\t\t\tthis.props.name\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\t// We need to use dangerouselySetInnterHTML since we're not in control of the style\n\t\t// preview that is generated by CKEditor.\n\t\tconst className =\n\t\t\tthis.props.name === this.props.activeStyle\n\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t: 'ae-toolbar-element';\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={className}\n\t\t\t\tdangerouslySetInnerHTML={{__html: this._preview}}\n\t\t\t\tonClick={this._onClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Applies the item style to the editor selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStylesListItem\n\t * @method _onClick\n\t * @protected\n\t */\n\t_onClick = () => {\n\t\tif (this.props.styleFn) {\n\t\t\tthis.props.styleFn();\n\t\t} else {\n\t\t\t// Typically, we want the style to be the only one applied to the current selection, so\n\t\t\t// we execute the 'removeFormat' command first. Note that block styles won't be cleaned.\n\t\t\t// However, this is consistent with other editors implementations of this feature.\n\t\t\tthis.context.editor.get('nativeEditor').execCommand('removeFormat');\n\n\t\t\tthis.applyStyle();\n\t\t}\n\t};\n}\n\nexport default ButtonActionStyle(ButtonStyle(ButtonStylesListItem));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/**\n * The ButtonCameraImage class takes photo from camera and inserts it to the content.\n *\n * @class ButtonCameraImage\n */\nclass ButtonCameraImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t */\n\tstatic defaultProps = {\n\t\tvideoWidth: 320,\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default cameraImage\n\t * @memberof ButtonCameraImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'cameraImage';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._buttonTakePhotoRef = React.createRef();\n\t\tthis._canvasContainerRef = React.createRef();\n\t\tthis._videoContainerRef = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses the take photo button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._buttonTakePhotoRef.current.focus();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._stream) {\n\t\t\tif (this._stream.stop) {\n\t\t\t\tthis._stream.stop();\n\t\t\t} else if (this._stream.getVideoTracks) {\n\t\t\t\tthis._stream.getVideoTracks().forEach(track => {\n\t\t\t\t\ttrack.stop();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._stream = null;\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst getUserMedia =\n\t\t\tnavigator.getUserMedia ||\n\t\t\tnavigator.webkitGetUserMedia ||\n\t\t\tnavigator.mozGetUserMedia ||\n\t\t\tnavigator.msGetUserMedia;\n\n\t\tgetUserMedia.call(\n\t\t\tnavigator,\n\t\t\t{\n\t\t\t\tvideo: true,\n\t\t\t\taudio: false,\n\t\t\t},\n\t\t\tthis._handleStreamSuccess,\n\t\t\tthis._handleStreamError\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"ae-camera\">\n\t\t\t\t<video ref={this._videoContainerRef}>\n\t\t\t\t\tVideo stream not available.\n\t\t\t\t</video>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-camera-shoot\"\n\t\t\t\t\tonClick={this.takePhoto}\n\t\t\t\t\tref={this._buttonTakePhotoRef}>\n\t\t\t\t\tTake photo\n\t\t\t\t</button>\n\t\t\t\t<canvas\n\t\t\t\t\tclassName=\"ae-camera-canvas\"\n\t\t\t\t\tref={this._canvasContainerRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Takes photo from the video stream and inserts in into editor's content.\n\t *\n\t * @fires ButtonCameraImage#imageCameraAdd\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method takePhoto\n\t */\n\ttakePhoto = () => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tconst context = canvasEl.getContext('2d');\n\n\t\tconst height = this._videoHeight;\n\t\tconst width = this.props.videoWidth;\n\n\t\tif (width && height) {\n\t\t\tcanvasEl.width = width;\n\t\t\tcanvasEl.height = height;\n\n\t\t\tcontext.drawImage(videoEl, 0, 0, width, height);\n\n\t\t\tconst imgURL = canvasEl.toDataURL('image/png');\n\n\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t'<img src=\"' + imgURL + '\">'\n\t\t\t);\n\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\teditor.insertElement(el);\n\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\teditor.fire('imageCameraAdd', el);\n\t\t}\n\t};\n\n\t/**\n\t * Displays error message in case of video stream capturing failure.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamError\n\t * @param {Event} error The fired event in case of error.\n\t * @protected\n\t */\n\t_handleStreamError = error => {\n\t\twindow.alert('An error occurred! ' + error);\n\t};\n\n\t/**\n\t * Starts streaming video in the video element and sets width/height to the video\n\t * and canvas elements.\n\t *\n\t * @instance\n\t * @memberof ButtonCameraImage\n\t * @method _handleStreamSuccess\n\t * @param {Object} stream The video stream\n\t * @protected\n\t */\n\t_handleStreamSuccess = stream => {\n\t\tconst videoEl = this._videoContainerRef.current;\n\t\tconst canvasEl = this._canvasContainerRef.current;\n\n\t\tvideoEl.addEventListener(\n\t\t\t'canplay',\n\t\t\t() => {\n\t\t\t\tlet height =\n\t\t\t\t\tvideoEl.videoHeight /\n\t\t\t\t\t(videoEl.videoWidth / this.props.videoWidth);\n\n\t\t\t\tif (isNaN(height)) {\n\t\t\t\t\theight = this.props.videoWidth / (4 / 3);\n\t\t\t\t}\n\n\t\t\t\tvideoEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tvideoEl.setAttribute('height', height);\n\t\t\t\tcanvasEl.setAttribute('width', this.props.videoWidth);\n\t\t\t\tcanvasEl.setAttribute('height', height);\n\n\t\t\t\tthis._videoHeight = height;\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis._stream = stream;\n\n\t\tif (navigator.mozGetUserMedia) {\n\t\t\tvideoEl.mozSrcObject = stream;\n\t\t} else {\n\t\t\tvideoEl.srcObject = stream;\n\t\t}\n\n\t\tvideoEl.play();\n\n\t\tthis._buttonTakePhotoRef.current.disabled = false;\n\t};\n\n\t/**\n\t * Fired when an image is being taken from the camera and added as an element to the editor.\n\t *\n\t * @event ButtonCameraImage#imageCameraAdd\n\t * @memberof ButtonCameraImage\n\t * @param {CKEDITOR.dom.element} el The created img element in editor.\n\t */\n}\n\nexport default ButtonCameraImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\n\n/**\n * The ButtonCommandListItem class is a UI class that renders a ButtonCommand that can be used inside\n * a list as an item, with a string representation of its behaviour.\n *\n * @class ButtonCommandListItem\n * @uses ButtonCommand\n */\nclass ButtonCommandListItem extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonCommandListItem\n\t * @memberof ButtonCommandListItem\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonCommandListItem';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={this.props.description}\n\t\t\t\tclassName={this._getClassName()}\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t{this.props.description}\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the class name of Widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandListItem\n\t * @method _getClassName\n\t * @protected\n\t * @return {String} The class name of the Widget.\n\t */\n\t_getClassName() {\n\t\tconst className = 'ae-container ae-toolbar-element';\n\n\t\treturn className;\n\t}\n}\n\nexport default ButtonCommand(ButtonCommandListItem);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedEdit class provides functionality for creating and editing an embed link in a document.\n * Provides UI for creating and editing an embed link.\n *\n * @class ButtonEmbedEdit\n */\nclass ButtonEmbedEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embedEdit\n\t * @memberof ButtonEmbedEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embedEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.linkInput = React.createRef();\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusLinkInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusLinkInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tthis.setState(this.getInitialState());\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet embed;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\tembed = selectedElement.findOne('[data-widget=\"ae_embed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst href = embed ? embed.getAttribute('data-ae-embed-url') : '';\n\n\t\treturn {\n\t\t\telement: embed,\n\t\t\tinitialLink: {\n\t\t\t\thref,\n\t\t\t},\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst clearLinkStyle = {\n\t\t\topacity: this.state.linkHref ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.deleteEmbed}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-remove\"\n\t\t\t\t\tdisabled={!this.state.element}\n\t\t\t\t\tonClick={this._removeEmbed}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.deleteEmbed}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-trash\" symbol=\"trash\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleLinkHrefChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={AlloyEditor.Strings.editLink}\n\t\t\t\t\t\tref={this.linkInput}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.linkHref}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-clear\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearLinkStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"times-clear\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedLink}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon className=\"ae-icon-svg-check\" symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink = () => {\n\t\tthis.setState({\n\t\t\tlinkHref: '',\n\t\t});\n\t};\n\n\t/**\n\t * Triggers the embedUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _embedLink\n\t * @protected\n\t */\n\t_embedLink = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\turl: this.state.linkHref,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _focusLinkInput\n\t * @protected\n\t */\n\t_focusLinkInput = () => {\n\t\tthis.linkInput.current.focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedLink();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\t\tthis.props.cancelExclusive();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _handleLinkHrefChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleLinkHrefChange = event => {\n\t\tthis.setState({\n\t\t\tlinkHref: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty href that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.linkHref &&\n\t\t\tthis.state.linkHref !== this.state.initialLink.href;\n\n\t\treturn validState;\n\t}\n\n\t/**\n\t * Removes the embed in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedEdit\n\t * @method _removeEmbed\n\t * @protected\n\t */\n\t_removeEmbed = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst embedWrapper = this.state.element.getAscendant(element => {\n\t\t\treturn element.hasClass('cke_widget_wrapper');\n\t\t});\n\n\t\tembedWrapper.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default EditorContext.toProps(ButtonEmbedEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonEmbedVideoEdit class provides functionality for changing text color in a document.\n *\n * @uses ButtonIcon\n *\n * @class ButtonEmbedVideoEdit\n */\nclass ButtonEmbedVideoEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'embedVideoEdit';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = this.getInitialState();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing. This should only happen if the component\n\t * is rendered in exclusive mode to prevent aggressive focus stealing.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tif (this.props.renderExclusive || this.props.manualSelection) {\n\t\t\t// We need to wait for the next rendering cycle before focusing to avoid undesired\n\t\t\t// scrolls on the page\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(this._focusVideoUrlInput);\n\t\t\t} else {\n\t\t\t\tsetTimeout(this._focusVideoUrlInput, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps() {\n\t\tconst newState = this.getInitialState();\n\n\t\tthis.setState({\n\t\t\tall: undefined,\n\t\t\tkeys: undefined,\n\t\t\tnew: newState,\n\t\t\told: undefined,\n\t\t});\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t * The return value will be used as the initial value of this.state.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\t// Can't access context from constructor, so get editor from props.\n\t\tconst editor = this.props.context.editor.get('nativeEditor');\n\t\tlet element;\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement) {\n\t\t\t\telement = selectedElement.findOne('[data-widget=\"videoembed\"]');\n\t\t\t}\n\t\t}\n\n\t\tconst videoURL = element\n\t\t\t? element.getAttribute('data-embed-video-url')\n\t\t\t: '';\n\n\t\treturn {\n\t\t\telement,\n\t\t\tinitialEmbed: {\n\t\t\t\tvideoURL,\n\t\t\t},\n\t\t\tvideoURL,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputPlaceholder = AlloyEditor.Strings.pasteVideoLink;\n\n\t\tconst clearVideoURLStyle = {\n\t\t\topacity: this.state.videoURL ? 1 : 0,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-embed-video-edit\">\n\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tonChange={this._handleVideoURLChange}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder={inputPlaceholder}\n\t\t\t\t\t\tref=\"linkInput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.videoURL}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.clearInput}\n\t\t\t\t\t\tclassName=\"ae-button ae-icon-remove\"\n\t\t\t\t\t\tonClick={this._clearLink}\n\t\t\t\t\t\tstyle={clearVideoURLStyle}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.clear}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdisabled={!this._isValidState()}\n\t\t\t\t\tonClick={this._embedVideoURL}\n\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Clears the link input. This only changes the component internal state, but does not\n\t * affect the link element of the editor. Only the _removeLink and _updateLink methods\n\t * are translated to the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _clearLink\n\t * @protected\n\t */\n\t_clearLink() {\n\t\tthis.setState({\n\t\t\tvideoURL: '',\n\t\t});\n\t}\n\n\t/**\n\t * Triggers the embedVideoUrl command to transform the link into an embed media object\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _embedVideoURL\n\t * @protected\n\t */\n\t_embedVideoURL = () => {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tnativeEditor.execCommand('embedUrl', {\n\t\t\ttype: 'video',\n\t\t\turl: this.state.videoURL,\n\t\t});\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the link button)\n\t\tthis.props.cancelExclusive();\n\t};\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _focusVideoUrlInput\n\t * @protected\n\t */\n\t_focusVideoUrlInput = () => {\n\t\tReactDOM.findDOMNode(this.refs.linkInput).focus();\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates/updates the link.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._embedVideoURL();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Updates the component state when the link input changes on user interaction.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbedVideoEdit\n\t * @method _handleVideoURLChange\n\t * @param {SyntheticEvent} event The change event.\n\t * @protected\n\t */\n\t_handleVideoURLChange = event => {\n\t\tthis.setState({\n\t\t\tvideoURL: event.target.value,\n\t\t});\n\t};\n\n\t/**\n\t * Verifies that the current link state is valid so the user can save the link. A valid state\n\t * means that we have a non-empty videoURL that's different from the original one.\n\t *\n\t * @instance\n\t * @memberof EmbedVideoEdit\n\t * @method _isValidState\n\t * @protected\n\t * @return {Boolean} True if the state is valid, false otherwise\n\t */\n\t_isValidState() {\n\t\tconst validState =\n\t\t\tthis.state.videoURL &&\n\t\t\tthis.state.videoURL !== this.state.initialEmbed.videoURL;\n\n\t\treturn validState;\n\t}\n}\n\nexport default EditorContext.toProps(ButtonEmbedVideoEdit);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonLinkAutocompleteList class provides functionality for showing a list of\n * items that can be selected for the link.\n *\n * @class ButtonLinkAutocompleteList\n * @uses WidgetFocusManager\n */\nclass ButtonLinkAutocompleteList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: false,\n\t\tdata: [],\n\t\tdelay: 100,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default buttonLinkAutocompleteList\n\t * @memberof ButtonLinkAutocompleteList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'buttonLinkAutocompleteList';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!nextProps.term || nextProps.term !== this.props.term) {\n\t\t\tclearTimeout(this._timeout);\n\n\t\t\tif (nextProps.term) {\n\t\t\t\tthis._timeout = setTimeout(this._updateItems, this.props.delay);\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: [],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (nextProps.autocompleteSelected) {\n\t\t\tsetTimeout(this.focus, 0);\n\t\t\tthis.props.setAutocompleteState({\n\t\t\t\tselected: false,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tclearTimeout(this._timeout);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the list.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (!this.props.expanded || !this.state.items.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonDropdown>\n\t\t\t\t{this._renderAutocompleteItems(this.state.items)}\n\t\t\t</ButtonDropdown>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.term !== this.props.term ||\n\t\t\tnextState.items !== this.state.items\n\t\t);\n\t}\n\n\t/**\n\t * Renders a set of list items for the provided items\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _renderAutocompleteItems\n\t * @param {Array} items List of autocomplete items to render\n\t * @protected\n\t * @return {Array} Rendered list item instances\n\t */\n\t_renderAutocompleteItems(items) {\n\t\titems = items || [];\n\n\t\tconst handleLinkAutocompleteClick = this.props\n\t\t\t.handleLinkAutocompleteClick;\n\n\t\treturn items.map(item => {\n\t\t\tconst className =\n\t\t\t\tthis.props.term === item.url\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={item.url} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={item.url}\n\t\t\t\t\t\tonClick={handleLinkAutocompleteClick}>\n\t\t\t\t\t\t{item.title}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the data according to {this.props.term} and calls setState() with the returned data\n\t *\n\t * @instance\n\t * @memberof ButtonLinkAutocompleteList\n\t * @method _updateItems\n\t * @protected\n\t */\n\t_updateItems() {\n\t\tif (!this.props.term) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = Promise.resolve(this.props.data(this.props.term));\n\n\t\tpromise.then(items => {\n\t\t\tif (items.length && !this.props.expanded) {\n\t\t\t\tthis.props.toggleDropdown();\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\titems,\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default WidgetFocusManager(ButtonLinkAutocompleteList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The LinkEditBrowse class provides functionality for creating and editing a link in a document,\n * and also allows to link to an existing file in DM.\n * Provides UI for creating, editing and removing a link.\n *\n * @class ButtonLinkEditBrowse\n */\nclass ButtonLinkEditBrowse extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'linkEditBrowse';\n\n\t/**\n\t *\n\t * @inheritDoc\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst link = new CKEDITOR.Link(\n\t\t\t// Can't access context from constructor, so get editor from props.\n\t\t\tthis.props.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\tconst href = link ? link.getAttribute('href') : '';\n\n\t\tthis.linkEditButtonRef = React.createRef();\n\n\t\tthis.state = {\n\t\t\telement: link,\n\t\t\tlinkHref: href,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ae-container-link-edit-browse\">\n\t\t\t\t<ButtonLinkEdit ref={this.linkEditButtonRef} {...this.props} />\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Browse\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._browseClick}\n\t\t\t\t\ttitle=\"browse\">\n\t\t\t\t\t<ButtonIcon symbol=\"folder\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Opens an item selector dialog.\n\t *\n\t * @protected\n\t * @method _browseClick\n\t */\n\t_browseClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst url = editor.config.documentBrowseLinkUrl;\n\t\tconst browseLinkCallback = editor.config.documentBrowseLinkCallback;\n\t\tconst linkTarget = this.linkEditButtonRef.current\n\t\t\t? this.linkEditButtonRef.current.state.linkTarget\n\t\t\t: '';\n\n\t\tconst changeLinkCallback = selectedItem => {\n\t\t\tthis._updateLink(\n\t\t\t\tselectedItem.value,\n\t\t\t\tlinkTarget,\n\t\t\t\tselectedItem.title\n\t\t\t);\n\t\t};\n\n\t\tif (Lang.isFunction(browseLinkCallback)) {\n\t\t\tbrowseLinkCallback.apply(null, [editor, url, changeLinkCallback]);\n\t\t}\n\t};\n\n\t/**\n\t * Updates the link in the editor element. If the element didn't exist previously, it will\n\t * create a new <a> element with the href specified in the link input.\n\t *\n\t * @protected\n\t * @method _updateLink\n\t * @param {String} linkHref href value for the link\n\t * @param {String} linkTarget target value for the link\n\t * @param {String} linkTitle if the link is a title that points to a wiki page (only works for creole)\n\t */\n\t_updateLink = (linkHref, linkTarget, linkTitle) => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst linkUtils = new CKEDITOR.Link(editor, {appendProtocol: false});\n\t\tconst linkAttrs = {\n\t\t\ttarget: linkTarget,\n\t\t};\n\t\tconst modifySelection = {advance: true};\n\n\t\tif (linkHref) {\n\t\t\tif (editor.plugins && editor.plugins.creole && !linkTitle) {\n\t\t\t\tlinkHref = location.origin + linkHref;\n\t\t\t}\n\n\t\t\tif (this.state.element) {\n\t\t\t\tlinkAttrs.href = linkHref;\n\n\t\t\t\tlinkUtils.update(\n\t\t\t\t\tlinkAttrs,\n\t\t\t\t\tthis.state.element,\n\t\t\t\t\tmodifySelection\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlinkUtils.create(linkHref, linkAttrs, modifySelection);\n\t\t\t}\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t};\n}\n\nexport default EditorContext.toProps(ButtonLinkEditBrowse);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\n\n/**\n * The ButtonLinkTargetEdit class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonLinkTargetEdit\n */\nclass ButtonLinkTargetEdit extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonLinkTargetEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'linkTargetEdit';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\t\tconst allowedLinkTargets = this.props.allowedTargets;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"ae-container-dropdown ae-container-dropdown-medium ae-container-edit-link-target ae-has-dropdown\"\n\t\t\t\ttabIndex=\"0\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={this.props.selectedTarget}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={this.props.selectedTarget}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{this.props.selectedTarget}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t<ButtonTargetList\n\t\t\t\t\t\tallowedLinkTargets={allowedLinkTargets}\n\t\t\t\t\t\thandleLinkTargetChange={handleLinkTargetChange}\n\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\t\tselectedTarget={this.props.selectedTarget}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked before rendering when new props or state are being received.\n\t * This method is not called for the initial render or when forceUpdate is used.\n\t *\n\t * @instance\n\t * @memberof ButtonLinkTargetEdit\n\t * @method  shouldComponentUpdate\n\t * @return {Boolean} Returns false when the transition to the new props and state will not\n\t * require a component update.\n\t */\n\tshouldComponentUpdate(nextProps) {\n\t\treturn (\n\t\t\tnextProps.expanded !== this.props.expanded ||\n\t\t\tnextProps.selectedTarget !== this.props.selectedTarget\n\t\t);\n\t}\n}\n\nexport default ButtonLinkTargetEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonDropdown from './button-dropdown.jsx';\n\n/**\n * The ButtonTargetList class provides functionality for changing the target of a link\n * in the document.\n *\n * @class ButtonTargetList\n * @uses WidgetFocusManager\n */\nclass ButtonTargetList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '.ae-toolbar-element',\n\t\tkeys: {\n\t\t\tdismiss: [27],\n\t\t\tdismissNext: [39],\n\t\t\tdismissPrev: [37],\n\t\t\tnext: [40],\n\t\t\tprev: [38],\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default linkTargetEdit\n\t * @memberof ButtonTargetList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'targetList';\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tReactDOM.findDOMNode(this).focus();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst listTargets = this._renderListTargets();\n\n\t\treturn <ButtonDropdown {...this.props}>{listTargets}</ButtonDropdown>;\n\t}\n\n\t/**\n\t * Returns the the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _getAllowedTargetItems\n\t * @protected\n\t * @return {Array} The allowed target items.\n\t */\n\t_getAllowedTargetItems() {\n\t\treturn (\n\t\t\tthis.props.allowedLinkTargets || [\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetDefault,\n\t\t\t\t\tvalue: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetSelf,\n\t\t\t\t\tvalue: '_self',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetBlank,\n\t\t\t\t\tvalue: '_blank',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetParent,\n\t\t\t\t\tvalue: '_parent',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: AlloyEditor.Strings.linkTargetTop,\n\t\t\t\t\tvalue: '_top',\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n\n\t/**\n\t * Renders the allowed link target items.\n\t *\n\t * @instance\n\t * @memberof ButtonTargetList\n\t * @method _renderListTargets\n\t * @protected\n\t * @return {Object} Returns the rendered link items\n\t */\n\t_renderListTargets() {\n\t\tlet targets = this._getAllowedTargetItems();\n\n\t\tconst handleLinkTargetChange = this.props.handleLinkTargetChange;\n\n\t\ttargets = targets.map(target => {\n\t\t\tconst className =\n\t\t\t\tthis.props.selectedTarget === target.value\n\t\t\t\t\t? 'ae-toolbar-element active'\n\t\t\t\t\t: 'ae-toolbar-element';\n\n\t\t\treturn (\n\t\t\t\t<li key={target.value} role=\"option\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\tdata-value={target.value}\n\t\t\t\t\t\tonClick={handleLinkTargetChange}>\n\t\t\t\t\t\t{target.label}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn targets;\n\t}\n}\n\nexport default WidgetFocusManager(ButtonTargetList);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\n\n/**\n * The ButtonLink class provides functionality for creating and editing a link in a document. ButtonLink\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonLinkEdit UI with all the link edition controls.\n *\n * @class ButtonLink\n * @uses ButtonProps\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n */\nclass ButtonLink extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'link',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default link\n\t * @memberof ButtonLink\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'link';\n\n\t/**\n\t * Checks if the current selection is contained within a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a link, false otherwise.\n\t */\n\tisActive() {\n\t\treturn (\n\t\t\tnew CKEDITOR.Link(\n\t\t\t\tthis.context.editor.get('nativeEditor')\n\t\t\t).getFromSelection() !== null\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tconst props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEdit {...props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName={cssClass}\n\t\t\t\t\tdata-type=\"button-link\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"link\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonLink\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonLink.key);\n\t};\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonStateClasses(ButtonLink)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\nconst KEY_ENTER = 13;\nconst KEY_ESC = 27;\n\n/**\n * The ButtonTableEdit class provides functionality for creating and editing a table in a document.\n * Provides UI for creating a table.\n *\n * @class ButtonTableEdit\n */\nclass ButtonTableEdit extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getDefaultProps\n\t */\n\tstatic defaultProps = {\n\t\ttableAttributes: {\n\t\t\tborder: 1,\n\t\t\tcellPadding: 0,\n\t\t\tcellSpacing: 0,\n\t\t\tstyle: 'table-layout: fixed; width: 100%;',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableEdit\n\t * @memberof ButtonTableEdit\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableEdit';\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method getInitialState\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.rowsRef = React.createRef();\n\t\tthis.colsRef = React.createRef();\n\t\tthis.state = {\n\t\t\tcols: 3,\n\t\t\trows: 3,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * Focuses on the link input to immediately allow editing.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis.rowsRef.current.focus();\n\t}\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _createTable\n\t * @protected\n\t */\n\t_createTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\n\t\ttableUtils.create({\n\t\t\tattrs: this.props.tableAttributes,\n\t\t\tcols: this.state.cols,\n\t\t\trows: this.state.rows,\n\t\t});\n\n\t\tthis.props.cancelExclusive();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Handles a change in input value. Sets the provided value from the user back to the input.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleChange\n\t * @param {String} inputName The name of the input which value should be updated.\n\t * @param {SyntheticEvent} event The provided event.\n\t * @protected\n\t */\n\t_handleChange = (inputName, event) => {\n\t\tconst state = {};\n\t\tstate[inputName] = event.target.value;\n\n\t\tthis.setState(state);\n\t};\n\n\t/**\n\t * Monitors key interaction inside the input element to respond to the keys:\n\t * - Enter: Creates the table.\n\t * - Escape: Discards the changes.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method _handleKeyDown\n\t * @param {SyntheticEvent} event The keyboard event.\n\t * @protected\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === KEY_ENTER || event.keyCode === KEY_ESC) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (event.keyCode === KEY_ENTER) {\n\t\t\tthis._createTable();\n\t\t} else if (event.keyCode === KEY_ESC) {\n\t\t\tthis.props.cancelExclusive();\n\t\t}\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableEdit\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst time = Date.now();\n\t\tconst rowsId = time + 'rows';\n\t\tconst colsId = time + 'cols';\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-edit-table\">\n\t\t\t\t<label htmlFor={rowsId}>{AlloyEditor.Strings.rows}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={rowsId}\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tonChange={this._handleChange.bind(this, 'rows')}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Rows\"\n\t\t\t\t\t\tref={this.rowsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.rows}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<label htmlFor={colsId}>{AlloyEditor.Strings.columns}</label>\n\t\t\t\t<div className=\"ae-container-input small\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\tid={colsId}\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tonChange={this._handleChange.bind(this, 'cols')}\n\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\tplaceholder=\"Colums\"\n\t\t\t\t\t\tref={this.colsRef}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={this.state.cols}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button\n\t\t\t\t\taria-label=\"Confirm\"\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._createTable}>\n\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ButtonTableEdit;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * Provides functionality for calculating the point of interaction of the user with the Editor.\n *\n * @class WidgetInteractionPoint\n */\nconst WidgetInteractionPoint = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The provided editor event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetInteractionPoint\n\t\t * @property {SyntheticEvent} editorEvent\n\t\t */\n\t\teditorEvent: PropTypes.object,\n\t},\n\n\t/**\n\t * Returns the position, in page coordinates, according to which a widget should appear.\n\t * Depending on the direction of the selection, the wdiget may appear above of or on bottom of the selection.\n\t *\n\t * It depends on the props editorEvent to analyze the following user-interaction parameters:\n\t * - {Object} selectionData The data about the selection in the editor as returned from\n\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * - {Number} pos Contains the coordinates of the position, considered as most appropriate.\n\t * This may be the point where the user released the mouse, or just the beginning or the end of\n\t * the selection.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method getInteractionPoint\n\t * @return {Object} An Object which contains the following properties:\n\t * direction, x, y, where x and y are in page coordinates and direction can be one of these:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t */\n\tgetInteractionPoint() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\n\t\tif (!eventPayload) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectionData = eventPayload.selectionData;\n\n\t\tconst nativeEvent = eventPayload.nativeEvent;\n\n\t\tconst pos = {\n\t\t\tx: eventPayload.nativeEvent.pageX,\n\t\t\ty: selectionData.region.top,\n\t\t};\n\n\t\tlet direction = selectionData.region.direction;\n\n\t\tconst endRect = selectionData.region.endRect;\n\n\t\tconst startRect = selectionData.region.startRect;\n\n\t\tif (endRect && startRect && startRect.top === endRect.top) {\n\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t}\n\n\t\tlet x;\n\t\tlet y;\n\n\t\t// If we have the point where user released the mouse, show Toolbar at this point\n\t\t// otherwise show it on the middle of the selection.\n\n\t\tif (pos.x && pos.y) {\n\t\t\tx = this._getXPoint(selectionData, pos.x);\n\n\t\t\tif (direction === CKEDITOR.SELECTION_BOTTOM_TO_TOP) {\n\t\t\t\ty = Math.min(pos.y, selectionData.region.top);\n\t\t\t} else {\n\t\t\t\ty = Math.max(\n\t\t\t\t\tpos.y,\n\t\t\t\t\tthis._getYPoint(selectionData, nativeEvent)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tx = selectionData.region.left + selectionData.region.width / 2;\n\n\t\t\tif (direction === CKEDITOR.SELECTION_TOP_TO_BOTTOM) {\n\t\t\t\ty = this._getYPoint(selectionData, nativeEvent);\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.top;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdirection,\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getXPoint\n\t * @param {Object} eventX The X coordinate received from the native event (mouseup).\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated X point in page coordinates.\n\t */\n\t_getXPoint(selectionData, eventX) {\n\t\tconst region = selectionData.region;\n\n\t\tconst left = region.startRect ? region.startRect.left : region.left;\n\t\tconst right = region.endRect ? region.endRect.right : region.right;\n\n\t\tlet x;\n\n\t\tif (left < eventX && right > eventX) {\n\t\t\tx = eventX;\n\t\t} else {\n\t\t\tconst leftDist = Math.abs(left - eventX);\n\t\t\tconst rightDist = Math.abs(right - eventX);\n\n\t\t\tif (leftDist < rightDist) {\n\t\t\t\t// user raised the mouse on left on the selection\n\t\t\t\tx = left;\n\t\t\t} else {\n\t\t\t\tx = right;\n\t\t\t}\n\t\t}\n\n\t\treturn x;\n\t},\n\n\t/**\n\t * Returns the position of the Widget.\n\t *\n\t * @instance\n\t * @memberof WidgetInteractionPoint\n\t * @method _getYPoint\n\t * @param {Object} nativeEvent The data about event is fired\n\t * @param {Object} selectionData The data about the selection in the editor as returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t * @protected\n\t * @return {Number} The calculated Y point in page coordinates.\n\t */\n\t_getYPoint(selectionData, nativeEvent) {\n\t\tlet y = 0;\n\n\t\tif (selectionData && nativeEvent) {\n\t\t\tconst elementTarget = new CKEDITOR.dom.element(nativeEvent.target);\n\n\t\t\tif (\n\t\t\t\telementTarget.$ &&\n\t\t\t\telementTarget.getStyle('overflow') === 'auto'\n\t\t\t) {\n\t\t\t\ty =\n\t\t\t\t\tnativeEvent.target.offsetTop +\n\t\t\t\t\tnativeEvent.target.offsetHeight;\n\t\t\t} else {\n\t\t\t\ty = selectionData.region.bottom;\n\t\t\t}\n\t\t}\n\n\t\treturn y;\n\t},\n};\n\nexport default WidgetInteractionPoint;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from './lang';\n\n/**\n * Attribute implementation.\n *\n * @class Attribute\n * @constructor\n */\nfunction Attribute(config) {\n\tthis.__config__ = config || {};\n\tthis.__ATTRS__ = {};\n}\n\nAttribute.prototype = {\n\tconstructor: Attribute,\n\n\t/**\n\t * Retrieves the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method get\n\t * @param {String} attr The attribute which value should be retrieved.\n\t * @return {Any} The value of the attribute.\n\t */\n\tget(attr) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tlet curValue = this.__ATTRS__[attr];\n\n\t\tif (currentAttr.getter) {\n\t\t\tcurValue = this._callStringOrFunction(currentAttr.getter, curValue);\n\t\t}\n\n\t\treturn curValue;\n\t},\n\n\t/**\n\t * Sets the value of an attribute.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method set\n\t * @param {String} attr The attribute which value should be set.\n\t * @param {Any} value The value which should be set to the attribute.\n\t */\n\tset(attr, value) {\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\tif (!currentAttr) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._isInitialized(attr)) {\n\t\t\tthis._init(attr);\n\t\t}\n\n\t\tif (currentAttr.readOnly) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.writeOnce && this._isInitialized(attr)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentAttr.setter) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Calls the provided param as function with the supplied arguments.\n\t * If param provided as string, a corresponding function in this object will\n\t * be called. If provided param is a function, it will be directly called.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _callStringOrFunction\n\t * @param  {Any|Array} args The arguments which will be provided to the called function\n\t * @param  {String|Function} stringOrFunction The function which should be called\n\t * @protected\n\t * @return {Any} The returned value from the called function\n\t */\n\t_callStringOrFunction(stringOrFunction, args) {\n\t\tlet result = null;\n\n\t\tif (!Lang.isArray(args)) {\n\t\t\targs = [args];\n\t\t}\n\n\t\tif (\n\t\t\tLang.isString(stringOrFunction) &&\n\t\t\tLang.isFunction(this[stringOrFunction])\n\t\t) {\n\t\t\tresult = this[stringOrFunction](...args);\n\t\t} else if (Lang.isFunction(stringOrFunction)) {\n\t\t\tresult = stringOrFunction.apply(this, args);\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Initializes an attribute. Sets its default value depending on the flags of the\n\t * attribute and the passed configuration object to the constructor.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _init\n\t * @param {String} attr The name of the attribute which have to be initialized.\n\t * @protected\n\t */\n\t_init(attr) {\n\t\tlet value;\n\n\t\tconst currentAttr = this.constructor.ATTRS[attr];\n\n\t\t// Check if there is default value or passed one via configuration object\n\t\tconst hasDefaultValue = Object.prototype.hasOwnProperty.call(\n\t\t\tcurrentAttr,\n\t\t\t'value'\n\t\t);\n\t\tconst hasPassedValueViaConfig = Object.prototype.hasOwnProperty.call(\n\t\t\tthis.__config__,\n\t\t\tattr\n\t\t);\n\n\t\t// If there is valueFn, set the value to be the result of invocation of this function\n\t\tif (currentAttr.valueFn) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.valueFn, value);\n\n\t\t\tthis.__ATTRS__[attr] = value;\n\t\t}\n\t\t// else if the attribute has readOnly flag, set the default value from the attribute,\n\t\t// regardless if there is value or not\n\t\telse if (currentAttr.readOnly) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\t\t// else if the attribute has writeOnce value, set it from the passed configuration or from the\n\t\t// default value, in this order. Otherwise, return miserable.\n\t\telse if (currentAttr.writeOnce) {\n\t\t\tif (hasPassedValueViaConfig) {\n\t\t\t\tvalue = this.__config__[attr];\n\t\t\t} else if (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// These two cases below are easy - set the value to be from the passed config or\n\t\t// from the default value, in this order.\n\t\telse if (hasPassedValueViaConfig) {\n\t\t\tvalue = this.__config__[attr];\n\t\t} else if (hasDefaultValue) {\n\t\t\tvalue = currentAttr.value;\n\t\t}\n\n\t\t// If there is validator, and user passed config object - check the returned value.\n\t\t// If it is false, then set as initial value the default one.\n\t\t// However, if there is no default value, just return.\n\t\tif (\n\t\t\tcurrentAttr.validator &&\n\t\t\thasPassedValueViaConfig &&\n\t\t\t!this._callStringOrFunction(currentAttr.validator, value)\n\t\t) {\n\t\t\tif (hasDefaultValue) {\n\t\t\t\tvalue = currentAttr.value;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If there is setter and user passed config object - pass the value thought the setter.\n\t\t// The value might be one from defaultFn, default value or provided from the config.\n\t\tif (currentAttr.setter && hasPassedValueViaConfig) {\n\t\t\tvalue = this._callStringOrFunction(currentAttr.setter, value);\n\t\t}\n\n\t\t// Finally, set the value as initial value to the storage with values.\n\t\tthis.__ATTRS__[attr] = value;\n\t},\n\n\t/**\n\t * Checks if an attribute is initialized. An attribute is considered as initialized\n\t * when there is an own property with this name in the local collection of attribute values\n\t * for the current instance.\n\t *\n\t * @instance\n\t * @memberof Attribute\n\t * @method _isInitialized\n\t * @param {String} attr The attribute which should be checked if it is initialized.\n\t * @protected\n\t * @return {Boolean} Returns true if the attribute has been initialized, false otherwise.\n\t */\n\t_isInitialized(attr) {\n\t\treturn Object.prototype.hasOwnProperty.call(this.__ATTRS__, attr);\n\t},\n};\n\nexport default Attribute;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst tableSelectionGetArrowBoxClasses = function() {\n\treturn 'ae-arrow-box ae-arrow-box-bottom';\n};\n\nconst SelectionGetArrowBoxClasses = {\n\ttable: tableSelectionGetArrowBoxClasses,\n};\n\nexport default SelectionGetArrowBoxClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n// Default gutter value for toolbar positioning\nconst DEFAULT_GUTTER = {\n\tleft: 0,\n\ttop: 0,\n};\n\n/**\n * Centers a Toolbar according to given rectangle\n *\n * @method centerToolbar\n * @param {Object} toolbar The toolbar to be centered\n * @param {Object} rect The rectangle according to which the Toolbar will be centered\n */\nconst centerToolbar = function(toolbar, rect) {\n\tconst toolbarNode = ReactDOM.findDOMNode(toolbar);\n\n\tconst nativeEditor = toolbar.context.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode || document.body;\n\tconst uiNodeStyle = getComputedStyle(uiNode);\n\tconst uiNodeMarginLeft = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t10\n\t);\n\tconst uiNodeMarginRight = parseInt(\n\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t10\n\t);\n\tconst totalWidth =\n\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\tconst halfNodeWidth = toolbarNode.offsetWidth / 2;\n\tconst scrollPosition = new CKEDITOR.dom.window(window).getScrollPosition();\n\n\tconst gutter = toolbar.props.gutter || DEFAULT_GUTTER;\n\n\tconst widgetXY = toolbar.getWidgetXYPoint(\n\t\trect.left + rect.width / 2 - scrollPosition.x,\n\t\trect.top + scrollPosition.y,\n\t\tCKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t);\n\n\tconst caretPosition = nativeEditor.getSelection();\n\tconst ranges = caretPosition.getRanges();\n\tlet offsetHeight = 0;\n\n\tif (ranges && ranges.length === 1) {\n\t\tlet startContainer = ranges[0].startContainer;\n\t\tif (startContainer.$.nodeType !== Node.ELEMENT_NODE) {\n\t\t\tstartContainer = startContainer.getParent();\n\t\t}\n\t\tif (startContainer) {\n\t\t\tconst startContainerClientRect = startContainer.getClientRect();\n\t\t\toffsetHeight = startContainerClientRect.y - rect.top;\n\t\t}\n\t}\n\n\tconst endPosition = [\n\t\trect.left + rect.width / 2 - halfNodeWidth - scrollPosition.x,\n\t\trect.top +\n\t\t\toffsetHeight -\n\t\t\ttoolbarNode.offsetHeight +\n\t\t\tscrollPosition.y -\n\t\t\tgutter.top,\n\t];\n\n\tif (endPosition[0] < 0) {\n\t\tendPosition[0] = 0;\n\t} else if (endPosition[0] > totalWidth - toolbarNode.offsetWidth) {\n\t\tendPosition[0] = totalWidth - toolbarNode.offsetWidth;\n\t}\n\n\ttoolbar.moveToPoint(widgetXY, endPosition);\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method imageSelectionSetPosition\n * @param {Object} payload Payload, should contain the selection data for retrieving the\n * client rectangle of the selected image\n * @return {Boolean} True, in all cases\n */\nconst imageSelectionSetPosition = function(payload) {\n\tconst selectionData = payload.selectionData\n\t\t? payload.selectionData\n\t\t: payload.editorEvent\n\t\t? payload.editorEvent.data.selectionData\n\t\t: null;\n\n\tif (selectionData && selectionData.element) {\n\t\tconst nativeEditor = payload.editor.get('nativeEditor');\n\t\tconst uiNode = nativeEditor.config.uiNode;\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tconst rect = selectionData.element.getClientRect();\n\t\trect.top += scrollTop;\n\n\t\tcenterToolbar(this, rect);\n\n\t\treturn true;\n\t}\n};\n\n/**\n * Sets the position of a toolbar according to the position of the selected image\n *\n * @method tableSelectionSetPosition\n * @param {Object} payload Object, which contains the selection data for retrieving the\n * client rectangle of the selected table\n * @return {Boolean} True, in all cases\n */\nconst tableSelectionSetPosition = function(payload) {\n\tconst nativeEditor = payload.editor.get('nativeEditor');\n\tconst uiNode = nativeEditor.config.uiNode;\n\n\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\tconst table = new CKEDITOR.Table(nativeEditor).getFromSelection();\n\tconst rect = table.getClientRect();\n\trect.top += scrollTop;\n\n\tcenterToolbar(this, rect);\n\n\treturn true;\n};\n\nconst SelectionSetPosition = {\n\timage: imageSelectionSetPosition,\n\ttable: tableSelectionSetPosition,\n};\n\nexport default SelectionSetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionGetArrowBoxClasses from './selection-arrowbox';\nimport SelectionSetPosition from './selection-position';\nimport SelectionTest from './selection-test';\n\nconst Selections = [\n\t{\n\t\tname: 'embed',\n\t\tbuttons: ['embedRemove', 'embedEdit'],\n\t\ttest: SelectionTest.embed,\n\t},\n\t{\n\t\tname: 'embedUrl',\n\t\tbuttons: ['embedVideo', 'embedVideoEdit'],\n\t\ttest: SelectionTest.embedUrl,\n\t},\n\t{\n\t\tname: 'link',\n\t\tbuttons: ['linkEdit'],\n\t\ttest: SelectionTest.link,\n\t},\n\t{\n\t\tname: 'image',\n\t\tbuttons: ['imageLeft', 'imageCenter', 'imageRight', 'removeImage'],\n\t\tsetPosition: SelectionSetPosition.image,\n\t\ttest: SelectionTest.image,\n\t},\n\t{\n\t\tname: 'text',\n\t\tbuttons: {\n\t\t\tfull: [\n\t\t\t\t[\n\t\t\t\t\t'Font',\n\t\t\t\t\t'FontSize',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'bold',\n\t\t\t\t\t'italic',\n\t\t\t\t\t'underline',\n\t\t\t\t\t'strike',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'link',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'paragraphAlign',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'ul',\n\t\t\t\t\t'ol',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'h1',\n\t\t\t\t\t'h2',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'indentBlock',\n\t\t\t\t\t'outdentBlock',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'TextColor',\n\t\t\t\t\t'BGColor',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'code',\n\t\t\t\t\t'quote',\n\t\t\t\t\t'separator',\n\t\t\t\t\t'removeFormat',\n\t\t\t\t],\n\t\t\t],\n\n\t\t\tsimple: ['styles', 'bold', 'italic', 'underline', 'link'],\n\t\t},\n\t\ttest: SelectionTest.text,\n\t},\n\t{\n\t\tname: 'table',\n\t\tbuttons: [\n\t\t\t'tableHeading',\n\t\t\t'tableRow',\n\t\t\t'tableColumn',\n\t\t\t'tableCell',\n\t\t\t'tableRemove',\n\t\t],\n\t\tgetArrowBoxClasses: SelectionGetArrowBoxClasses.table,\n\t\tsetPosition: SelectionSetPosition.table,\n\t\ttest: SelectionTest.table,\n\t},\n];\n\nexport default Selections;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './addimages';\n\nimport './autolink';\n\nimport './autolist';\n\nimport './dragresize';\n\nimport './dragresize_ie';\n\nimport './dragresize_ie11';\n\nimport './embed';\nimport embedurl from './embedurl';\n\nimport './imagealignment';\n\nimport './pasteimages';\n\nimport './placeholder';\n\nimport './selectionkeystrokes';\n\nimport './tableresize';\n\nimport './tabletools';\n\nexport {embedurl};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport * as Base from '../components/base';\nimport Buttons from '../components/buttons';\nimport * as Compat from '../components/compat';\nimport Toolbars from '../components/toolbars';\nimport Attribute from '../oop/attribute';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport SelectionGetArrowBoxClasses from '../selections/selection-arrowbox';\nimport SelectionSetPosition from '../selections/selection-position';\nimport SelectionTest from '../selections/selection-test';\nimport Selections from '../selections/selections';\nimport Core from './core';\n\nimport '../plugins';\n\n// An object containing all currently registered plugins in AlloyEditor.\nconst BRIDGE_BUTTONS = {};\n\n/**\n * Creates an instance of AlloyEditor.\n *\n * @memberof AlloyEditor\n * @method editable\n * @static\n * @param {String|Node} node The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n * @param {Object} config Configuration attributes for the current instance of AlloyEditor.\n * @return {Object} An instance of {{#crossLink \"Core\"}}{{/crossLink}}\n */\nconst editable = function(node, config) {\n\tconfig = config || {};\n\tconfig.srcNode = node;\n\n\tAlloyEditor.implementEventTarget();\n\n\treturn new Core(config);\n};\n\n/**\n * The full URL for the AlloyEditor installation directory.\n * It is possible to manually provide the base path by setting a\n * global variable named `ALLOYEDITOR_BASEPATH`. This global variable\n * must be set **before** the editor script loading.\n *\n * @memberof AlloyEditor\n * @method getBasePath\n * @static\n * @return {String} The found base path\n */\nconst getBasePath = function() {\n\t// Find out the editor directory path, based on its <script> tag.\n\tlet path = window.ALLOYEDITOR_BASEPATH || '';\n\n\tif (!path) {\n\t\tconst scripts = document.getElementsByTagName('script');\n\n\t\tfor (let i = 0; i < scripts.length; i++) {\n\t\t\tconst match = scripts[i].src.match(AlloyEditor.regexBasePath);\n\n\t\t\tif (match) {\n\t\t\t\tpath = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// In IE (only) the script.src string is the raw value entered in the\n\t// HTML source. Other browsers return the full resolved URL instead.\n\tif (path.indexOf(':/') === -1 && path.slice(0, 2) !== '//') {\n\t\t// Absolute path.\n\t\tif (path.indexOf('/') === 0) {\n\t\t\tpath = location.href.match(/^.*?:\\/\\/[^/]*/)[0] + path;\n\t\t}\n\t\t// Relative path.\n\t\telse {\n\t\t\tpath = location.href.match(/^[^?]*\\/(?:)/)[0] + path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error(\n\t\t\t'The AlloyEditor installation path could not be automatically detected. Please set the global variable \"ALLOYEDITOR_BASEPATH\" before creating editor instances.'\n\t\t);\n\t}\n\n\treturn path;\n};\n\n/**\n * Detects and load the corresponding language file if AlloyEditor language strings are not already present.\n * The function fires a {{#crossLink \"AlloyEditor/languageResourcesLoaded:event\"}}{{/crossLink}} event\n *\n * @memberof AlloyEditor\n * @method loadLanguageResources\n * @static\n * @param {Function} callback Optional callback to be called when AlloyEditor loads the language resource.\n */\nconst loadLanguageResources = function(callback) {\n\tAlloyEditor.implementEventTarget();\n\n\tif (Lang.isFunction(callback)) {\n\t\tif (AlloyEditor.Strings) {\n\t\t\tsetTimeout(callback, 0);\n\t\t} else {\n\t\t\tAlloyEditor.once('languageResourcesLoaded', () => {\n\t\t\t\tsetTimeout(callback, 0);\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!AlloyEditor._langResourceRequested) {\n\t\tAlloyEditor._langResourceRequested = true;\n\n\t\tconst languages = [\n\t\t\t'af',\n\t\t\t'ar',\n\t\t\t'bg',\n\t\t\t'bn',\n\t\t\t'bs',\n\t\t\t'ca',\n\t\t\t'cs',\n\t\t\t'cy',\n\t\t\t'da',\n\t\t\t'de',\n\t\t\t'el',\n\t\t\t'en-au',\n\t\t\t'en-ca',\n\t\t\t'en-gb',\n\t\t\t'en',\n\t\t\t'eo',\n\t\t\t'es',\n\t\t\t'et',\n\t\t\t'eu',\n\t\t\t'fa',\n\t\t\t'fi',\n\t\t\t'fo',\n\t\t\t'fr-ca',\n\t\t\t'fr',\n\t\t\t'gl',\n\t\t\t'gu',\n\t\t\t'he',\n\t\t\t'hi',\n\t\t\t'hr',\n\t\t\t'hu',\n\t\t\t'id',\n\t\t\t'is',\n\t\t\t'it',\n\t\t\t'ja',\n\t\t\t'ka',\n\t\t\t'km',\n\t\t\t'ko',\n\t\t\t'ku',\n\t\t\t'lt',\n\t\t\t'lv',\n\t\t\t'mk',\n\t\t\t'mn',\n\t\t\t'ms',\n\t\t\t'nb',\n\t\t\t'nl',\n\t\t\t'no',\n\t\t\t'pl',\n\t\t\t'pt-br',\n\t\t\t'pt',\n\t\t\t'ro',\n\t\t\t'ru',\n\t\t\t'si',\n\t\t\t'sk',\n\t\t\t'sl',\n\t\t\t'sq',\n\t\t\t'sr-latn',\n\t\t\t'sr',\n\t\t\t'sv',\n\t\t\t'th',\n\t\t\t'tr',\n\t\t\t'tt',\n\t\t\t'ug',\n\t\t\t'uk',\n\t\t\t'vi',\n\t\t\t'zh-cn',\n\t\t\t'zh',\n\t\t];\n\n\t\tconst userLanguage =\n\t\t\tnavigator.language || navigator.userLanguage || 'en';\n\n\t\tconst parts = userLanguage\n\t\t\t.toLowerCase()\n\t\t\t.match(/([a-z]+)(?:-([a-z]+))?/);\n\t\tlet lang = parts[1];\n\t\tconst locale = parts[2];\n\n\t\tif (languages.indexOf(lang + '-' + locale) >= 0) {\n\t\t\tlang = lang + '-' + locale;\n\t\t} else if (languages.indexOf(lang) === -1) {\n\t\t\tlang = 'en';\n\t\t}\n\n\t\tCKEDITOR.scriptLoader.load(\n\t\t\tAlloyEditor.getUrl('lang/alloy-editor/' + lang + '.js'),\n\t\t\tloaded => {\n\t\t\t\tif (loaded) {\n\t\t\t\t\tAlloyEditor.fire('languageResourcesLoaded');\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* eslint-disable no-invalid-this */\n\t\t\tthis // Always `AlloyEditor`.\n\t\t\t/* eslint-enable no-invalid-this */\n\t\t);\n\t}\n};\n\n/**\n * Gets the full URL for AlloyEditor resources. By default, URLs\n * returned by this function contain a querystring parameter (\"t\")\n * set to the {@link CKEDITOR#timestamp} value.\n *\n * @memberof AlloyEditor\n * @method getUrl\n * @static\n * @param {String} resource The resource whose full URL we want to get.\n * It may be a full, absolute, or relative URL.\n * @return {String} The full URL.\n */\nconst getUrl = function(resource) {\n\tconst basePath = AlloyEditor.getBasePath();\n\n\t// If this is not a full or absolute path.\n\tif (resource.indexOf(':/') === -1 && resource.indexOf('/') !== 0) {\n\t\tresource = basePath + resource;\n\t}\n\n\t// Add the timestamp, except for directories.\n\tif (\n\t\tCKEDITOR.timestamp &&\n\t\tresource.charAt(resource.length - 1) !== '/' &&\n\t\t!/[&?]t=/.test(resource)\n\t) {\n\t\tresource +=\n\t\t\t(resource.indexOf('?') >= 0 ? '&' : '?') +\n\t\t\t't=' +\n\t\t\tCKEDITOR.timestamp;\n\t}\n\n\treturn resource;\n};\n\n/**\n * Implements event firing and subscribing via CKEDITOR.event.\n *\n * @memberof AlloyEditor\n * @method implementEventTarget\n * @static\n */\nconst implementEventTarget = function() {\n\tif (!AlloyEditor.fire && !AlloyEditor.on) {\n\t\tCKEDITOR.event.implementOn(AlloyEditor);\n\t}\n};\n\n/**\n * Regular expression which should match the script which have been used to load AlloyEditor.\n *\n * @memberof AlloyEditor\n * @property regexBasePath\n * @type {RegExp}\n * @static\n */\nconst regexBasePath = /(^|.*[\\\\/])(?:alloy-editor[^/]+|alloy-editor)\\.js(?:\\?.*|;.*)?$/i;\n\n/**\n * Fired when AlloyEditor detects the browser language and loads the corresponding language file. Once this event\n * is fired, AlloyEditor.Strings will be populated with data.\n *\n * @event languageResourcesLoaded\n */\n\n/**\n * Returns the required plugin names needed for a given plugin\n * if it is already registered or an empty array.\n *\n * @memberof AlloyEditor\n * @method getButtons\n * @param {Array} buttons An array of buttons or plugin names.\n * @return {Function} A function that can be invoked to resolve the requested button names.\n * @static\n */\nconst getButtons = function(buttons) {\n\treturn function() {\n\t\treturn buttons.reduce((acc, val) => {\n\t\t\tval = BRIDGE_BUTTONS[val] || [val];\n\t\t\treturn acc.concat(val);\n\t\t}, []);\n\t};\n};\n\n/**\n * Register a button and try to get its required plugins.\n *\n * @memberof AlloyEditor\n * @method registerBridgeButton\n * @param {String} buttonName The name of the button.\n * @param {String} pluginName The name of the plugin that registers the button.\n * @static\n */\nconst registerBridgeButton = function(buttonName, pluginName) {\n\tif (!BRIDGE_BUTTONS[pluginName]) {\n\t\tBRIDGE_BUTTONS[pluginName] = [];\n\t}\n\n\tBRIDGE_BUTTONS[pluginName].push(buttonName);\n};\n\n/**\n * @method OOP\n * @memberof AlloyEditor\n */\nconst OOP = {\n\textend,\n};\n\nexport {\n\tAttribute,\n\tBase,\n\tButtons,\n\tCompat,\n\tCore,\n\tLang,\n\tOOP,\n\tSelectionGetArrowBoxClasses,\n\tSelectionSetPosition,\n\tSelectionTest,\n\tSelections,\n\tToolbars,\n\teditable,\n\tgetBasePath,\n\tgetButtons,\n\tgetUrl,\n\timplementEventTarget,\n\tloadLanguageResources,\n\tregexBasePath,\n\tregisterBridgeButton,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ButtonAccessibilityImageAlt from './button-accessibility-image-alt.jsx';\nimport ButtonBackgroundColor from './button-background-color.jsx';\nimport ButtonBold from './button-bold.jsx';\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonCamera from './button-camera.jsx';\nimport ButtonCode from './button-code.jsx';\nimport ButtonColor from './button-color.jsx';\nimport ButtonCommandListItem from './button-command-list-item.jsx';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonDropdown from './button-dropdown.jsx';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonEmbedVideo from './button-embed-video.jsx';\nimport ButtonEmbed from './button-embed.jsx';\nimport ButtonH1 from './button-h1.jsx';\nimport ButtonH2 from './button-h2.jsx';\nimport ButtonHline from './button-hline.jsx';\nimport ButtonImageAlignCenter from './button-image-align-center.jsx';\nimport ButtonImageAlignLeft from './button-image-align-left.jsx';\nimport ButtonImageAlignRight from './button-image-align-right.jsx';\nimport ButtonImage from './button-image.jsx';\nimport ButtonIndentBlock from './button-indent-block.jsx';\nimport ButtonItalic from './button-italic.jsx';\nimport ButtonItemSelectorAudio from './button-item-selector-audio.jsx';\nimport ButtonItemSelectorImage from './button-item-selector-image.jsx';\nimport ButtonItemSelectorVideo from './button-item-selector-video.jsx';\nimport ButtonLinkAutocompleteList from './button-link-autocomplete-list.jsx';\nimport ButtonLinkBrowse from './button-link-browse.jsx';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLinkEdit from './button-link-edit.jsx';\nimport ButtonLinkTargetEdit from './button-link-target-edit.jsx';\nimport ButtonLink from './button-link.jsx';\nimport ButtonOl from './button-ol.jsx';\nimport ButtonOutdentBlock from './button-outdent-block.jsx';\nimport ButtonParagraphAlignLeft from './button-paragraph-align-left.jsx';\nimport ButtonParagraphAlignRight from './button-paragraph-align-right.jsx';\nimport ButtonParagraphAlign from './button-paragraph-align.jsx';\nimport ButtonParagraphCenter from './button-paragraph-center.jsx';\nimport ButtonParagraphJustify from './button-paragraph-justify.jsx';\nimport ButtonQuote from './button-quote.jsx';\nimport ButtonRemoveFormat from './button-remove-format.jsx';\nimport ButtonRemoveImage from './button-remove-image.jsx';\nimport ButtonSeparator from './button-separator.jsx';\nimport ButtonSpacing from './button-spacing.jsx';\nimport ButtonStrike from './button-strike.jsx';\nimport ButtonStylesListHeader from './button-styles-list-header.jsx';\nimport ButtonStylesListItemRemove from './button-styles-list-item-remove.jsx';\nimport ButtonStylesListItem from './button-styles-list-item.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\nimport ButtonStyles from './button-styles.jsx';\nimport ButtonSubscript from './button-subscript.jsx';\nimport ButtonSuperscript from './button-superscript.jsx';\nimport ButtonTableCell from './button-table-cell.jsx';\nimport ButtonTableColumn from './button-table-column.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\nimport ButtonTableHeading from './button-table-heading.jsx';\nimport ButtonTableRemove from './button-table-remove.jsx';\nimport ButtonTableRow from './button-table-row.jsx';\nimport ButtonTable from './button-table.jsx';\nimport ButtonTargetList from './button-target-list.jsx';\nimport ButtonTwitter from './button-twitter.jsx';\nimport ButtonUl from './button-ul.jsx';\nimport ButtonUnderline from './button-underline.jsx';\n\nexport default {\n\t[ButtonAccessibilityImageAlt.key]: ButtonAccessibilityImageAlt,\n\t[ButtonBackgroundColor.key]: ButtonBackgroundColor,\n\t[ButtonBold.key]: ButtonBold,\n\t[ButtonCameraImage.key]: ButtonCameraImage,\n\t[ButtonCamera.key]: ButtonCamera,\n\t[ButtonCode.key]: ButtonCode,\n\t[ButtonColor.key]: ButtonColor,\n\t[ButtonCommandListItem.key]: ButtonCommandListItem,\n\t[ButtonCommandsList.key]: ButtonCommandsList,\n\t[ButtonDropdown.key]: ButtonDropdown,\n\t[ButtonEmbedEdit.key]: ButtonEmbedEdit,\n\t[ButtonEmbed.key]: ButtonEmbed,\n\t[ButtonEmbedVideoEdit.key]: ButtonEmbedVideoEdit,\n\t[ButtonEmbedVideo.key]: ButtonEmbedVideo,\n\t[ButtonH1.key]: ButtonH1,\n\t[ButtonH2.key]: ButtonH2,\n\t[ButtonHline.key]: ButtonHline,\n\t[ButtonImageAlignCenter.key]: ButtonImageAlignCenter,\n\t[ButtonImageAlignLeft.key]: ButtonImageAlignLeft,\n\t[ButtonImageAlignRight.key]: ButtonImageAlignRight,\n\t[ButtonImage.key]: ButtonImage,\n\t[ButtonIndentBlock.key]: ButtonIndentBlock,\n\t[ButtonItalic.key]: ButtonItalic,\n\t[ButtonItemSelectorAudio.key]: ButtonItemSelectorAudio,\n\t[ButtonItemSelectorImage.key]: ButtonItemSelectorImage,\n\t[ButtonItemSelectorVideo.key]: ButtonItemSelectorVideo,\n\t[ButtonLinkAutocompleteList.key]: ButtonLinkAutocompleteList,\n\t[ButtonLinkBrowse.key]: ButtonLinkBrowse,\n\t[ButtonLinkEditBrowse.key]: ButtonLinkEditBrowse,\n\t[ButtonLinkEdit.key]: ButtonLinkEdit,\n\t[ButtonLinkTargetEdit.key]: ButtonLinkTargetEdit,\n\t[ButtonLink.key]: ButtonLink,\n\t[ButtonOl.key]: ButtonOl,\n\t[ButtonOutdentBlock.key]: ButtonOutdentBlock,\n\t[ButtonParagraphAlign.key]: ButtonParagraphAlign,\n\t[ButtonParagraphAlignLeft.key]: ButtonParagraphAlignLeft,\n\t[ButtonParagraphAlignRight.key]: ButtonParagraphAlignRight,\n\t[ButtonParagraphCenter.key]: ButtonParagraphCenter,\n\t[ButtonParagraphJustify.key]: ButtonParagraphJustify,\n\t[ButtonQuote.key]: ButtonQuote,\n\t[ButtonRemoveFormat.key]: ButtonRemoveFormat,\n\t[ButtonRemoveImage.key]: ButtonRemoveImage,\n\t[ButtonSeparator.key]: ButtonSeparator,\n\t[ButtonSpacing.key]: ButtonSpacing,\n\t[ButtonStrike.key]: ButtonStrike,\n\t[ButtonStylesListHeader.key]: ButtonStylesListHeader,\n\t[ButtonStylesListItemRemove.key]: ButtonStylesListItemRemove,\n\t[ButtonStylesListItem.key]: ButtonStylesListItem,\n\t[ButtonStylesList.key]: ButtonStylesList,\n\t[ButtonStyles.key]: ButtonStyles,\n\t[ButtonSubscript.key]: ButtonSubscript,\n\t[ButtonSuperscript.key]: ButtonSuperscript,\n\t[ButtonTableCell.key]: ButtonTableCell,\n\t[ButtonTableColumn.key]: ButtonTableColumn,\n\t[ButtonTableEdit.key]: ButtonTableEdit,\n\t[ButtonTableHeading.key]: ButtonTableHeading,\n\t[ButtonTableRemove.key]: ButtonTableRemove,\n\t[ButtonTableRow.key]: ButtonTableRow,\n\t[ButtonTable.key]: ButtonTable,\n\t[ButtonTargetList.key]: ButtonTargetList,\n\t[ButtonTwitter.key]: ButtonTwitter,\n\t[ButtonUl.key]: ButtonUl,\n\t[ButtonUnderline.key]: ButtonUnderline,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonAccessibilityImageAlt class provides functionality for changing text color in a document.\n *\n * @class ButtonAccessibilityImageAlt\n *\n */\nclass ButtonAccessibilityImageAlt extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'imageAlt';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst selection = props.context.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.getSelection();\n\n\t\tconst element =\n\t\t\tselection.getSelectedElement() || selection.getStartElement();\n\n\t\tthis._element = element;\n\n\t\tconst imageElement = this._element.findOne('img');\n\n\t\tconst imageAlt = imageElement\n\t\t\t? imageElement.getAttribute('alt')\n\t\t\t: this._element.getAttribute('alt');\n\n\t\tthis.state = {\n\t\t\timageAlt,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ae-container-edit-link\">\n\t\t\t\t\t<div className=\"ae-container-input xxl\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\taria-label=\"alt\"\n\t\t\t\t\t\t\tclassName=\"ae-input\"\n\t\t\t\t\t\t\tonChange={this._handleAltChange}\n\t\t\t\t\t\t\tonKeyDown={this._handleKeyDown}\n\t\t\t\t\t\t\tplaceholder=\"alt\"\n\t\t\t\t\t\t\tref=\"refAltInput\"\n\t\t\t\t\t\t\ttitle=\"alt\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.imageAlt}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.confirm}\n\t\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\t\tonClick={this._updateImageAlt}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.confirm}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"check\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}>\n\t\t\t\t\t<small className=\"ae-icon small\">Alt</small>\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the user cursor on the widget's input.\n\t *\n\t * @protected\n\t * @method _focusAltInput\n\t */\n\t_focusAltInput() {\n\t\tconst instance = this;\n\n\t\tconst focusAltEl = function() {\n\t\t\tReactDOM.findDOMNode(instance.refs.refAltInput).focus();\n\t\t};\n\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(focusAltEl);\n\t\t} else {\n\t\t\tsetTimeout(focusAltEl, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Event attached to alt input that fires when its value is changed\n\t *\n\t * @protected\n\t * @method  _handleAltChange\n\t * @param {MouseEvent} event\n\t */\n\t_handleAltChange = event => {\n\t\tthis.setState({\n\t\t\timageAlt: event.target.value,\n\t\t});\n\n\t\tthis._focusAltInput();\n\t};\n\n\t/**\n\t * Event attached to al tinput that fires when key is down\n\t * This method check that enter key is pushed to update the component´s state\n\t *\n\t * @protected\n\t * @method  _handleKeyDown\n\t * @param {MouseEvent} event\n\t */\n\t_handleKeyDown = event => {\n\t\tif (event.keyCode === 13) {\n\t\t\tevent.preventDefault();\n\n\t\t\tthis._updateImageAlt();\n\t\t}\n\t};\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonAccessibilityImageAlt.key);\n\t};\n\n\t/**\n\t * Method called by clicking ok button or pushing key enter to update imageAlt state and to update alt property from the image that is selected\n\t * This method calls cancelExclusive to show the previous toolbar before enter to edit alt property\n\t *\n\t * @protected\n\t * @method  _updateImageAlt\n\t */\n\t_updateImageAlt = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst imageAlt = this.refs.refAltInput.value;\n\n\t\tthis.setState({\n\t\t\timageAlt,\n\t\t});\n\n\t\tconst imageElement = this._element.findOne('img');\n\t\tconst image = imageElement ? imageElement : this._element;\n\n\t\timage.setAttribute('alt', imageAlt);\n\n\t\teditor.fire('actionPerformed', this);\n\n\t\t// We need to cancelExclusive with the bound parameters in case the button is used\n\t\t// inside another in exclusive mode (such is the case of the alt button)\n\t\tthis.props.cancelExclusive();\n\t};\n}\n\nexport default EditorContext.toProps(ButtonAccessibilityImageAlt);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\nclass ButtonBackgroundColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'backgroundColor';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonBackgroundColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tlet activeColorClass = '';\n\n\t\tconst colors = this._getColors();\n\n\t\tconst itemStyle = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: '',\n\t\t\t},\n\t\t};\n\n\t\tcolors.forEach(item => {\n\t\t\titemStyle.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(itemStyle)) {\n\t\t\t\tactiveColor = item.name;\n\n\t\t\t\tactiveColorClass = item.style.attributes.class;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span className={activeColorClass}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"textbox\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tstyleConfig.attributes.class = item.styleClass;\n\n\t\t\tif (this._checkActive(styleConfig)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(styleConfig));\n\t\t\t}\n\t\t});\n\n\t\tstyleConfig.attributes.class = className;\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonBackgroundColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.normal,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-body',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: '',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-primary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.disabled,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-secondary',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-success',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-danger',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-warning',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleClass: 'bg-info',\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'bg-info'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonBackgroundColor;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonBold class provides functionality for styling an selection with strong (bold) style.\n *\n * @class ButtonBold\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonBold extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bold',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 66 /* B*/,\n\t\t\tname: 'bold',\n\t\t},\n\t\tstyle: 'coreStyles_bold',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default bold\n\t * @memberof ButtonBold\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'bold';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonBold\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button  ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bold}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-bold\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bold}>\n\t\t\t\t<ButtonIcon symbol=\"bold\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonBold)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCameraImage from './button-camera-image.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCamera class renders in two different ways:\n *\n * - Normal: Just a button that allows to switch to the edition mode.\n * - Exclusive: Renders ButtonCameraImage in order to take photo from the camera.\n *\n * @class ButtonCamera\n */\nclass ButtonCamera extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default camera\n\t * @memberof ButtonCamera\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'camera';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCamera\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonCameraImage {...this.props} />;\n\t\t} else {\n\t\t\tconst disabled = !(\n\t\t\t\tnavigator.getUserMedia ||\n\t\t\t\t(navigator.webkitGetUserMedia &&\n\t\t\t\t\tlocation.protocol === 'https') ||\n\t\t\t\tnavigator.mozGetUserMedia ||\n\t\t\t\tnavigator.msGetUserMedia\n\t\t\t);\n\n\t\t\tconst label = disabled\n\t\t\t\t? AlloyEditor.Strings.cameraDisabled\n\t\t\t\t: AlloyEditor.Strings.camera;\n\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={label}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image-camera\"\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClick={this.props.requestExclusive.bind(ButtonCamera.key)}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={label}>\n\t\t\t\t\t<ButtonIcon symbol=\"camera\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonCamera;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonCode class provides wraps a selection in `pre` element.\n *\n * @class ButtonCode\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonCode extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'pre',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default code\n\t * @memberof ButtonCode\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'code';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonCode\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.code}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-code\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.code}>\n\t\t\t\t<ButtonIcon symbol=\"code\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonCode)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonColor class provides functionality for changing text color in a document.\n *\n *\n * @class ButtonColor\n */\nclass ButtonColor extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'color';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonColor\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeColor = AlloyEditor.Strings.normal;\n\n\t\tconst colors = this._getColors();\n\n\t\tcolors.some(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveColor = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeColor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: colors,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"color-picker\" />\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getColors().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given color definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _checkActive\n\t * @param {Object} styleConfig Color definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the color is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of colors. Each color consists of two properties:\n\t * - name - The style name, for example \"default\".\n\t * - style - An object with one property, called `element` which value\n\t *          represents the style which have to be applied to the element.\n\t * - styleFn - The function that is invoked to apply the style to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonColor\n\t * @method _getColor\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the colors.\n\t */\n\t_getColors() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.primary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-primary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-primary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.success,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-success',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-success'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.danger,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-danger',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-danger'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.warning,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-warning',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-warning'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.info,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-info',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-info'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.dark,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.darkGray,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-gray-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-gray-dark'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.secondary,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-secondary',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-secondary'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.light,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-light'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.lighter,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-lighter'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.white,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'span',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'text-dark',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'text-white'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonColor;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonEmbedVideoEdit from './button-embed-video-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbedVideo class provides functionality for changing text color in a document.\n *\n * @class ButtonEmbedVideo\n */\nclass ButtonEmbedVideo extends React.Component {\n\tstatic key = 'embedVideo';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonEmbedVideo\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedVideoEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed-video\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonEmbedVideo;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonEmbedEdit from './button-embed-edit.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonEmbed class provides functionality for creating and editing an embed link in a document.\n * ButtonEmbed renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonEmbedEdit UI with all the link edition controls.\n *\n * @class ButtonEmbed\n * @uses ButtonKeystroke\n */\nclass ButtonEmbed extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\tname: 'embed',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default embed\n\t * @memberof ButtonEmbed\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'embed';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonEmbedEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.link}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-embed\"\n\t\t\t\t\tonClick={this._requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.link}>\n\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the embedding of a link.\n\t *\n\t * @instance\n\t * @memberof ButtonEmbed\n\t * @method _requestExclusive\n\t * @protected\n\t */\n\t_requestExclusive = () => {\n\t\tthis.props.requestExclusive(ButtonEmbed.key);\n\t};\n}\n\nexport default ButtonKeystroke(ButtonEmbed);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH1 class provides wraps a selection in `h1` element.\n *\n * @class ButtonH1\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH1 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h1',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h1\n\t * @memberof ButtonH1\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h1';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH1\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h1}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h1\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h1}>\n\t\t\t\t<ButtonIcon symbol=\"h1\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH1)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonActionStyle from '../base/button-action-style';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonH2 class provides wraps a selection in `h2` element.\n *\n * @class ButtonH2\n * @uses ButtonActionStyle\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonH2 extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tstyle: {\n\t\t\telement: 'h2',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default h2\n\t * @memberof ButtonH2\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'h2';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonH2\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.h2}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-h2\"\n\t\t\t\tonClick={this.applyStyle}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.h2}>\n\t\t\t\t<ButtonIcon symbol=\"h2\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonActionStyle(ButtonStateClasses(ButtonStyle(ButtonH2)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonHline class provides inserts horizontal line.\n *\n * @class ButtonHline\n * @uses ButtonCommand\n */\nclass ButtonHline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'horizontalrule',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default hline\n\t * @memberof ButtonHline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'hline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonHline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.horizontalrule}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-hline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.horizontalrule}>\n\t\t\t\t<ButtonIcon symbol=\"hr\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonHline);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignCenter class provides functionality for aligning an image in the center.\n *\n * @class ButtonImageAlignCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageCenter\n\t * @memberof ButtonImageAlignCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignLeft class provides functionality for aligning an image on left.\n *\n * @class ButtonImageAlignLeft\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageLeft\n\t * @memberof ButtonImageAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImageAlignRight class provides functionality for aligning an image on right.\n *\n * @class ButtonImageAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonImageAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default imageRight\n\t * @memberof ButtonImageAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImageAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-image-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-image-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonImageAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonImage class inserts an image to the content.\n *\n * @class ButtonImage\n */\nclass ButtonImage extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default image\n\t * @memberof ButtonImage\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'imageFromFile';\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.fileInput = React.createRef();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst inputSyle = {display: 'none'};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-image\"\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t\t<ButtonIcon symbol=\"document-image\" />\n\t\t\t\t</button>\n\n\t\t\t\t<input\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tonChange={this._onInputChange}\n\t\t\t\t\tref={this.fileInput}\n\t\t\t\t\tstyle={inputSyle}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Simulates click on the input element. This will open browser's native file open dialog.\n\t *\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method handleClick\n\t * @param {SyntheticEvent} event The received click event on the button.\n\t */\n\thandleClick = () => {\n\t\tthis.fileInput.current.click();\n\t};\n\n\t/**\n\t * On input change, reads the chosen file and fires an event `beforeImageAdd` with the image which will be added\n\t * to the content. The image file will be passed in the `imageFiles` property.\n\t * If any of the listeners returns `false` or cancels the event, the image won't be added to the content.\n\t * Otherwise, an event `imageAdd` will be fired with the inserted element into the editable area.\n\t * The passed params will be:\n\t * - `el` - the created img element\n\t * - `file` - the original image file from the input element\n\t *\n\t * @fires ButtonImage#beforeImageAdd\n\t * @fires ButtonImage#imageAdd\n\t * @instance\n\t * @memberof ButtonImage\n\t * @method _onInputChange\n\t * @protected\n\t */\n\t_onInputChange = () => {\n\t\tconst inputEl = this.fileInput.current;\n\n\t\t// On IE11 the function might be called with an empty array of\n\t\t// files. In such a case, no actions will be taken.\n\t\tif (!inputEl.files.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst reader = new FileReader();\n\t\tconst file = inputEl.files[0];\n\n\t\treader.onload = event => {\n\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles: file,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t`<img src=\"${event.target.result}\">`\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\teditor.fire('actionPerformed', this);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\n\t\tinputEl.value = '';\n\t};\n}\n\nexport default ButtonImage;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonIndentBlock class provides functionality for indenting the selected blocks.\n *\n * @class ButtonIndentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonIndentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'indent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default indentBlock\n\t * @memberof ButtonIndentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'indentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonIndentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.indent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-indent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.indent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-less\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonIndentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonItalic class provides functionality for styling an selection with italic (em) style.\n *\n * @class ButtonItalic\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonItalic extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'italic',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 73 /* I*/,\n\t\t\tname: 'italic',\n\t\t},\n\t\tstyle: 'coreStyles_italic',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default italic\n\t * @memberof ButtonItalic\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'italic';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonItalic\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.italic}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-italic\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.italic}>\n\t\t\t\t<ButtonIcon symbol=\"italic\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonItalic)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorAudio\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorAudio extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'audioselector',\n\t};\n\n\tstatic key = 'audio';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.audio}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-audio\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.audio}>\n\t\t\t\t<ButtonIcon symbol=\"audio\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorAudio);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorImage\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'imageselector',\n\t};\n\n\tstatic key = 'image';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.image}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-image\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.image}>\n\t\t\t\t<ButtonIcon symbol=\"picture\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * @class ButtonItemSelectorVideo\n * @uses ButtonCommand\n */\nclass ButtonItemSelectorVideo extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'videoselector',\n\t};\n\n\tstatic key = 'video';\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.video}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-video\"\n\t\t\t\tonClick={this._handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.video}>\n\t\t\t\t<ButtonIcon symbol=\"video\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t_handleClick = () => {\n\t\tthis.execCommand(null);\n\t};\n}\n\nexport default ButtonCommand(ButtonItemSelectorVideo);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonProps from '../base/button-props';\nimport ButtonLinkEditBrowse from './button-link-edit-browse.jsx';\nimport ButtonLink from './button-link.jsx';\n\n/**\n * The ButtonLinkBrowse class provides functionality for changing text color in a document.\n *\n * @uses ButtonKeystroke\n * @uses ButtonProps\n *\n * @class ButtonLinkBrowse\n */\nclass ButtonLinkBrowse extends React.Component {\n\tstatic defaultProps = {\n\t\tkeystroke: {\n\t\t\tfn: '_requestExclusive',\n\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\tname: 'linkBrowse',\n\t\t},\n\t};\n\n\tstatic key = 'linkBrowse';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.props = this.mergeButtonCfgProps();\n\n\t\t\treturn <ButtonLinkEditBrowse {...this.props} />;\n\t\t} else {\n\t\t\treturn <ButtonLink {...this.props} />;\n\t\t}\n\t}\n\n\t/**\n\t * Requests the link button to be rendered in exclusive mode to allow the creation of a link.\n\t *\n\t * @protected\n\t * @method _requestExclusive\n\t */\n\t_requestExclusive() {\n\t\tthis.props.requestExclusive(ButtonLinkBrowse.key);\n\t}\n}\n\nexport default ButtonProps(ButtonKeystroke(ButtonLinkBrowse));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOrderedList class provides functionality for creating ordered lists in an editor.\n *\n * @class ButtonOrderedList\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonOrderedList extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'numberedlist',\n\t\tstyle: {\n\t\t\telement: 'ol',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ol\n\t * @memberof ButtonOrderedList\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ol';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOrderedList\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.numberedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ol\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.numberedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ol\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonOrderedList))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonOutdentBlock class provides functionality for outdenting blocks.\n *\n * @class ButtonOutdentBlock\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonOutdentBlock extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'outdent',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default outdentBlock\n\t * @memberof ButtonOutdentBlock\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'outdentBlock';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonOutdentBlock\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.outdent}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-outdent-block\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.outdent}>\n\t\t\t\t<ButtonIcon symbol=\"indent-more\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonOutdentBlock))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignLeft class provides functionality for aligning a paragraph on left.\n *\n * @class ButtonParagraphAlignLeft\n *\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignLeft extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyleft',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphLeft\n\t * @memberof ButtonParagraphAlignLeft\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphLeft';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignLeft\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignLeft}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-left\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignLeft}>\n\t\t\t\t<ButtonIcon symbol=\"align-left\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignLeft))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlignRight class provides functionality for aligning a paragraph on right.\n *\n * @class ButtonParagraphAlignRight\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphAlignRight extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyright',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphRight\n\t * @memberof ButtonParagraphAlignRight\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphRight';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlignRight\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignRight}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-align-right\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignRight}>\n\t\t\t\t<ButtonIcon symbol=\"align-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphAlignRight))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphAlign class provides functionality to work with table rows.\n *\n * @class ButtonParagraphAlign\n */\nclass ButtonParagraphAlign extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'paragraphAlign';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonParagraphAlign.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tinlineIcons={false}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst activeCommand = this._getCommands()\n\t\t\t.filter(alignment => {\n\t\t\t\tconst command = editor.getCommand(alignment.command);\n\n\t\t\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t\t\t})\n\t\t\t.pop();\n\n\t\tconst iconClassName = activeCommand.icon;\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-container-dropdown-xsmall ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={activeCommand.label}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<ButtonIcon symbol={iconClassName} />\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphAlign\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyleft',\n\t\t\t\t\ticon: 'align-left',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignLeft,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifycenter',\n\t\t\t\t\ticon: 'align-center',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignCenter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyright',\n\t\t\t\t\ticon: 'align-right',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'justifyblock',\n\t\t\t\t\ticon: 'align-justify',\n\t\t\t\t\tlabel: AlloyEditor.Strings.alignJustify,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonParagraphAlign;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphCenter class provides functionality for centering a paragraph.\n *\n * @class ButtonParagraphCenter\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphCenter extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifycenter',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphCenter\n\t * @memberof ButtonParagraphCenter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphCenter';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphCenter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignCenter}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-center\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignCenter}>\n\t\t\t\t<ButtonIcon symbol=\"align-center\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphCenter))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonCommandActive from '../base/button-command-active';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonParagraphJustify class provides functionality for justfying a paragraph.\n *\n * @class ButtonParagraphJustify\n * @uses ButtonCommand\n * @uses ButtonCommandActive\n * @uses ButtonStateClasses\n */\nclass ButtonParagraphJustify extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'justifyblock',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default paragraphJustify\n\t * @memberof ButtonParagraphJustify\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'paragraphJustify';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonParagraphJustify\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.alignJustify}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-paragraph-justify\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.alignJustify}>\n\t\t\t\t<ButtonIcon symbol=\"align-justify\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonCommandActive(ButtonStateClasses(ButtonParagraphJustify))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonQuote class wraps a selection in `blockquote` element.\n *\n * @class ButtonQuote\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonQuote extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'blockquote',\n\t\tstyle: {\n\t\t\telement: 'blockquote',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default quote\n\t * @memberof ButtonQuote\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'quote';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonQuote\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.quote}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-quote\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.quote}>\n\t\t\t\t<ButtonIcon symbol=\"quote-right\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonQuote)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveFormat class removes style formatting.\n *\n * @class ButtonRemoveFormat\n * @uses ButtonCommand\n */\nclass ButtonRemoveFormat extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'removeFormat',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default removeFormat\n\t * @memberof ButtonRemoveFormat\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'removeFormat';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonRemoveFormat\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeformat}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-removeformat\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.removeformat}>\n\t\t\t\t<ButtonIcon symbol=\"remove-style\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveFormat);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonRemoveImage class removes an image using a CKEDITOR.command.\n *\n * @class ButtonRemoveImage\n * @uses ButtonCommand\n */\nclass ButtonRemoveImage extends React.Component {\n\tstatic defaultProps = {\n\t\tcommand: 'removeImage',\n\t};\n\n\tstatic key = 'removeImage';\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.removeImage}\n\t\t\t\taria-pressed={false}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttitle={AlloyEditor.Strings.removeImage}>\n\t\t\t\t<ButtonIcon symbol=\"times-circle\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonRemoveImage);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\n/**\n * The ButtonSeparator function renders a simple separator.\n */\nfunction ButtonSeparator(_props) {\n\treturn <span className=\"ae-separator\" />;\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default separator\n * @memberof ButtonSeparator\n * @property {String} key\n * @static\n */\nButtonSeparator.key = 'separator';\n\nexport default ButtonSeparator;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonSpacing class provides functionality for changing text spacing in a document.\n *\n * @class ButtonSpacing\n */\nclass ButtonSpacing extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tstatic key = 'spacing';\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Indicates whether the styles list is expanded or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} expanded\n\t\t */\n\t\texpanded: PropTypes.bool,\n\n\t\t/**\n\t\t * The label that should be used for accessibility purposes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {String} label\n\t\t */\n\t\tlabel: PropTypes.string,\n\n\t\t/**\n\t\t * Indicates whether the remove styles item should appear in the styles list.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Boolean} showRemoveStylesItem\n\t\t */\n\t\tshowRemoveStylesItem: PropTypes.bool,\n\n\t\t/**\n\t\t * List of the styles the button is able to handle.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Array} styles\n\t\t */\n\t\tstyles: PropTypes.arrayOf(PropTypes.object),\n\n\t\t/**\n\t\t * The tabIndex of the button in its toolbar current state. A value other than -1\n\t\t * means that the button has focus and is the active element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Number} tabIndex\n\t\t */\n\t\ttabIndex: PropTypes.number,\n\n\t\t/**\n\t\t * Callback provided by the button host to notify when the styles list has been expanded.\n\t\t *\n\t\t * @instance\n\t\t * @memberof Spacing\n\t\t * @property {Function} toggleDropdown\n\t\t */\n\t\ttoggleDropdown: PropTypes.func,\n\t};\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeSpacing = '1.0x';\n\n\t\tconst spacings = this._getSpacings();\n\n\t\tspacings.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveSpacing = item.name;\n\t\t\t}\n\t\t});\n\n\t\tconst {editor, expanded, tabIndex, toggleDropdown} = this.props;\n\n\t\tconst buttonStylesProps = {\n\t\t\tactiveStyle: activeSpacing,\n\t\t\teditor,\n\t\t\tonDismiss: toggleDropdown,\n\t\t\tshowRemoveStylesItem: false,\n\t\t\tstyles: spacings,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-container-dropdown-small ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={tabIndex}>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"separator\" />\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t{activeSpacing}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t\t{expanded && <ButtonStylesList {...buttonStylesProps} />}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t_applyStyle(className) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst styleConfig = {\n\t\t\telement: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: className,\n\t\t\t},\n\t\t};\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\teditor.getSelection().lock();\n\n\t\tthis._getSpacings().forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\teditor.removeStyle(new CKEDITOR.style(item.style));\n\t\t\t}\n\t\t});\n\n\t\teditor.applyStyle(style);\n\n\t\teditor.getSelection().unlock();\n\n\t\teditor.fire('actionPerformed', this);\n\t}\n\n\t/**\n\t * Checks if the given spacing definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _checkActive\n\t * @param {Object} styleConfig Spacing definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the spacing is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\tlet active = true;\n\n\t\tconst elementPath = nativeEditor.elementPath();\n\n\t\tif (elementPath && elementPath.lastElement) {\n\t\t\tstyleConfig.attributes.class.split(' ').forEach(className => {\n\t\t\t\tactive = active && elementPath.lastElement.hasClass(className);\n\t\t\t});\n\t\t} else {\n\t\t\tactive = false;\n\t\t}\n\n\t\treturn active;\n\t}\n\n\t/**\n\t * Returns an array of spacings. Each spacing consists from three properties:\n\t * - name - the style name, for example \"default\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t * - styleFn - a function which applies selected style to the editor selection\n\t *\n\t * @instance\n\t * @memberof Spacing\n\t * @method _getSpacings\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the spacings.\n\t */\n\t_getSpacings() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: '1.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, ''),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '1.5x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-1 mb-1',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-1 mb-1'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '2.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-2 mb-2',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-2 mb-2'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '3.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-3 mb-3',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-3 mb-3'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '4.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-4 mb-4',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-4 mb-4'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '5.0x',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'div',\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\tclass: 'mt-5 mb-5',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t},\n\t\t\t\t\tstyleFn: this._applyStyle.bind(this, 'mt-5 mb-5'),\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonSpacing;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonStrike class styles a selection with strike style.\n *\n * @class ButtonStrike\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonStrike extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'strike',\n\t\tstyle: 'coreStyles_strike',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default strike\n\t * @memberof ButtonStrike\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'strike';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t * @instance\n\t * @memberof ButtonStrike\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.strike}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-strike\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.strike}>\n\t\t\t\t<ButtonIcon symbol=\"strikethrough\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonStrike)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonStylesList from './button-styles-list.jsx';\n\n/**\n * The ButtonStyles class provides functionality for styling a selection with a list of\n * configurable and customizable styles. The allowed styles follow CKEDITOR.Style configuration\n * (http://docs.ckeditor.com/#!/api/CKEDITOR.style)\n *\n * @class ButtonStyles\n */\nclass ButtonStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default styles\n\t * @memberof ButtonStyles\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'styles';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet activeStyle = AlloyEditor.Strings.normal;\n\n\t\tconst styles = this._getStyles();\n\n\t\tstyles.forEach(item => {\n\t\t\tif (this._checkActive(item.style)) {\n\t\t\t\tactiveStyle = item.name;\n\t\t\t}\n\t\t});\n\n\t\tlet buttonStylesList;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonStylesList = (\n\t\t\t\t<ButtonStylesList\n\t\t\t\t\tactiveStyle={activeStyle}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t\tshowRemoveStylesItem={this.props.showRemoveStylesItem}\n\t\t\t\t\tstyles={styles}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles + ' ' + activeStyle}\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.styles + ' ' + activeStyle}>\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeStyle}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonStylesList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the given style definition is applied to the current selection in the editor.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _checkActive\n\t * @param {Object} styleConfig Style definition as per http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t * @protected\n\t * @return {Boolean} Returns true if the style is applied to the selection, false otherwise.\n\t */\n\t_checkActive(styleConfig) {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t// Styles with wildcard element (*) won't be considered active by CKEditor. Defaulting\n\t\t// to a 'span' element works for most of those cases with no defined element.\n\t\tstyleConfig = CKEDITOR.tools.merge({element: 'span'}, styleConfig);\n\n\t\tconst style = new CKEDITOR.style(styleConfig);\n\n\t\treturn style.checkActive(nativeEditor.elementPath(), nativeEditor);\n\t}\n\n\t/**\n\t * Returns an array of styles. Each style consists from two properties:\n\t * - name - the style name, for example \"h1\"\n\t * - style - an object with one property, called `element` which value\n\t * represents the style which have to be applied to the element.\n\t *\n\t * @instance\n\t * @memberof ButtonStyles\n\t * @method _getStyles\n\t * @protected\n\t * @return {Array<object>} An array of objects containing the styles.\n\t */\n\t_getStyles() {\n\t\treturn (\n\t\t\tthis.props.styles || [\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h1,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h1',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.h2,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'h2',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.formatted,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'pre',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.cite,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'cite',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: AlloyEditor.Strings.code,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\telement: 'code',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonStyles;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSubscript class provides functionality for applying subscript style to a text selection.\n *\n * @class ButtonSubscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSubscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'subscript',\n\t\tstyle: 'coreStyles_subscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default subscript\n\t * @memberof ButtonSubscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'subscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSubscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.subscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-subscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.subscript}>\n\t\t\t\t<ButtonIcon symbol=\"subscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(ButtonStateClasses(ButtonStyle(ButtonSubscript)));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonSuperscript class provides functionality for applying superscript style to a text selection.\n *\n * @class ButtonSuperscript\n *\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonSuperscript extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'superscript',\n\t\tstyle: 'coreStyles_superscript',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default superscript\n\t * @memberof ButtonSuperscript\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'superscript';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonSuperscript\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.superscript}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-superscript\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.superscript}>\n\t\t\t\t<ButtonIcon symbol=\"superscript\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonSuperscript))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableCell class provides functionality to work with table cells.\n *\n * @class ButtonTableCell\n */\nclass ButtonTableCell extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableCell\n\t * @memberof ButtonTableCell\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableCell';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableCell.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.cell}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.cell}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-cell\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableCell\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellDelete,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMerge',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMerge,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeDown',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeDown,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellMergeRight',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellMergeRight,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellHorizontalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitHorizontal,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'cellVerticalSplit',\n\t\t\t\t\tlabel: AlloyEditor.Strings.cellSplitVertical,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableCell;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableColumn class provides functionality to work with table columns.\n *\n * @class ButtonTableColumn\n */\nclass ButtonTableColumn extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableColumn\n\t * @memberof ButtonTableColumn\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableColumn';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableColumn.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.column}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"listbox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.column}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-column\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableColumn\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'columnDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.columnDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableColumn;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableHeading class provides functionality to work with table heading.\n *\n * @class ButtonTableHeading\n */\nclass ButtonTableHeading extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableHeading\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableHeading';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableHeading.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tconst activeHeading = new CKEDITOR.Table(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getHeading();\n\t\tconst activeHeadingIntro = AlloyEditor.Strings.headers + ':';\n\t\tconst activeHeadingLabel =\n\t\t\tAlloyEditor.Strings['headers' + activeHeading];\n\n\t\treturn (\n\t\t\t<div className=\"ae-container-dropdown-xl ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label=\"\"\n\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle=\"\">\n\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t{activeHeadingIntro}{' '}\n\t\t\t\t\t\t\t<strong>{activeHeadingLabel}</strong>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableHeading\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingNone',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersNone,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingRow',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersRow,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingColumn',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersColumn,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'tableHeadingBoth',\n\t\t\t\t\tlabel: AlloyEditor.Strings.headersBoth,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableHeading;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRemove class provides functionality for removing a table\n *\n * @class ButtonTableRemove\n */\nclass ButtonTableRemove extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRemove\n\t * @memberof ButtonTableRemove\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRemove';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.deleteTable}\n\t\t\t\tclassName=\"ae-button\"\n\t\t\t\tdata-type=\"button-table-remove\"\n\t\t\t\tonClick={this._removeTable}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.deleteTable}>\n\t\t\t\t<ButtonIcon symbol=\"trash\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Removes the table in the editor element.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRemove\n\t * @method _removeTable\n\t * @protected\n\t */\n\t_removeTable = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\tconst tableUtils = new CKEDITOR.Table(editor);\n\n\t\ttableUtils.remove();\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n}\n\nexport default ButtonTableRemove;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommandsList from './button-commands-list.jsx';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonTableRow class provides functionality to work with table rows.\n *\n * @class ButtonTableRow\n */\nclass ButtonTableRow extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default tableRow\n\t * @memberof ButtonTableRow\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'tableRow';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tlet buttonCommandsList;\n\t\tlet buttonCommandsListId;\n\n\t\tif (this.props.expanded) {\n\t\t\tbuttonCommandsListId = ButtonTableRow.key + 'List';\n\t\t\tbuttonCommandsList = (\n\t\t\t\t<ButtonCommandsList\n\t\t\t\t\tcommands={this._getCommands()}\n\t\t\t\t\tlistId={buttonCommandsListId}\n\t\t\t\t\tonDismiss={this.props.toggleDropdown}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t<button\n\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\taria-label={AlloyEditor.Strings.row}\n\t\t\t\t\taria-owns={buttonCommandsListId}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.row}>\n\t\t\t\t\t<ButtonIcon symbol=\"add-row\" />\n\t\t\t\t</button>\n\t\t\t\t{buttonCommandsList}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of commands. If a list of commands was passed\n\t * as property `commands`, it will take a precedence over the default ones.\n\t *\n\t * @instance\n\t * @memberof ButtonTableRow\n\t * @method _getCommands\n\t * @protected\n\t * @return {Array} The list of available commands.\n\t */\n\t_getCommands() {\n\t\treturn (\n\t\t\tthis.props.commands || [\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertBefore',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertBefore,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowInsertAfter',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowInsertAfter,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcommand: 'rowDelete',\n\t\t\t\t\tlabel: AlloyEditor.Strings.rowDelete,\n\t\t\t\t},\n\t\t\t]\n\t\t);\n\t}\n}\n\nexport default ButtonTableRow;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonIcon from './button-icon.jsx';\nimport ButtonTableEdit from './button-table-edit.jsx';\n\n/**\n * The ButtonTable class provides functionality for creating and editing a table in a document. ButtonTable\n * renders in two different modes:\n *\n * - Normal: Just a button that allows to switch to the edition mode\n * - Exclusive: The ButtonTableEdit UI with all the table edition controls.\n *\n * @class ButtonTable\n */\nclass ButtonTable extends React.Component {\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default table\n\t * @memberof ButtonTable\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'table';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTable\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.props.renderExclusive) {\n\t\t\treturn <ButtonTableEdit {...this.props} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\taria-label={AlloyEditor.Strings.table}\n\t\t\t\t\tclassName=\"ae-button\"\n\t\t\t\t\tdata-type=\"button-table\"\n\t\t\t\t\tonClick={this.props.requestExclusive}\n\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\ttitle={AlloyEditor.Strings.table}>\n\t\t\t\t\t<ButtonIcon symbol=\"table\" />\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default ButtonTable;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonIcon from './button-icon.jsx';\n\nconst MAX_TWEET_LENGTH = 280;\n\n/**\n * The ButtonTwitter class provides functionality for creating a link which\n * allows people to tweet part of the content in the editor.\n *\n * @class ButtonTwitter\n * @uses ButtonStateClasses\n */\nclass ButtonTwitter extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default twitter\n\t * @memberof ButtonTwitter\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'twitter';\n\n\t/**\n\t * Creates or removes the twitter link on the selection.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method handleClick\n\t */\n\thandleClick = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tconst linkUtils = new CKEDITOR.Link(editor);\n\n\t\tif (this.isActive()) {\n\t\t\tlinkUtils.remove(linkUtils.getFromSelection());\n\t\t} else {\n\t\t\tlinkUtils.create(this._getHref(), {\n\t\t\t\tclass: 'ae-twitter-link',\n\t\t\t\ttarget: '_blank',\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t};\n\n\t/**\n\t * Checks if the current selection is contained within a link that points to twitter.com/intent/tweet.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method isActive\n\t * @return {Boolean} True if the selection is inside a twitter link, false otherwise.\n\t */\n\tisActive() {\n\t\tconst link = new CKEDITOR.Link(\n\t\t\tthis.context.editor.get('nativeEditor')\n\t\t).getFromSelection();\n\n\t\treturn (\n\t\t\tlink &&\n\t\t\tlink.getAttribute('href').indexOf('twitter.com/intent/tweet') !== -1\n\t\t);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.twitter}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-twitter\"\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.twitter}>\n\t\t\t\t<ButtonIcon symbol=\"twitter\" />\n\t\t\t</button>\n\t\t);\n\t}\n\n\t/**\n\t * Generates the appropriate twitter url based on the selected text and the configuration\n\t * options received via props.\n\t *\n\t * @instance\n\t * @memberof ButtonTwitter\n\t * @method _getHref\n\t * @protected\n\t * @return {String} A valid twitter url with the selected text and given configuration.\n\t */\n\t_getHref() {\n\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\t\tconst selectedText = nativeEditor\n\t\t\t.getSelection()\n\t\t\t.getSelectedText()\n\t\t\t.substring(0, MAX_TWEET_LENGTH);\n\t\tconst url = this.props.url;\n\t\tconst via = this.props.via;\n\t\tlet twitterHref =\n\t\t\t'https://twitter.com/intent/tweet?text=' + selectedText;\n\n\t\tif (url) {\n\t\t\ttwitterHref += '&url=' + url;\n\t\t}\n\n\t\tif (via) {\n\t\t\ttwitterHref += '&via=' + via;\n\t\t}\n\n\t\treturn twitterHref;\n\t}\n}\n\nexport default ButtonStateClasses(ButtonTwitter);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnorderedlist class provides functionality for creating unordered lists in an editor.\n *\n * @class ButtonUnorderedlist\n * @uses ButtonCommand\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnorderedlist extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'bulletedlist',\n\t\tstyle: {\n\t\t\telement: 'ul',\n\t\t},\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default ul\n\t * @memberof ButtonUnorderedlist\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'ul';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnorderedlist\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.bulletedlist}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-ul\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.bulletedlist}>\n\t\t\t\t<ButtonIcon symbol=\"list-ul\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonStateClasses(ButtonStyle(ButtonUnorderedlist))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport ButtonCommand from '../base/button-command';\nimport ButtonKeystroke from '../base/button-keystroke';\nimport ButtonStateClasses from '../base/button-state-classes';\nimport ButtonStyle from '../base/button-style';\nimport ButtonIcon from './button-icon.jsx';\n\n/**\n * The ButtonUnderline class provides functionality for underlying a text selection.\n *\n * @class ButtonUnderline\n * @uses ButtonCommand\n * @uses ButtonKeystroke\n * @uses ButtonStateClasses\n * @uses ButtonStyle\n */\nclass ButtonUnderline extends React.Component {\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcommand: 'underline',\n\t\tkeystroke: {\n\t\t\tfn: 'execCommand',\n\t\t\tkeys: CKEDITOR.CTRL + 85 /* U*/,\n\t\t\tname: 'underline',\n\t\t},\n\t\tstyle: 'coreStyles_underline',\n\t};\n\n\t/**\n\t * The name which will be used as an alias of the button in the configuration.\n\t *\n\t * @default underline\n\t * @memberof ButtonUnderline\n\t * @property {String} key\n\t * @static\n\t */\n\tstatic key = 'underline';\n\n\t/**\n\t * Lifecycle. Renders the UI of the button.\n\t *\n\t * @instance\n\t * @memberof ButtonUnderline\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst cssClass = `ae-button ${this.getStateClasses()}`;\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\taria-label={AlloyEditor.Strings.underline}\n\t\t\t\taria-pressed={cssClass.indexOf('pressed') !== -1}\n\t\t\t\tclassName={cssClass}\n\t\t\t\tdata-type=\"button-underline\"\n\t\t\t\tonClick={this.execCommand}\n\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\ttitle={AlloyEditor.Strings.underline}>\n\t\t\t\t<ButtonIcon symbol=\"underline\" />\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default ButtonCommand(\n\tButtonKeystroke(ButtonStateClasses(ButtonStyle(ButtonUnderline)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nexport {default as ButtonActionStyle} from './button-action-style';\nexport {default as ButtonCommandActive} from './button-command-active';\nexport {default as ButtonCommand} from './button-command';\nexport {default as ButtonKeystroke} from './button-keystroke';\nexport {default as ButtonProps} from './button-props';\nexport {default as ButtonStateClasses} from './button-state-classes';\nexport {default as ButtonStyle} from './button-style';\nexport {default as ToolbarButtons} from './toolbar-buttons';\nexport {default as WidgetArrowBox} from './widget-arrow-box';\nexport {default as WidgetDropdown} from './widget-dropdown';\nexport {default as WidgetExclusive} from './widget-exclusive';\nexport {default as WidgetFocusManager} from './widget-focus-manager';\nexport {default as WidgetInteractionPoint} from './widget-interaction-point';\nexport {default as WidgetPosition} from './widget-position';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonActionStyle is a mixin that provides applying style\n * implementation for a button based on the `applyStyle` and\n * `removeStyle` API of CKEDITOR.\n *\n * To execute properly, the component has to expose the following\n * methods which can be obtained out of the box using the {{#crossLink\n * \"ButtonStyle\"}}{{/crossLink}} mixin:\n * - `Function` {{#crossLink \"ButtonStyle/isActive\"}}{{/crossLink}} to\n *    check the active state\n * - `Function` {{#crossLink \"ButtonStyle/getStyle\"}}{{/crossLink}} to\n *    return the style that should be applied\n *\n * @class ButtonActionStyle\n */\nconst ButtonActionStyle = {\n\t/**\n\t * Removes or applies the component style to the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonActionStyle\n\t * @method applyStyle\n\t */\n\tapplyStyle() {\n\t\tif (Lang.isFunction(this.isActive) && Lang.isFunction(this.getStyle)) {\n\t\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\t\teditor.getSelection().lock();\n\n\t\t\tif (this.isActive()) {\n\t\t\t\teditor.removeStyle(this.getStyle());\n\t\t\t} else {\n\t\t\t\teditor.applyStyle(this.getStyle());\n\t\t\t}\n\n\t\t\teditor.getSelection().unlock();\n\n\t\t\teditor.fire('actionPerformed', this);\n\t\t}\n\t},\n};\n\nexport default ButtonActionStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * ButtonCommandActive is a mixin that provides an `isActive` method to\n * determine if a context-aware command is currently in an active state.\n *\n * @class ButtonCommandActive\n */\nconst ButtonCommandActive = {\n\t/**\n\t * Checks if the command is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonCommandActive\n\t * @method isActive\n\t * @return {Boolean} True if the command is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst command = editor.getCommand(this.props.command);\n\n\t\treturn command ? command.state === CKEDITOR.TRISTATE_ON : false;\n\t},\n};\n\nexport default ButtonCommandActive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * ButtonCommand is a mixin that executes a command via CKEDITOR's API.\n *\n * @class ButtonCommand\n */\nconst ButtonCommand = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The command that should be executed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {String} command\n\t\t */\n\t\tcommand: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Indicates that the command may cause the editor to have a different.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonCommand\n\t\t * @property {boolean} modifiesSelection\n\t\t */\n\t\tmodifiesSelection: PropTypes.bool,\n\t},\n\n\t/**\n\t * Executes a CKEditor command and fires `actionPerformed` event.\n\t *\n\t * @instance\n\t * @memberof ButtonCommand\n\t * @param {Object=} data Optional data to be passed to CKEDITOR's `execCommand` method.\n\t * @method execCommand\n\t */\n\texecCommand(data) {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\teditor.execCommand(this.props.command, data);\n\n\t\tif (this.props.modifiesSelection) {\n\t\t\teditor.selectionChange(true);\n\t\t}\n\n\t\teditor.fire('actionPerformed', this);\n\t},\n};\n\nexport default ButtonCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonKeystroke is a mixin that provides a `keystroke` prop that allows configuring\n * a function of the instance to be invoked upon the keystroke activation.\n *\n * @class ButtonKeystroke\n */\nconst ButtonKeystroke = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The keystroke definition. An object with the following properties:\n\t\t * - fn: The function to be executed\n\t\t * - keys: The keystroke definition, as expected by http://docs.ckeditor.com/#!/api/CKEDITOR.editor-method-setKeystroke\n\t\t * - name: The name for the CKEditor command that will be created. If empty,\n\t\t * a random name will be created on the fly\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonKeystroke\n\t\t * @property {Object} keystroke\n\t\t */\n\t\tkeystroke: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server, immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst keystroke = this.props.keystroke;\n\n\t\tconst commandName =\n\t\t\tkeystroke.name || ((Math.random() * 1e9) >>> 0).toString();\n\n\t\tlet command = nativeEditor.getCommand(commandName);\n\n\t\tif (!command) {\n\t\t\tcommand = new CKEDITOR.command(nativeEditor, {\n\t\t\t\texec: function(editor) {\n\t\t\t\t\tconst keystrokeFn = keystroke.fn;\n\n\t\t\t\t\tif (Lang.isString(keystrokeFn)) {\n\t\t\t\t\t\tthis[keystrokeFn].call(this, editor);\n\t\t\t\t\t} else if (Lang.isFunction(keystrokeFn)) {\n\t\t\t\t\t\tkeystrokeFn.call(this, editor);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\t\t\t});\n\n\t\t\tnativeEditor.addCommand(commandName, command);\n\t\t}\n\n\t\tthis._defaultKeystrokeCommand =\n\t\t\tnativeEditor.keystrokeHandler.keystrokes[keystroke.keys];\n\n\t\tnativeEditor.setKeystroke(keystroke.keys, commandName);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonKeystroke\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis.props.editor\n\t\t\t.get('nativeEditor')\n\t\t\t.setKeystroke(\n\t\t\t\tthis.props.keystroke.keys,\n\t\t\t\tthis._defaultKeystrokeCommand\n\t\t\t);\n\t},\n};\n\nexport default ButtonKeystroke;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport ButtonLinkEdit from '../buttons/button-link-edit.jsx';\n\n/**\n * ButtonProps is a mixin that provides a style prop and some methods to apply the resulting\n * style and checking if it is present in a given path or selection.\n *\n * @class ButtonProps\n */\nconst ButtonProps = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The editor instance where the component is being used.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonProps\n\t\t * @property {Object} editor\n\t\t */\n\t\teditor: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Merges the properties, passed to the current component with user's configuration\n\t * via `buttonCfg` property.\n\t *\n\t * @instance\n\t * @memberof ButtonProps\n\t * @method mergeButtonCfgProps\n\t * @param {Object} props The properties to be merged with the provided configuration for this\n\t * button. If not passed, the user configuration will be merged with `this.props`\n\t * @return {Object} The merged properties\n\t */\n\tmergeButtonCfgProps(props) {\n\t\tprops = props || this.props;\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\t\tconst result = CKEDITOR.tools.merge(\n\t\t\tprops,\n\t\t\tbuttonCfg[ButtonLinkEdit.key]\n\t\t);\n\n\t\treturn result;\n\t},\n};\n\nexport default ButtonProps;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStateClasses is a mixin that decorates the domElement of a component\n * with different CSS classes based on the current state of the element.\n *\n * To check for state, the component can expose the following methods:\n * - `Function` **isActive** to check the active state\n * - `Function` **isDisabled** to check the disabled state\n *\n * @class ButtonStateClasses\n */\nconst ButtonStateClasses = {\n\t/**\n\t * Returns the list of state classes associated to the current element's state, according\n\t * to the results of the isActive and isDisabled methods.\n\t *\n\t * @instance\n\t * @memberof ButtonStateClasses\n\t * @method getStateClasses\n\t * @return {String} A string with the state CSS classes.\n\t */\n\tgetStateClasses() {\n\t\tlet stateClasses = '';\n\n\t\t// Check for active state\n\t\tif (Lang.isFunction(this.isActive) && this.isActive()) {\n\t\t\tstateClasses += 'ae-button-pressed';\n\t\t}\n\n\t\t// Check for disabled state\n\t\tif (Lang.isFunction(this.isDisabled) && this.isDisabled()) {\n\t\t\tstateClasses += ' ae-button-disabled';\n\t\t}\n\n\t\treturn stateClasses;\n\t},\n};\n\nexport default ButtonStateClasses;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ButtonStyle is a mixin that provides a style prop and some methods to\n * apply the resulting style and checking if it is present in a given\n * path or selection.\n *\n * @class ButtonStyle\n */\nconst ButtonStyle = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * The style the button should handle. Allowed values are:\n\t\t * - Object as described by\n\t\t *   http://docs.ckeditor.com/#!/api/CKEDITOR.style.\n\t\t * - String pointing to an object inside the editor instance\n\t\t *   configuration. For example, `style = 'coreStyles_bold'` will\n\t\t *   try to retrieve the style object from\n\t\t *   `editor.config.coreStyles_bold`. Nested properties such as\n\t\t *   `style = 'myplugin.myConfig.myStyle'` are also supported\n\t\t *   and will try to retrieve the style object from the editor\n\t\t *   configuration as well.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {Object|String} style\n\t\t */\n\t\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n\n\t\t/**\n\t\t * The style function the button should handle.\n\t\t * If specified, style function has higher priority than style property.\n\t\t *\n\t\t * @instance\n\t\t * @memberof ButtonStyle\n\t\t * @property {function} styleFn\n\t\t */\n\t\tstyleFn: PropTypes.func,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, both on the client and server,\n\t * immediately before the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillMount\n\t */\n\tcomponentWillMount() {\n\t\tlet style = this.props.style;\n\n\t\tif (Lang.isString(style)) {\n\t\t\tconst parts = style.split('.');\n\t\t\tlet currentMember = this.props.editor.get('nativeEditor').config;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isObject(currentMember)) {\n\t\t\t\tstyle = currentMember;\n\t\t\t}\n\t\t}\n\n\t\tthis._style = new CKEDITOR.style(style);\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted\n\t * from the DOM.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tthis._style = null;\n\t},\n\n\t/**\n\t * Returns instance of CKEDITOR.style which represents the current\n\t * button style.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method getStyle\n\t * @return {CKEDITOR.style} The current style representation.\n\t */\n\tgetStyle() {\n\t\treturn this._style;\n\t},\n\n\t/**\n\t * Checks if style is active in the current selection.\n\t *\n\t * @instance\n\t * @memberof ButtonStyle\n\t * @method isActive\n\t * @return {Boolean} True if style is active, false otherwise.\n\t */\n\tisActive() {\n\t\tconst editor = this.props.editor.get('nativeEditor');\n\n\t\tconst elementPath = editor.elementPath();\n\n\t\treturn this.getStyle().checkActive(elementPath, editor);\n\t},\n};\n\nexport default ButtonStyle;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport Lang from '../../oop/lang';\n\n/**\n * ToolbarButtons is a mixin which provides a list of buttons which have\n * to be displayed on the current toolbar depending on user preferences\n * and given state.\n *\n * @class ToolbarButtons\n */\nconst ToolbarButtons = {\n\t/**\n\t * Analyses the current selection and returns the buttons or button\n\t * groups to be rendered.\n\t *\n\t * @instance\n\t * @method getToolbarButtonGroups\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons or button groups that should be rendered.\n\t */\n\tgetToolbarButtonGroups(buttons, additionalProps) {\n\t\tconst instance = this;\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\treturn buttons.reduce((list, button) => {\n\t\t\tif (Array.isArray(button)) {\n\t\t\t\tlist.push(instance.getToolbarButtons(button, additionalProps));\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\treturn instance.getToolbarButtons(buttons, additionalProps);\n\t\t\t}\n\t\t}, []);\n\t},\n\n\t/**\n\t * Analyzes the current selection and the buttons exclusive mode value to figure out which\n\t * buttons should be present in a given state.\n\t *\n\t * @instance\n\t * @memberof ToolbarButtons\n\t * @method getToolbarButtons\n\t * @param {Array} buttons The buttons could be shown, prior to the state filtering.\n\t * @param {Object} additionalProps Additional props that should be passed down to the buttons.\n\t * @return {Array} An Array which contains the buttons that should be rendered.\n\t */\n\tgetToolbarButtons(buttons, additionalProps) {\n\t\tconst buttonProps = {};\n\n\t\tconst nativeEditor = this.props.editor.get('nativeEditor');\n\t\tconst buttonCfg = nativeEditor.config.buttonCfg || {};\n\n\t\tif (Lang.isFunction(buttons)) {\n\t\t\tbuttons = buttons.call(this) || [];\n\t\t}\n\n\t\tconst toolbarButtons = this.filterExclusive(\n\t\t\tbuttons\n\t\t\t\t.filter(button => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tbutton &&\n\t\t\t\t\t\t(AlloyEditor.Buttons[button] ||\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name])\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.map(button => {\n\t\t\t\t\tif (Lang.isString(button)) {\n\t\t\t\t\t\tbuttonProps[button] = buttonCfg[button];\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button];\n\t\t\t\t\t} else if (Lang.isString(button.name)) {\n\t\t\t\t\t\tbuttonProps[\n\t\t\t\t\t\t\tAlloyEditor.Buttons[button.name].key\n\t\t\t\t\t\t] = CKEDITOR.tools.merge(buttonCfg[button], button.cfg);\n\t\t\t\t\t\tbutton = AlloyEditor.Buttons[button.name];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn button;\n\t\t\t\t})\n\t\t).map(function(button, index) {\n\t\t\tlet props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\teditor: this.props.editor,\n\t\t\t\t\tkey:\n\t\t\t\t\t\tbutton.key !== 'separator'\n\t\t\t\t\t\t\t? button.key\n\t\t\t\t\t\t\t: `${button.key}-${index}`,\n\t\t\t\t\ttabKey: button.key,\n\t\t\t\t\ttabIndex:\n\t\t\t\t\t\tthis.props.trigger &&\n\t\t\t\t\t\tthis.props.trigger.props.tabKey === button.key\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: -1,\n\t\t\t\t\ttrigger: this.props.trigger,\n\t\t\t\t},\n\t\t\t\tbutton.key\n\t\t\t);\n\n\t\t\tprops = this.mergeDropdownProps(props, button.key);\n\n\t\t\tif (additionalProps) {\n\t\t\t\tprops = CKEDITOR.tools.merge(props, additionalProps);\n\t\t\t}\n\n\t\t\tprops = CKEDITOR.tools.merge(props, buttonProps[button.key]);\n\n\t\t\treturn React.createElement(button, props);\n\t\t}, this);\n\n\t\treturn toolbarButtons;\n\t},\n};\n\nexport default ToolbarButtons;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Lang from '../../oop/lang';\n\n/**\n * Provides functionality for displaying Widget Arrow box on top or on bottom of the widget\n * depending on the point of user interaction with the editor.\n *\n * @class WidgetArrowBox\n */\nconst WidgetArrowBox = {\n\t/**\n\t * Returns the list of arrow box classes associated to the current element's state. It relies\n\t * on the getInteractionPoint method to calculate the selection direction.\n\t *\n\t * @instance\n\t * @memberof WidgetArrowBox\n\t * @method getArrowBoxClasses\n\t * @return {String} A string with the arrow box CSS classes.\n\t */\n\tgetArrowBoxClasses() {\n\t\tlet arrowBoxClasses = 'ae-arrow-box';\n\n\t\tif (\n\t\t\tLang.isFunction(this.getInteractionPoint) &&\n\t\t\tthis.getInteractionPoint()\n\t\t) {\n\t\t\tif (\n\t\t\t\tthis.getInteractionPoint().direction ===\n\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t) {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-top';\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses += ' ae-arrow-box-bottom';\n\t\t\t}\n\t\t}\n\n\t\treturn arrowBoxClasses;\n\t},\n};\n\nexport default WidgetArrowBox;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ReactDOM from 'react-dom';\n\n/**\n * Provides functionality for managing different dropdowns inside a widget.\n *\n * @class WidgetDropdown\n */\nconst WidgetDropdown = {\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method componentWillReceiveProps\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\tthis.setState({\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t});\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once before the component is mounted.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method getInitialState\n\t */\n\tgetInitialState() {\n\t\treturn {\n\t\t\tdropdownTrigger: null,\n\t\t\titemDropdown: null,\n\t\t};\n\t},\n\n\t/**\n\t * Merges the provided object with two more properties:\n\t * - expanded - boolean flag which indicates if an widget should be\n\t *   rendered exclusively.\n\t * - toggleDropdown - function, which can be used by an widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method mergeDropdownProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to dropdown state.\n\t * @param {Object} itemKey They key of an React Widget which contains the dropdown.\n\t * @return {Object} The merged object.\n\t */\n\tmergeDropdownProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\texpanded: this.state.itemDropdown === itemKey ? true : false,\n\t\t\ttabIndex: this.state.dropdownTrigger === itemKey ? 0 : -1,\n\t\t\ttoggleDropdown: this.toggleDropdown.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Sets the active dropdown of the widget or discards the toggled\n\t * item from the state.\n\t *\n\t * @instance\n\t * @memberof WidgetDropdown\n\t * @method toggleDropdown\n\t * @param {Object} itemDropdown The widget which requests to toggle its dropdown.\n\t * @param {Number} toggleDirection User movement direction when toggled via keyboard.\n\t */\n\ttoggleDropdown(itemDropdown, toggleDirection) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdropdownTrigger: itemDropdown,\n\t\t\t\titemDropdown:\n\t\t\t\t\titemDropdown !== this.state.itemDropdown\n\t\t\t\t\t\t? itemDropdown\n\t\t\t\t\t\t: null,\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\tif (!this.state.itemDropdown) {\n\t\t\t\t\tif (this.moveFocus) {\n\t\t\t\t\t\tthis.moveFocus(toggleDirection);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tReactDOM.findDOMNode(this).focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n};\n\nexport default WidgetDropdown;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Provides functionality for managing exclusive state of an widget.\n * The exclusive state means that a button may request to be the only rendered\n * widget in its parent container. WidgetExclusive will manage this state by\n * filtering and suppressing the other sibling widgets from displaying.\n *\n * @class WidgetExclusive\n */\nconst WidgetExclusive = {\n\t/**\n\t * Cancels the exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method cancelExclusive\n\t * @param {Object} itemExclusive The widget which exclusive state should be canceled.\n\t */\n\tcancelExclusive(itemExclusive) {\n\t\tif (this.state.itemExclusive === itemExclusive) {\n\t\t\tthis.setState({\n\t\t\t\titemExclusive: null,\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Lifecycle. Invoked when a component is receiving new props.\n\t * This method is not called for the initial render.\n\t * Calling this.setState() within this function will not trigger an\n\t * additional render.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method componentWillReceiveProps\n\t * @param {Object} nextProps Object containing the current set of properties.\n\t */\n\tcomponentWillReceiveProps(_nextProps) {\n\t\t// Receiving properties means that the component is being\n\t\t// re-rendered.  Re-rendering is triggered by editorInteraction,\n\t\t// so we have to reset the exclusive state and render the UI\n\t\t// according to the new selection.\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t});\n\t},\n\n\t/**\n\t * Filters the items and returns only those with exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method filterExclusive\n\t * @param {Array} items The widgets to be filtered.\n\t * @return {Array|Object} The item with executive state.\n\t */\n\tfilterExclusive(items) {\n\t\treturn items.filter(item => {\n\t\t\tif (this.state.itemExclusive) {\n\t\t\t\tif (this.state.itemExclusive === item.key) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Merges the provided object with three more properties:\n\t * - cancelExclusive - function, which can be used by a widget in\n\t *   order to cancel executive state.\n\t * - renderExclusive - boolean flag which indicates if an widget\n\t *   should be rendered exclusively.\n\t * - requestExclusive - function, which can be used by a widget in\n\t *   order to obtain exclusive state.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method mergeExclusiveProps\n\t * @param {Object} obj The properties container which should be merged with the properties, related\n\t *    to exclusive state.\n\t * @param {Object} itemKey They key of an React Widget which should be rendered exclusively.\n\t * @return {Object} The merged object.\n\t */\n\tmergeExclusiveProps(obj, itemKey) {\n\t\treturn CKEDITOR.tools.merge(obj, {\n\t\t\tcancelExclusive: this.cancelExclusive.bind(this, itemKey),\n\t\t\trenderExclusive: this.state.itemExclusive === itemKey,\n\t\t\trequestExclusive: this.requestExclusive.bind(this, itemKey),\n\t\t});\n\t},\n\n\t/**\n\t * Requests and sets exclusive state of an widget.\n\t *\n\t * @instance\n\t * @memberof WidgetExclusive\n\t * @method requestExclusive\n\t * @param {Object} itemExclusive The widget which requests exclusive state.\n\t */\n\trequestExclusive(itemExclusive) {\n\t\tthis.setState({\n\t\t\titemExclusive,\n\t\t});\n\t},\n};\n\nexport default WidgetExclusive;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport Lang from '../../oop/lang';\n\nconst DIRECTION_NONE = 0;\nconst DIRECTION_NEXT = 1;\nconst DIRECTION_PREV = -1;\n\nconst ACTION_NONE = 0;\nconst ACTION_MOVE_FOCUS = 1;\nconst ACTION_DISMISS_FOCUS = 2;\n\n/**\n * WidgetFocusManager is a mixin that provides keyboard navigation inside a widget. To do this,\n * it exposes the following props and methods:\n *\n * @class WidgetFocusManager\n */\nconst WidgetFocusManager = {\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Callback method to be invoked when the focus manager is to be dismissed. This happens\n\t\t * in the following scenarios if a dismiss callback has been specified:\n\t\t * - A dismiss key has been pressed\n\t\t * - In a non-circular focus manager, when:\n\t\t *     - The active descendant is the first one and a prev key has been pressed.\n\t\t *     - The active descendant is the last one and a next key has been pressed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Function} onDismiss\n\t\t */\n\t\tonDismiss: PropTypes.func,\n\n\t\t/**\n\t\t * Indicates if focus should be set to the first/last descendant when the limits are reached.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {boolean} circular\n\t\t */\n\t\tcircular: PropTypes.bool.isRequired,\n\n\t\t/**\n\t\t * Indicate if should focus the first child of a container\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Boolean} focusFirstChild\n\t\t */\n\t\tfocusFirstChild: PropTypes.bool,\n\n\t\t/**\n\t\t * String representing the CSS selector used to define the elements that should be handled.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {String} descendants\n\t\t */\n\t\tdescendants: PropTypes.string.isRequired,\n\n\t\t/**\n\t\t * Object representing the keys used to navigate between descendants. The format for the prop is:\n\t\t * `{dismiss: value, dismissNext: value, dismissPrev: value, next: value, prev: value}` where\n\t\t * value can be both a number or an array of numbers with the allowed keyCodes.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetFocusManager\n\t\t * @property {Object} keys\n\t\t */\n\t\tkeys: PropTypes.object.isRequired,\n\t},\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Refreshes the descendants list.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate() {\n\t\tthis._refresh();\n\t},\n\n\t/**\n\t * Focuses the current active descendant.\n\t *\n\t * Several Widgets can be nested in a component hierarchy by attaching this focus method to\n\t * the widget DOM node, transferring the DOM focus control to the inner FocusManager.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method focus\n\t */\n\tfocus(event) {\n\t\tif (!event || this._isValidTarget(event.target)) {\n\t\t\tif (this._descendants && this._descendants.length) {\n\t\t\t\tconst activeDescendantEl = this._descendants[\n\t\t\t\t\tthis._activeDescendant\n\t\t\t\t];\n\t\t\t\t// When user clicks with the mouse, the activeElement is already set and there\n\t\t\t\t// is no need to focus it. Focusing of the active descendant (usually some button) is required\n\t\t\t\t// in case of keyboard navigation, because the focused element might be not the first button,\n\t\t\t\t// but the div element, which contains the button.\n\t\t\t\tif (\n\t\t\t\t\tdocument.activeElement !== activeDescendantEl &&\n\t\t\t\t\t!this.props.focusFirstChild\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._descendants.indexOf(document.activeElement) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tactiveDescendantEl.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handles the key events on a DOM node to execute the appropriate navigation when needed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @param {Object} event The Keyboard event that was detected on the widget DOM node.\n\t * @method handleKey\n\t */\n\thandleKey(event) {\n\t\tif (this._isValidTarget(event.target) && this._descendants) {\n\t\t\tconst action = this._getFocusAction(event);\n\n\t\t\tif (action.type) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (action.type === ACTION_MOVE_FOCUS) {\n\t\t\t\t\tthis._moveFocus(action.direction);\n\t\t\t\t}\n\n\t\t\t\tif (action.type === ACTION_DISMISS_FOCUS) {\n\t\t\t\t\tthis.props.onDismiss(action.direction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t */\n\tmoveFocus(direction) {\n\t\tdirection = Lang.isNumber(direction) ? direction : 0;\n\n\t\tthis._moveFocus(direction);\n\t},\n\n\t/**\n\t * Returns the action, if any, that a keyboard event in the current focus manager state\n\t * should produce.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusAction\n\t * @param {object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} An action object with type and direction properties.\n\t */\n\t_getFocusAction(event) {\n\t\tconst action = {\n\t\t\ttype: ACTION_NONE,\n\t\t};\n\n\t\tif (this.props.keys) {\n\t\t\tconst direction = this._getFocusMoveDirection(event);\n\n\t\t\tif (direction) {\n\t\t\t\taction.direction = direction;\n\t\t\t\taction.type = ACTION_MOVE_FOCUS;\n\t\t\t}\n\n\t\t\tconst dismissAction = this._getFocusDismissAction(event, direction);\n\n\t\t\tif (dismissAction.dismiss) {\n\t\t\t\taction.direction = dismissAction.direction;\n\t\t\t\taction.type = ACTION_DISMISS_FOCUS;\n\t\t\t}\n\t\t}\n\n\t\treturn action;\n\t},\n\n\t/**\n\t * Returns the dismiss action, if any, the focus manager should execute to yield the focus. This\n\t * will happen in any of these scenarios if a dismiss callback has been specified:\n\t * - A dismiss key has been pressed\n\t * - In a non-circular focus manager, when:\n\t *     - The active descendant is the first one and a prev key has been pressed.\n\t *     - The active descendant is the last one and a next key has been pressed.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusDismissAction\n\t * @param {Number} focusMoveDirection The focus movement direction (if any).\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Object} A dismiss action with dismiss and direction properties.\n\t */\n\t_getFocusDismissAction(event, focusMoveDirection) {\n\t\tconst dismissAction = {\n\t\t\tdirection: focusMoveDirection,\n\t\t\tdismiss: false,\n\t\t};\n\n\t\tif (this.props.onDismiss) {\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismiss)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissNext)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_NEXT;\n\t\t\t}\n\t\t\tif (this._isValidKey(event.keyCode, this.props.keys.dismissPrev)) {\n\t\t\t\tdismissAction.dismiss = true;\n\t\t\t\tdismissAction.direction = DIRECTION_PREV;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!dismissAction.dismiss &&\n\t\t\t\t!this.props.circular &&\n\t\t\t\tfocusMoveDirection\n\t\t\t) {\n\t\t\t\tdismissAction.dismiss =\n\t\t\t\t\t(focusMoveDirection === DIRECTION_PREV &&\n\t\t\t\t\t\tthis._activeDescendant === 0) ||\n\t\t\t\t\t(focusMoveDirection === DIRECTION_NEXT &&\n\t\t\t\t\t\tthis._activeDescendant ===\n\t\t\t\t\t\t\tthis._descendants.length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn dismissAction;\n\t},\n\n\t/**\n\t * Returns the direction, if any, in which the focus should be moved. In presence of the\n\t * shift key modifier, the direction of the movement is inverted.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _getFocusMoveDirection\n\t * @param {Object} event The Keyboard event.\n\t * @protected\n\t * @return {Number} The computed direction of the expected focus movement.\n\t */\n\t_getFocusMoveDirection(event) {\n\t\tlet direction = DIRECTION_NONE;\n\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.next)) {\n\t\t\tdirection = DIRECTION_NEXT;\n\t\t}\n\t\tif (this._isValidKey(event.keyCode, this.props.keys.prev)) {\n\t\t\tdirection = DIRECTION_PREV;\n\t\t}\n\n\t\tif (event.shifKey) {\n\t\t\tdirection *= -1;\n\t\t}\n\n\t\treturn direction;\n\t},\n\n\t/**\n\t * Indicates if a given keyCode is valid for the given set of keys.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {Array|Number} keys A key set. Can be a number an array of numbers representing the allowed keyCodes.\n\t * @param {Number} keyCode An event keyCode.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the key is valid.\n\t */\n\t_isValidKey(keyCode, keys) {\n\t\treturn Lang.isArray(keys)\n\t\t\t? keys.indexOf(keyCode) !== -1\n\t\t\t: keyCode === keys;\n\t},\n\n\t/**\n\t * Indicates if a given element is valid for focus management. User input elements such as\n\t * input, select or textarea are excluded.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _isValidKey\n\t * @param {DOMNode} element A DOM element.\n\t * @protected\n\t * @return {Boolean} A boolean value indicating if the element is valid.\n\t */\n\t_isValidTarget(element) {\n\t\tconst tagName = element.tagName.toLowerCase();\n\n\t\treturn (\n\t\t\ttagName !== 'input' &&\n\t\t\ttagName !== 'select' &&\n\t\t\ttagName !== 'textarea'\n\t\t);\n\t},\n\n\t/**\n\t * Moves the focus among descendants in the especified direction.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _moveFocus\n\t * @param {number} direction The direction (1 or -1) of the focus movement among descendants.\n\t * @protected\n\t */\n\t_moveFocus(direction) {\n\t\tconst numDescendants = this._descendants.length;\n\n\t\tlet descendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', -1);\n\n\t\tthis._activeDescendant += direction;\n\n\t\tif (this.props.circular) {\n\t\t\t// Calculate proper modulo result since remainder operator doesn't behave in the\n\t\t\t// same way for negative numbers\n\t\t\tthis._activeDescendant =\n\t\t\t\t((this._activeDescendant % numDescendants) + numDescendants) %\n\t\t\t\tnumDescendants;\n\t\t} else {\n\t\t\tthis._activeDescendant = Math.max(\n\t\t\t\tMath.min(this._activeDescendant, numDescendants - 1),\n\t\t\t\t0\n\t\t\t);\n\t\t}\n\n\t\tdescendant = this._descendants[this._activeDescendant];\n\n\t\tdescendant.setAttribute('tabIndex', 0);\n\t\tdescendant.focus();\n\t},\n\n\t/**\n\t * Refreshes the descendants list by executing the CSS selector again and resets the descendants tabIndex.\n\t *\n\t * @instance\n\t * @memberof WidgetFocusManager\n\t * @method _refresh\n\t * @protected\n\t */\n\t_refresh() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst descendants = domNode.querySelectorAll(\n\t\t\t\tthis.props.descendants\n\t\t\t);\n\n\t\t\tlet priorityDescendants = [];\n\n\t\t\tthis._descendants = [];\n\n\t\t\tArray.prototype.slice.call(descendants).forEach(item => {\n\t\t\t\tconst dataTabIndex = item.getAttribute('data-tabindex');\n\n\t\t\t\tif (dataTabIndex) {\n\t\t\t\t\tpriorityDescendants.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tthis._descendants.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpriorityDescendants = priorityDescendants.sort((a, b) => {\n\t\t\t\treturn (\n\t\t\t\t\tLang.toInt(a.getAttribute('data-tabindex')) >\n\t\t\t\t\tLang.toInt(b.getAttribute('data-tabindex'))\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis._descendants = priorityDescendants.concat(this._descendants);\n\n\t\t\tthis._activeDescendant = 0;\n\n\t\t\tthis._descendants.some((item, index) => {\n\t\t\t\tif (item.getAttribute('tabindex') === '0') {\n\t\t\t\t\tthis._activeDescendant = index;\n\t\t\t\t\tthis.focus();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n};\n\nexport default WidgetFocusManager;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nimport WidgetInteractionPoint from './widget-interaction-point';\n\n/**\n * Calculates the position where an Widget should be displayed based on\n * the point where user interacted with the editor.\n *\n * @class WidgetPosition\n * @uses WidgetInteractionPoint\n */\nconst WidgetPosition = {\n\tmixins: [WidgetInteractionPoint],\n\n\t// Allows validating props being passed to the component.\n\tpropTypes: {\n\t\t/**\n\t\t * Should the widget to be restricted to the viewport, or not.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Boolean} constrainToViewport\n\t\t * @default true\n\t\t */\n\t\tconstrainToViewport: PropTypes.bool,\n\n\t\t/**\n\t\t * The gutter (vertical and horizontal) between the interaction\n\t\t * point and where the widget should be rendered.\n\t\t *\n\t\t * @instance\n\t\t * @memberof WidgetPosition\n\t\t * @property {Object} gutter\n\t\t * @default {\n\t\t *     left: 0,\n\t\t *     top: 10\n\t\t * }\n\t\t */\n\t\tgutter: PropTypes.object,\n\t},\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in\n\t * the widget.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getDefaultProps\n\t */\n\tgetDefaultProps() {\n\t\treturn {\n\t\t\tgutter: {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 10,\n\t\t\t},\n\t\t\tconstrainToViewport: true,\n\t\t};\n\t},\n\n\t/**\n\t * Cancels an scheduled animation frame.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method cancelAnimation\n\t */\n\tcancelAnimation() {\n\t\tif (window.cancelAnimationFrame) {\n\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t}\n\t},\n\n\t/**\n\t * Returns an object which contains the position of the element in\n\t * page coordinates, restricted to fit to given viewport.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method getConstrainedPosition\n\t * @param {Object} attrs The following properties, provided as numbers:\n\t * - height\n\t * - left\n\t * - top\n\t * - width\n\t * @param {Object} viewPaneSize Optional. If not provided, the current viewport will be used. Should contain at least these properties:\n\t * - width\n\t * @return {Object} An object with `x` and `y` properties, which represent the constrained position of the\n\t * element.\n\t */\n\tgetConstrainedPosition(attrs, viewPaneSize) {\n\t\tviewPaneSize =\n\t\t\tviewPaneSize || new CKEDITOR.dom.window(window).getViewPaneSize();\n\n\t\tlet x = attrs.left;\n\t\tlet y = attrs.top;\n\n\t\tif (attrs.left + attrs.width > viewPaneSize.width) {\n\t\t\tx -= attrs.left + attrs.width - viewPaneSize.width;\n\t\t}\n\n\t\tif (y < 0) {\n\t\t\ty = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t},\n\n\t/**\n\t * Returns the position of the Widget taking in consideration the\n\t * {{#crossLink \"WidgetPosition/gutter:attribute\"}}{{/crossLink}} attribute.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @protected\n\t * @method  getWidgetXYPoint\n\t * @param {Number} left The left offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} top The top offset in page coordinates where Toolbar should be shown.\n\t * @param {Number} direction The direction of the selection. May be one of the following:\n\t * CKEDITOR.SELECTION_BOTTOM_TO_TOP or CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t * @return {Array} An Array with left and top offsets in page coordinates.\n\t */\n\tgetWidgetXYPoint(left, top, direction) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst gutter = this.props.gutter;\n\t\tconst offsetWidth = domNode.offsetWidth;\n\t\tconst halfWidth = offsetWidth / 2;\n\n\t\tif (\n\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM ||\n\t\t\tdirection === CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t) {\n\t\t\tleft = left - gutter.left - halfWidth;\n\n\t\t\ttop =\n\t\t\t\tdirection === CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t\t? top + gutter.top\n\t\t\t\t\t: top - domNode.offsetHeight - gutter.top;\n\t\t} else if (\n\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT ||\n\t\t\tdirection === CKEDITOR.SELECTION_RIGHT_TO_LEFT\n\t\t) {\n\t\t\tleft =\n\t\t\t\tdirection === CKEDITOR.SELECTION_LEFT_TO_RIGHT\n\t\t\t\t\t? left + gutter.left + domNode.offsetHeight / 2\n\t\t\t\t\t: left - (3 * domNode.offsetHeight) / 2 - gutter.left;\n\n\t\t\ttop = top - gutter.top - domNode.offsetHeight / 2;\n\t\t}\n\n\t\tif (left < 0) {\n\t\t\tleft = 0;\n\t\t}\n\n\t\tif (left > document.body.offsetWidth - halfWidth) {\n\t\t\tleft = document.body.offsetWidth - halfWidth;\n\t\t}\n\n\t\tif (top < 0) {\n\t\t\ttop = 0;\n\t\t}\n\n\t\treturn [left, top];\n\t},\n\n\t/**\n\t * Returns true if the widget is visible, false otherwise\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method isVisible\n\t * @return {Boolean} True if the widget is visible, false otherwise\n\t */\n\tisVisible() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\treturn domElement.hasClass('alloy-editor-visible');\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Moves a widget from a starting point to a destination point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method moveToPoint\n\t * @param  {Object} startPoint The starting point for the movement.\n\t * @param  {Object} endPoint The destination point for the movement.\n\t */\n\tmoveToPoint(startPoint, endPoint) {\n\t\tconst domElement = new CKEDITOR.dom.element(ReactDOM.findDOMNode(this));\n\n\t\tdomElement.setStyles({\n\t\t\tleft: startPoint[0] + 'px',\n\t\t\ttop: startPoint[1] + 'px',\n\t\t\topacity: 0,\n\t\t\tpointerEvents: 'none',\n\t\t});\n\n\t\tdomElement.removeClass('alloy-editor-invisible');\n\n\t\tthis._animate(() => {\n\t\t\tdomElement.addClass('ae-toolbar-transition');\n\t\t\tdomElement.addClass('alloy-editor-visible');\n\t\t\tdomElement.setStyles({\n\t\t\t\tleft: endPoint[0] + 'px',\n\t\t\t\ttop: endPoint[1] + 'px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\n\t\t\t// 150ms to match transition-duration for .ae-toolbar-transition:\n\t\t\tsetTimeout(() => {\n\t\t\t\tdomElement.setStyles({\n\t\t\t\t\tpointerEvents: '',\n\t\t\t\t});\n\t\t\t}, 150);\n\t\t});\n\t},\n\n\t/**\n\t * Shows the widget with the default animation transition.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method show\n\t */\n\tshow() {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\t\tconst uiNode = this.props.editor.get('uiNode');\n\n\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\tif (!this.isVisible() && domNode) {\n\t\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\t\tif (interactionPoint) {\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tlet finalX, finalY, initialX, initialY;\n\n\t\t\t\tfinalX = initialX = parseFloat(domElement.getStyle('left'));\n\t\t\t\tfinalY = initialY = parseFloat(domElement.getStyle('top'));\n\n\t\t\t\tif (this.props.constrainToViewport) {\n\t\t\t\t\tconst res = this.getConstrainedPosition({\n\t\t\t\t\t\theight: parseFloat(domNode.offsetHeight),\n\t\t\t\t\t\tleft: finalX,\n\t\t\t\t\t\ttop: finalY,\n\t\t\t\t\t\twidth: parseFloat(domNode.offsetWidth),\n\t\t\t\t\t});\n\n\t\t\t\t\tfinalX = res.x;\n\t\t\t\t\tfinalY = res.y;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tinteractionPoint.direction ===\n\t\t\t\t\tCKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t\t\t) {\n\t\t\t\t\tinitialY =\n\t\t\t\t\t\tthis.props.selectionData.region.bottom + scrollTop;\n\t\t\t\t} else {\n\t\t\t\t\tinitialY = this.props.selectionData.region.top + scrollTop;\n\t\t\t\t}\n\n\t\t\t\tthis.moveToPoint([initialX, initialY], [finalX, finalY]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Updates the widget position based on the current interaction point.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method updatePosition\n\t */\n\tupdatePosition() {\n\t\tconst interactionPoint = this.getInteractionPoint();\n\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (interactionPoint && domNode) {\n\t\t\tconst uiNode = this.props.editor.get('uiNode') || document.body;\n\t\t\tconst uiNodeStyle = getComputedStyle(uiNode);\n\t\t\tconst uiNodeMarginLeft = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-left'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst uiNodeMarginRight = parseInt(\n\t\t\t\tuiNodeStyle.getPropertyValue('margin-right'),\n\t\t\t\t10\n\t\t\t);\n\t\t\tconst totalWidth =\n\t\t\t\tuiNodeMarginLeft + uiNode.clientWidth + uiNodeMarginRight;\n\n\t\t\tconst scrollTop = uiNode.tagName !== 'BODY' ? uiNode.scrollTop : 0;\n\n\t\t\tconst xy = this.getWidgetXYPoint(\n\t\t\t\tinteractionPoint.x,\n\t\t\t\tinteractionPoint.y,\n\t\t\t\tinteractionPoint.direction\n\t\t\t);\n\t\t\txy[1] += scrollTop;\n\n\t\t\tif (xy[0] < 0) {\n\t\t\t\txy[0] = 0;\n\t\t\t}\n\t\t\tif (xy[0] > totalWidth - domNode.offsetWidth) {\n\t\t\t\txy[0] = totalWidth - domNode.offsetWidth;\n\t\t\t}\n\n\t\t\tnew CKEDITOR.dom.element(domNode).setStyles({\n\t\t\t\tleft: xy[0] + 'px',\n\t\t\t\ttop: xy[1] + 'px',\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Requests an animation frame, if possible, to simulate an animation.\n\t *\n\t * @instance\n\t * @memberof WidgetPosition\n\t * @method _animate\n\t * @param {Function} callback The function to be executed on the scheduled frame.\n\t * @protected\n\t */\n\t_animate(callback) {\n\t\tif (window.requestAnimationFrame) {\n\t\t\tthis._animationFrameId = window.requestAnimationFrame(callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t},\n};\n\nexport default WidgetPosition;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport ToolbarAdd from './toolbar-add.jsx';\nimport ToolbarStyles from './toolbar-styles.jsx';\n\nexport default {\n\t[ToolbarAdd.key]: ToolbarAdd,\n\t[ToolbarStyles.key]: ToolbarStyles,\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\nconst POSITION_LEFT = 1;\nconst POSITION_RIGHT = 2;\n\n/**\n * The ToolbarAdd class provides functionality for adding content to the editor.\n *\n * @class ToolbarAdd\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarAdd extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\n\t\t// In case of exclusive rendering, focus the first descendant (button)\n\t\t// so the user will be able to start interacting with the buttons immediately.\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\t// Some operations such as `requestExclusive` may force editor to blur which will\n\t\t// invalidate the `props.editorEvent` stored value, without causing a `props` change.\n\t\t// For example, if the editor is empty, `ae_placeholder` plugin will remove\n\t\t// the target from the DOM and will prevent `add` toolbar from rendering.\n\t\t//\n\t\t// It should be safe to assume that if you have been able to render the toolbar\n\t\t// and request the exclusive mode, then rendering might be kept until the exclusive mode is left.\n\t\tif (\n\t\t\t!this.state.itemExclusive &&\n\t\t\tthis.props.editorEvent &&\n\t\t\tthis.props.editorEvent.data.nativeEvent.target &&\n\t\t\t!this.props.editorEvent.data.nativeEvent.target.isContentEditable\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst buttons = this._getButtons();\n\t\tconst className = this._getToolbarClassName();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\tclassName={className}\n\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\trole=\"toolbar\"\n\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t<div className=\"ae-container\">{buttons}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Returns a list of buttons that will eventually render to HTML.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getButtons\n\t * @protected\n\t * @return {Object} The buttons which have to be rendered.\n\t */\n\t_getButtons() {\n\t\tlet buttons;\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tbuttons = this.getToolbarButtons(this.props.config.buttons);\n\t\t} else {\n\t\t\tif (this.props.selectionData && this.props.selectionData.region) {\n\t\t\t\tbuttons = (\n\t\t\t\t\t<button\n\t\t\t\t\t\taria-label={AlloyEditor.Strings.add}\n\t\t\t\t\t\tclassName=\"ae-button ae-button-add\"\n\t\t\t\t\t\tonClick={this.props.requestExclusive.bind(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tToolbarAdd.key\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttitle={AlloyEditor.Strings.add}>\n\t\t\t\t\t\t<ButtonIcon symbol=\"plus\" />\n\t\t\t\t\t</button>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn buttons;\n\t}\n\n\t/**\n\t * Returns the class name of the toolbar in case of both exclusive and normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _getToolbarClassName\n\t * @protected\n\t * @return {String} The class name which have to be applied to the DOM element.\n\t */\n\t_getToolbarClassName() {\n\t\tlet cssClass = 'ae-toolbar-add';\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tcssClass = 'ae-toolbar ' + this.getArrowBoxClasses();\n\t\t}\n\n\t\treturn cssClass;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar in exclusive or normal mode.\n\t *\n\t * @instance\n\t * @memberof ToolbarAdd\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\tlet region;\n\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.props.renderExclusive) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t} else {\n\t\t\tif (this.props.selectionData) {\n\t\t\t\tregion = this.props.selectionData.region;\n\t\t\t}\n\n\t\t\tif (region) {\n\t\t\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\t\t\tconst domElement = new CKEDITOR.dom.element(domNode);\n\n\t\t\t\tconst startRect = region.startRect || region;\n\n\t\t\t\tconst nativeEditor = this.context.editor.get('nativeEditor');\n\n\t\t\t\tconst clientRect = nativeEditor.editable().getClientRect();\n\n\t\t\t\tlet offsetLeft;\n\n\t\t\t\tconst position =\n\t\t\t\t\tthis.props.config.position || this.props.position;\n\n\t\t\t\tif (position === POSITION_LEFT) {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.left -\n\t\t\t\t\t\tdomNode.offsetWidth -\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t} else {\n\t\t\t\t\toffsetLeft =\n\t\t\t\t\t\tclientRect.right +\n\t\t\t\t\t\tthis.props.gutterExclusive.left +\n\t\t\t\t\t\t'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.left = offsetLeft;\n\n\t\t\t\tdomNode.style.top =\n\t\t\t\t\tMath.floor((region.bottom + region.top) / 2) + 'px';\n\n\t\t\t\tconst uiNode = this.context.editor.get('uiNode');\n\n\t\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\t\tif (nativeEditor.element.getStyle('overflow') !== 'auto') {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tregion.top -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2 +\n\t\t\t\t\t\t\t\tstartRect.height / 2 +\n\t\t\t\t\t\t\t\tscrollTop\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t} else {\n\t\t\t\t\tdomNode.style.top =\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\tnativeEditor.element.$.offsetTop +\n\t\t\t\t\t\t\t\tstartRect.height / 2 -\n\t\t\t\t\t\t\t\tdomNode.offsetHeight / 2\n\t\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\n\t\t\t\tdomNode.style.opacity = 1;\n\n\t\t\t\tdomElement.removeClass('ae-arrow-box');\n\n\t\t\t\tthis.cancelAnimation();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default add\n * @memberof ToolbarAdd\n * @property {String} key\n * @static\n */\nToolbarAdd.key = 'add';\n\n/**\n * Defines the constant for positioning the Toolbar on left of the editable area.\n *\n * @default 1\n * @memberof ToolbarAdd\n * @property {String} left\n * @static\n */\nToolbarAdd.left = POSITION_LEFT;\n\n/**\n * Defines the constant for positioning the Toolbar on right of the editable area.\n *\n * @default 2\n * @memberof ToolbarAdd\n * @property {String} right\n * @static\n */\nToolbarAdd.right = POSITION_RIGHT;\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarAdd\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarAdd.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-button',\n\tgutterExclusive: {\n\t\tleft: 10,\n\t\ttop: 0,\n\t},\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n\tposition: POSITION_LEFT,\n};\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarAdd)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../../adapter/editor-context';\nimport Lang from '../../oop/lang';\nimport ToolbarButtons from '../base/toolbar-buttons';\nimport WidgetDropdown from '../base/widget-dropdown';\nimport WidgetExclusive from '../base/widget-exclusive';\nimport WidgetFocusManager from '../base/widget-focus-manager';\n\n/**\n * The ToolbarStyles class hosts the buttons for styling a text selection.\n *\n * @class ToolbarStyles\n * @uses ToolbarButtons\n * @uses WidgetDropdown\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass ToolbarStyles extends React.Component {\n\tstatic contextType = EditorContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client (not on the server),\n\t * immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * This method is not called for the initial render.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method componentDidUpdate\n\t * @param {Object} prevProps The previous state of the component's properties.\n\t * @param {Object} prevState Component's previous state.\n\t */\n\tcomponentDidUpdate(_prevProps, _prevState) {\n\t\tthis._updatePosition();\n\t}\n\n\t/**\n\t * Lifecycle. Renders the buttons for adding content or hides the toolbar\n\t * if user interacted with a non-editable element.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method render\n\t * @return {Object|null} The content which should be rendered.\n\t */\n\trender() {\n\t\tconst currentSelection = this._getCurrentSelection();\n\n\t\tif (currentSelection) {\n\t\t\tconst getArrowBoxClassesFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.getArrowBoxClasses\n\t\t\t);\n\t\t\tlet arrowBoxClasses;\n\n\t\t\tif (getArrowBoxClassesFn) {\n\t\t\t\tarrowBoxClasses = getArrowBoxClassesFn();\n\t\t\t} else {\n\t\t\t\tarrowBoxClasses = this.getArrowBoxClasses();\n\t\t\t}\n\n\t\t\tconst cssClasses = 'ae-toolbar-styles ' + arrowBoxClasses;\n\n\t\t\tlet buttons = currentSelection.buttons;\n\n\t\t\tif (typeof buttons === 'object' && !Array.isArray(buttons)) {\n\t\t\t\tbuttons =\n\t\t\t\t\tbuttons[this.context.editor.get('mode')] ||\n\t\t\t\t\tbuttons['simple'];\n\t\t\t}\n\n\t\t\tconst buttonsGroup = this.getToolbarButtonGroups(buttons, {\n\t\t\t\tmanualSelection: this.props.editorEvent\n\t\t\t\t\t? this.props.editorEvent.data.manualSelection\n\t\t\t\t\t: null,\n\t\t\t\tselectionType: currentSelection.name,\n\t\t\t});\n\n\t\t\tconst hasGroups =\n\t\t\t\tbuttonsGroup.filter(button => {\n\t\t\t\t\treturn Array.isArray(button);\n\t\t\t\t}).length > 0;\n\n\t\t\tlet className = 'ae-container';\n\n\t\t\tif (hasGroups) {\n\t\t\t\tclassName += ' ae-container-column';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\taria-label={AlloyEditor.Strings.styles}\n\t\t\t\t\tclassName={cssClasses}\n\t\t\t\t\tdata-tabindex={this.props.config.tabIndex || 0}\n\t\t\t\t\tonFocus={this.focus.bind(this)}\n\t\t\t\t\tonKeyDown={this.handleKey.bind(this)}\n\t\t\t\t\trole=\"toolbar\"\n\t\t\t\t\ttabIndex=\"-1\">\n\t\t\t\t\t<div className={className}>\n\t\t\t\t\t\t{buttonsGroup.map((value, index) => {\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div className=\"ae-row\" key={index}>\n\t\t\t\t\t\t\t\t\t\t{value.map(button => {\n\t\t\t\t\t\t\t\t\t\t\treturn button;\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieve a function from String. It converts a fully qualified string into the mapped function.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getSelectionFunction\n\t * @param {Function|String} selectionFn A function, or a fully qualified string pointing to the desired one (e.g. 'AlloyEditor.SelectionTest.image').\n\t * @protected\n\t * @return {Function} The mapped function.\n\t */\n\t_getSelectionFunction(selectionFn) {\n\t\tlet selectionFunction;\n\n\t\tif (Lang.isFunction(selectionFn)) {\n\t\t\tselectionFunction = selectionFn;\n\t\t} else if (Lang.isString(selectionFn)) {\n\t\t\tconst parts = selectionFn.split('.');\n\t\t\tlet currentMember = window;\n\t\t\tlet property = parts.shift();\n\n\t\t\twhile (\n\t\t\t\tproperty &&\n\t\t\t\tLang.isObject(currentMember) &&\n\t\t\t\tLang.isObject(currentMember[property])\n\t\t\t) {\n\t\t\t\tcurrentMember = currentMember[property];\n\t\t\t\tproperty = parts.shift();\n\t\t\t}\n\n\t\t\tif (Lang.isFunction(currentMember)) {\n\t\t\t\tselectionFunction = currentMember;\n\t\t\t}\n\t\t}\n\n\t\treturn selectionFunction;\n\t}\n\n\t/**\n\t * Analyzes the current editor selection and returns the selection configuration that matches.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _getCurrentSelection\n\t * @protected\n\t * @return {Object} The matched selection configuration.\n\t */\n\t_getCurrentSelection() {\n\t\tconst eventPayload = this.props.editorEvent\n\t\t\t? this.props.editorEvent.data\n\t\t\t: null;\n\t\tlet selection;\n\n\t\tif (eventPayload) {\n\t\t\tthis.props.config.selections.some(function(item) {\n\t\t\t\tconst testFn = this._getSelectionFunction(item.test);\n\t\t\t\tlet result;\n\n\t\t\t\tif (testFn) {\n\t\t\t\t\tresult =\n\t\t\t\t\t\teventPayload.manualSelection === item.name ||\n\t\t\t\t\t\ttestFn({\n\t\t\t\t\t\t\tdata: eventPayload,\n\t\t\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (result) {\n\t\t\t\t\tselection = item;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, this);\n\t\t}\n\n\t\treturn selection;\n\t}\n\n\t/**\n\t * Calculates and sets the position of the toolbar.\n\t *\n\t * @instance\n\t * @memberof ToolbarStyles\n\t * @method _updatePosition\n\t * @protected\n\t */\n\t_updatePosition() {\n\t\t// If component is not mounted, there is nothing to do\n\t\tif (!ReactDOM.findDOMNode(this)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentSelection = this._getCurrentSelection();\n\t\tlet result;\n\n\t\t// If current selection has a function called `setPosition`, call it\n\t\t// and check the returned value. If false, fallback to the default positioning logic.\n\t\tif (currentSelection) {\n\t\t\tconst setPositionFn = this._getSelectionFunction(\n\t\t\t\tcurrentSelection.setPosition\n\t\t\t);\n\n\t\t\tif (setPositionFn) {\n\t\t\t\tresult = setPositionFn.call(this, {\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.props.editorEvent,\n\t\t\t\t\tselectionData: this.props.selectionData,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!result) {\n\t\t\tthis.updatePosition();\n\t\t\tthis.show();\n\t\t}\n\t}\n}\n\n/**\n * Lifecycle. Returns the default values of the properties used in the widget.\n *\n * @instance\n * @memberof ToolbarStyles\n * @method getDefaultProps\n * @return {Object} The default properties.\n */\nToolbarStyles.defaultProps = {\n\tcircular: true,\n\tdescendants: '.ae-input, .ae-button:not([disabled]), .ae-toolbar-element',\n\tkeys: {\n\t\tdismiss: [27],\n\t\tnext: [39, 40],\n\t\tprev: [37, 38],\n\t},\n};\n\n/**\n * The name which will be used as an alias of the button in the configuration.\n *\n * @default styles\n * @memberof ToolbarStyles\n * @property {String} key\n * @static\n */\nToolbarStyles.key = 'styles';\n\nexport default WidgetDropdown(\n\tWidgetExclusive(WidgetFocusManager(ToolbarButtons(ToolbarStyles)))\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport '../core';\n\nimport '../plugins';\n\nimport '../components/uibridge';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {removeImageCommand} from '../commands';\nimport UI from '../components/main.jsx';\nimport Base from '../oop/base';\nimport Lang from '../oop/lang';\nimport extend from '../oop/oop';\nimport Selections from '../selections/selections';\nimport EditorContext from './editor-context';\n\nconst EMBED_VIDEO_WIDTH = 560;\nconst EMBED_VIDEO_HEIGHT = 315;\n\n/**\n * AlloyEditor main class. Creates instance of the editor and provides the user configuration\n * to the UI.\n *\n * @class Core\n * @constructor\n * @param {Object} config The configuration to be used.\n */\nfunction Core(config) {\n\tCore.superclass.constructor.call(this, config);\n}\n\nextend(\n\tCore,\n\tBase,\n\t{\n\t\t/**\n\t\t * Initializer lifecycle implementation for the AlloyEditor class. Creates a CKEditor\n\t\t * instance, passing it the provided configuration attributes.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method initializer\n\t\t * @param {Object} config Configuration object literal for the editor.\n\t\t */\n\t\tinitializer(config) {\n\t\t\tconst node = this.get('srcNode');\n\n\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\tnode.setAttribute('contenteditable', 'true');\n\t\t\t}\n\n\t\t\tconst editor = CKEDITOR.inline(node);\n\n\t\t\teditor.config.allowedContent = this.get('allowedContent');\n\n\t\t\teditor.config.toolbars = this.get('toolbars');\n\n\t\t\teditor.config.removePlugins = this.get('removePlugins');\n\n\t\t\teditor.config.extraPlugins = this.get('extraPlugins');\n\n\t\t\teditor.config.embedProviders = this.get('embedProviders');\n\n\t\t\teditor.config.placeholderClass = this.get('placeholderClass');\n\n\t\t\teditor.config.pasteFromWordRemoveStyles = false;\n\t\t\teditor.config.pasteFromWordRemoveFontStyles = false;\n\n\t\t\teditor.config.selectionKeystrokes = this.get('selectionKeystrokes');\n\n\t\t\teditor.config.spritemap = this.get('spritemap');\n\n\t\t\tLang.mix(editor.config, config);\n\n\t\t\tif (CKEDITOR.env.ie && !CKEDITOR.env.edge) {\n\t\t\t\tconst plugin =\n\t\t\t\t\tCKEDITOR.env.version === 11\n\t\t\t\t\t\t? 'ae_dragresize_ie11'\n\t\t\t\t\t\t: 'ae_dragresize_ie';\n\n\t\t\t\teditor.config.extraPlugins = editor.config.extraPlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t\teditor.config.removePlugins = editor.config.removePlugins.replace(\n\t\t\t\t\t'ae_dragresize',\n\t\t\t\t\tplugin\n\t\t\t\t);\n\t\t\t}\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tthis._addReadOnlyLinkClickListener(editor);\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst extraCommands = this.get('extraCommands');\n\n\t\t\t\tconst extraCommandKeys = Object.keys(extraCommands);\n\t\t\t\tfor (let i = 0; i < extraCommandKeys.length; i++) {\n\t\t\t\t\tconst commandName = extraCommandKeys[i];\n\n\t\t\t\t\tif (editor.commands[commandName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.addCommand(commandName, extraCommands[commandName]);\n\t\t\t\t}\n\n\t\t\t\teditable.addClass('ae-editable');\n\t\t\t});\n\n\t\t\tthis._editor = editor;\n\n\t\t\tAlloyEditor.loadLanguageResources(this._renderUI.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Destructor lifecycle implementation for the AlloyEdtor class. Destroys the CKEditor\n\t\t * instance and destroys all created toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method destructor\n\t\t */\n\t\tdestructor() {\n\t\t\tthis._destroyed = true;\n\n\t\t\tif (this._editorUIElement) {\n\t\t\t\tReactDOM.unmountComponentAtNode(this._editorUIElement);\n\t\t\t\tthis._editorUIElement.parentNode.removeChild(\n\t\t\t\t\tthis._editorUIElement\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\n\t\t\tif (nativeEditor) {\n\t\t\t\tconst editable = nativeEditor.editable();\n\n\t\t\t\tif (editable) {\n\t\t\t\t\teditable.removeClass('ae-editable');\n\n\t\t\t\t\tif (this.get('enableContentEditable')) {\n\t\t\t\t\t\tthis.get('srcNode').setAttribute(\n\t\t\t\t\t\t\t'contenteditable',\n\t\t\t\t\t\t\t'false'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._clearSelections();\n\n\t\t\t\tnativeEditor.destroy();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear selections from window object\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _clearSelections\n\t\t */\n\t\t_clearSelections() {\n\t\t\tconst nativeEditor = this.get('nativeEditor');\n\t\t\tconst isMSSelection = typeof window.getSelection != 'function';\n\n\t\t\tif (isMSSelection) {\n\t\t\t\tnativeEditor.document.$.selection.empty();\n\t\t\t} else {\n\t\t\t\tnativeEditor.document\n\t\t\t\t\t.getWindow()\n\t\t\t\t\t.$.getSelection()\n\t\t\t\t\t.removeAllRanges();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Method to set default link behavior\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _addReadOnlyLinkClickListener\n\t\t * @param {Object} editor\n\t\t */\n\t\t_addReadOnlyLinkClickListener(editor) {\n\t\t\teditor.editable().on('click', this._defaultReadOnlyClickFn, this, {\n\t\t\t\teditor,\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Called on `click` event when the editor is in read only mode. Navigates to link's URL or opens\n\t\t * the link in a new window.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @event readOnlyClick\n\t\t * @protected\n\t\t * @method _defaultReadOnlyClickFn\n\t\t * @param {Object} event The fired `click` event payload\n\t\t */\n\t\t_defaultReadOnlyClickFn(event) {\n\t\t\tconst mouseEvent = event.data.$;\n\t\t\tconst hasCtrlKey = mouseEvent.ctrlKey || mouseEvent.metaKey;\n\t\t\tconst shouldOpen = this._editor.config.readOnly || hasCtrlKey;\n\n\t\t\tmouseEvent.preventDefault();\n\n\t\t\tif (!shouldOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tevent.listenerData.editor\n\t\t\t\t\t.editable()\n\t\t\t\t\t.editor.fire('readOnlyClick', event.data) !== false\n\t\t\t) {\n\t\t\t\tconst ckElement = new CKEDITOR.dom.elementPath(\n\t\t\t\t\tevent.data.getTarget(),\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tconst link = ckElement.lastElement;\n\n\t\t\t\tif (link) {\n\t\t\t\t\tconst href = link.$.attributes.href\n\t\t\t\t\t\t? link.$.attributes.href.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tconst target = hasCtrlKey\n\t\t\t\t\t\t? '_blank'\n\t\t\t\t\t\t: link.$.attributes.target\n\t\t\t\t\t\t? link.$.attributes.target.value\n\t\t\t\t\t\t: null;\n\t\t\t\t\tthis._redirectLink(href, target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the API of CKEditor OOTB.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _getNativeEditor\n\t\t * @return {Object} The current instance of CKEditor.\n\t\t */\n\t\t_getNativeEditor() {\n\t\t\treturn this._editor;\n\t\t},\n\n\t\t/**\n\t\t * Redirects the browser to a given link\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _redirectLink\n\t\t * @param {string} href The href to take the browser to\n\t\t * @param {string=} target Specifies where to display the link\n\t\t */\n\t\t_redirectLink(href, target) {\n\t\t\tif (target && href) {\n\t\t\t\twindow.open(href, target);\n\t\t\t} else if (href) {\n\t\t\t\twindow.location.href = href;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Renders the specified from the user toolbars.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _renderUI\n\t\t */\n\t\t_renderUI() {\n\t\t\tif (!this._destroyed) {\n\t\t\t\tconst editorUIElement = document.createElement('div');\n\t\t\t\teditorUIElement.className = 'ae-ui';\n\n\t\t\t\tconst uiNode = this.get('uiNode') || document.body;\n\n\t\t\t\tuiNode.appendChild(editorUIElement);\n\n\t\t\t\tconst callbackRef = element => {\n\t\t\t\t\tif (!this._mainUI && element) {\n\t\t\t\t\t\tthis._mainUI = element;\n\t\t\t\t\t\tthis.get('nativeEditor').fire('uiReady');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tReactDOM.render(\n\t\t\t\t\t<EditorContext.Provider value={{editor: this}}>\n\t\t\t\t\t\t<UI\n\t\t\t\t\t\t\teventsDelay={this.get('eventsDelay')}\n\t\t\t\t\t\t\tref={callbackRef}\n\t\t\t\t\t\t\ttoolbars={this.get('toolbars')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</EditorContext.Provider>,\n\t\t\t\t\teditorUIElement\n\t\t\t\t);\n\n\t\t\t\tthis._editorUIElement = editorUIElement;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * The function returns an HTML element from the passed value. If the passed value is a string, it should be\n\t\t * the Id of the element which have to be retrieved from the DOM.\n\t\t * If an HTML Element is passed, the element itself will be returned.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @method _toElement\n\t\t * @protected\n\t\t * @param {!(String|HTMLElement)} value String, which have to correspond to an HTML element from the DOM,\n\t\t * or the HTML element itself. If Id is passed, the HTML element will be retrieved from the DOM.\n\t\t * @return {HTMLElement} An HTML element.\n\t\t */\n\t\t_toElement(value) {\n\t\t\tif (Lang.isString(value)) {\n\t\t\t\tvalue = document.getElementById(value);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\n\t\t/**\n\t\t * Validates the allowed content attribute. Look\n\t\t * [here](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent) for more information about the\n\t\t * supported values.\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateAllowedContent\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid configuration, false otherwise\n\t\t */\n\t\t_validateAllowedContent(value) {\n\t\t\treturn (\n\t\t\t\tLang.isString(value) ||\n\t\t\t\tLang.isObject(value) ||\n\t\t\t\tLang.isBoolean(value)\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Validates the value of toolbars attribute\n\t\t *\n\t\t * @memberof Core\n\t\t * @instance\n\t\t * @protected\n\t\t * @method _validateToolbars\n\t\t * @param {Any} value The value to be checked\n\t\t * @return {Boolean} True if the current value is valid toolbars configuration, false otherwise\n\t\t */\n\t\t_validateToolbars(value) {\n\t\t\treturn Lang.isObject(value) || Lang.isNull(value);\n\t\t},\n\t},\n\t{\n\t\tATTRS: {\n\t\t\t/**\n\t\t\t * Configures the allowed content for the current instance of AlloyEditor.\n\t\t\t * Look on the [official CKEditor API](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-allowedContent)\n\t\t\t * for more information about the valid values.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property allowedContent\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t * @type {Boolean, String, Object}\n\t\t\t */\n\t\t\tallowedContent: {\n\t\t\t\tvalidator: '_validateAllowedContent',\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Callback to be invoked when clicking on the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkCallback\n\t\t\t * @default undefined\n\t\t\t * @type {Function|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkCallback: {\n\t\t\t\tvalidator: Lang.isFunction,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Configuration for the\n\t\t\t * <code>src/components/buttons/button-link-edit-browse.jsx</code>\n\t\t\t * component.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @propety documentBrowseLinkUrl\n\t\t\t * @default undefined\n\t\t\t * @type {String|undefined}\n\t\t\t */\n\t\t\tdocumentBrowseLinkUrl: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: undefined,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * List of embed providers for videos\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property embedProviders\n\t\t\t * @default []\n\t\t\t * @type Array}\n\t\t\t */\n\t\t\tembedProviders: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'facebook',\n\t\t\t\t\t\ttpl: `<iframe allowFullScreen=\"true\" allowTransparency=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.facebook.com/plugins/video.php?href={embedId}'\n\t\t\t\t\t\t\t\t\t\t\t\t &show_text=0&width=${EMBED_VIDEO_WIDTH}&height=${EMBED_VIDEO_HEIGHT}\" scrolling=\"no\"\n\t\t\t\t\t\t\t\t\t\t\t\t style=\"border:none;overflow:hidden\" width=\"${EMBED_VIDEO_WIDTH}}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'(https?:\\\\/\\\\/(?:www\\\\.)?facebook.com\\\\/\\\\S*\\\\/videos\\\\/\\\\S*)',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'twitch',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen=\"true\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://player.twitch.tv/?autoplay=false&video={embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t scrolling=\"no\" width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?twitch.tv\\\\/videos\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'vimeo',\n\t\t\t\t\t\ttpl: `<iframe allowfullscreen frameborder=\"0\" height=\"${EMBED_VIDEO_HEIGHT}\"\n\t\t\t\t\t\t\t\t\t\t\t\t mozallowfullscreen src=\"https://player.vimeo.com/video/{embedId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t webkitallowfullscreen width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/album\\\\/.*\\\\/video\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/channels\\\\/.*\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/groups\\\\/.*\\\\/videos\\\\/(\\\\S*)',\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?vimeo\\\\.com\\\\/(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'youtube',\n\t\t\t\t\t\ttpl: `<iframe allow=\"autoplay; encrypted-media\" allowfullscreen\n\t\t\t\t\t\t\t\t\t\t\t\t height=\"${EMBED_VIDEO_HEIGHT}\" frameborder=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t src=\"https://www.youtube.com/embed/{embedId}?rel=0\"\n\t\t\t\t\t\t\t\t\t\t\t\t width=\"${EMBED_VIDEO_WIDTH}\"></iframe>`,\n\t\t\t\t\t\ttype: 'video',\n\t\t\t\t\t\turlSchemes: [\n\t\t\t\t\t\t\t'https?:\\\\/\\\\/(?:www\\\\.)?youtube.com\\\\/watch\\\\?v=(\\\\S*)$',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies whether AlloyEditor set the contenteditable attribute\n\t\t\t * to \"true\" on its srcNode.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property enableContentEditable\n\t\t\t * @type Boolean\n\t\t\t * @default true\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tenableContentEditable: {\n\t\t\t\tvalidator: Lang.isBoolean,\n\t\t\t\tvalue: true,\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The delay (timeout), in ms, after which events such like key or mouse events will be processed.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property eventsDelay\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\teventsDelay: {\n\t\t\t\tvalidator: Lang.isNumber,\n\t\t\t\tvalue: 100,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The list of extra commands to be added to the editor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraCommands\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\textraCommands: {\n\t\t\t\tvalidator: Lang.isObject,\n\t\t\t\tvalue: {\n\t\t\t\t\tremoveImage: removeImageCommand,\n\t\t\t\t},\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the extra plugins which have to be loaded to the current CKEditor instance in order to\n\t\t\t * make AlloyEditor to work properly.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property extraPlugins\n\t\t\t * @default 'uicore,selectionregion,dragresize,addimages,placeholder,tabletools,tableresize,autolink'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\textraPlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue:\n\t\t\t\t\t'ae_uicore,ae_selectionregion,ae_selectionkeystrokes,ae_imagealignment,ae_addimages,ae_placeholder,' +\n\t\t\t\t\t'ae_tabletools,ae_tableresize,ae_autolink,ae_embed,ae_autolist,ae_dragresize,' +\n\t\t\t\t\t'ae_uibridge,ae_richcombobridge,ae_panelmenubuttonbridge,ae_menubridge,ae_menubuttonbridge,ae_buttonbridge,font,colorbutton',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the \"mode\" for alloy editor\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property mode\n\t\t\t * @default 'simple'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tmode: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'simple',\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Retrieves the native CKEditor instance. Having this, the developer may use the full API of CKEditor.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property nativeEditor\n\t\t\t * @readOnly\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tnativeEditor: {\n\t\t\t\tgetter: '_getNativeEditor',\n\t\t\t\treadOnly: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the class, which should be added by Placeholder plugin\n\t\t\t * {{#crossLink \"CKEDITOR.plugins.ae_placeholder}}{{/crossLink}}\n\t\t\t * when editor is not focused.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property placeholderClass\n\t\t\t * @default 'ae-placeholder'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tplaceholderClass: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'ae-placeholder',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Specifies the plugins, which come by default with CKEditor, but which are not needed by AlloyEditor.\n\t\t\t * These plugins add the default UI for CKeditor, which is no more needed. Please note that AlloyEdtor\n\t\t\t * comes with its own highly optimized copy of CKEditor (just customized via their official download page).\n\t\t\t * This version does not come with the unneeded plugins, so the value of this property won't be needed.\n\t\t\t * However, if you decide to go with the OOTB version of CKEditor, you will have to remove some of the\n\t\t\t * plugins if you decide to use AlloyEditor. Keep in mind that removing these plugins doesn't remove them\n\t\t\t * entirely from CKEditor. It just removes them from its current instance, in which you will use different\n\t\t\t * UI - those of AlloyEditor. You will be fully able to use both OOTB CKEditor and AlloyEditor on the same\n\t\t\t * page!\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property removePlugins\n\t\t\t * @default 'contextmenu,toolbar,elementspath,resize,liststyle,link'\n\t\t\t * @writeOnce\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tremovePlugins: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'contextmenu,toolbar,elementspath,resize,liststyle,link',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Array of manual selection triggers. They can be configured to manually show a specific selection toolbar\n\t\t\t * by forcing the selection type. A selectionKeystroke item consists of a keys property with a [CKEditor keystroke\n\t\t\t * definition](http://docs.ckeditor.com/#!/api/CKEDITOR.config-cfg-keystrokes) and a selection property with\n\t\t\t * the selection name to trigger.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property selectionKeystrokes\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tselectionKeystrokes: {\n\t\t\t\tvalidator: Lang.isArray,\n\t\t\t\tvalue: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + 76 /* L*/,\n\t\t\t\t\t\tselection: 'link',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys: CKEDITOR.CTRL + CKEDITOR.SHIFT + 76 /* L*/,\n\t\t\t\t\t\tselection: 'embed',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The path to the spritemap SVG used for icons\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property spritemap\n\t\t\t * @type String\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tspritemap: {\n\t\t\t\tvalidator: Lang.isString,\n\t\t\t\tvalue: 'alloy-editor/assets/icons/icons.svg',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, which AlloyEditor should use as an editable area.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property srcNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tsrcNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The toolbars configuration for this editor instance\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property {Object} toolbars\n\t\t\t */\n\t\t\ttoolbars: {\n\t\t\t\tvalidator: '_validateToolbars',\n\t\t\t\tvalue: {\n\t\t\t\t\tadd: {\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t'imageFromFile',\n\t\t\t\t\t\t\t'embed',\n\t\t\t\t\t\t\t'camera',\n\t\t\t\t\t\t\t'hline',\n\t\t\t\t\t\t\t'table',\n\t\t\t\t\t\t],\n\t\t\t\t\t\ttabIndex: 2,\n\t\t\t\t\t},\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\tselections: Selections,\n\t\t\t\t\t\ttabIndex: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The Node ID or HTMl node, where AlloyEditor's UI should be rendered.\n\t\t\t *\n\t\t\t * @memberof Core\n\t\t\t * @instance\n\t\t\t * @property uiNode\n\t\t\t * @type String | Node\n\t\t\t * @writeOnce\n\t\t\t */\n\t\t\tuiNode: {\n\t\t\t\tsetter: '_toElement',\n\t\t\t\twriteOnce: true,\n\t\t\t},\n\t\t},\n\t}\n);\n\nCKEDITOR.event.implementOn(Core);\n\nexport default Core;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport debounce from './debounce';\n\nimport './link';\n\nimport './plugins';\n\nimport './selection-region';\n\nimport './table';\n\nimport './tools';\n\nimport './uicore';\n\nexport {debounce};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Debounce util function. If a function execution is expensive, it might be debounced. This means\n * that it will be executed after some amount of time after its last call. For example, if we attach a\n * a function on scroll event, it might be called hundreds times per second. In this case it may be\n * debounced with, let's say 100ms. The real execution of this function will happen 100ms after last\n * scroll event.\n *\n * @memberof CKEDITOR.tools\n * @method debounce\n * @param {Array} args An array of arguments which the callback will receive.\n * @param {Function} callback The callback which has to be called after given timeout.\n * @param {Number} timeout Timeout in milliseconds after which the callback will be called.\n * @param {Object} context The context in which the callback will be called. This argument is optional.\n * @static\n */\nfunction debounce(callback, timeout, context, args = []) {\n\tlet debounceHandle;\n\n\tconst callFn = function(...callArgs) {\n\t\t/* eslint-disable no-invalid-this */\n\t\tconst callContext = context || this;\n\t\t/* eslint-enable no-invalid-this */\n\n\t\tclearTimeout(debounceHandle);\n\n\t\tdebounceHandle = setTimeout(() => {\n\t\t\tcallback.apply(callContext, [...callArgs, ...args]);\n\t\t}, timeout);\n\t};\n\n\tcallFn.detach = function() {\n\t\tclearTimeout(debounceHandle);\n\t};\n\n\treturn callFn;\n}\n\nCKEDITOR.tools.debounce = CKEDITOR.tools.debounce || debounce;\n\nexport default debounce;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst REGEX_BOOKMARK_SCHEME = /^#.*/i;\nconst REGEX_EMAIL_SCHEME = /^[a-z0-9\\u0430-\\u044F._-]+@/i;\nconst REGEX_URI_SCHEME = /^(?:[a-z][a-z0-9+\\-.]*):|^\\//i;\n\n/**\n * Link class utility. Provides methods for create, delete and update links.\n *\n * @class CKEDITOR.Link\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\nfunction Link(editor, config) {\n\tthis._editor = editor;\n\tthis.appendProtocol =\n\t\tconfig && config.appendProtocol === false ? false : true;\n}\n\nLink.prototype = {\n\tconstructor: Link,\n\n\t/**\n\t * Advances the editor selection to the next available position after a\n\t * given link or the one in the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method advanceSelection\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t */\n\tadvanceSelection(link) {\n\t\tlink = link || this.getFromSelection();\n\n\t\tconst range = this._editor.getSelection().getRanges()[0];\n\n\t\tif (link) {\n\t\t\trange.moveToElementEditEnd(link);\n\n\t\t\tconst nextNode = range.getNextEditableNode();\n\n\t\t\tif (\n\t\t\t\tnextNode &&\n\t\t\t\t!this._editor.element.equals(nextNode.getCommonAncestor(link))\n\t\t\t) {\n\t\t\t\tconst whitespace = /\\s/.exec(nextNode.getText());\n\n\t\t\t\tconst offset = whitespace ? whitespace.index + 1 : 0;\n\n\t\t\t\trange.setStart(nextNode, offset);\n\t\t\t\trange.setEnd(nextNode, offset);\n\t\t\t}\n\t\t}\n\n\t\tthis._editor.getSelection().selectRanges([range]);\n\t},\n\n\t/**\n\t * Create a link with given URI as href.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method create\n\t * @param {Object} attrs A config object with link attributes. These might be arbitrary DOM attributes.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t * @param {String} URI The URI of the link.\n\t */\n\tcreate(URI, attrs, modifySelection) {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range.collapsed) {\n\t\t\tconst text = new CKEDITOR.dom.text(URI, this._editor.document);\n\t\t\trange.insertNode(text);\n\t\t\trange.selectNodeContents(text);\n\t\t}\n\n\t\tURI = this._getCompleteURI(URI);\n\n\t\tconst linkAttrs = CKEDITOR.tools.merge(\n\t\t\t{\n\t\t\t\t'data-cke-saved-href': URI,\n\t\t\t\thref: URI,\n\t\t\t},\n\t\t\tattrs\n\t\t);\n\n\t\tconst style = new CKEDITOR.style({\n\t\t\tattributes: linkAttrs,\n\t\t\telement: 'a',\n\t\t});\n\n\t\tstyle.type = CKEDITOR.STYLE_INLINE;\n\t\tstyle.applyToRange(range, this._editor);\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection();\n\t\t} else {\n\t\t\trange.select();\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves a link from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved link or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tconst selection = this._editor.getSelection();\n\n\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\tif (selectedElement && selectedElement.is('a')) {\n\t\t\treturn selectedElement;\n\t\t}\n\n\t\tif (selectedElement && CKEDITOR.env.ie) {\n\t\t\tconst children = selectedElement.getChildren();\n\n\t\t\tconst count = children.count();\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tconst node = children.getItem(i);\n\n\t\t\t\tif (node.is('a')) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst range = selection.getRanges()[0];\n\n\t\tif (range) {\n\t\t\trange.shrink(CKEDITOR.SHRINK_TEXT);\n\n\t\t\treturn this._editor\n\t\t\t\t.elementPath(range.getCommonAncestor())\n\t\t\t\t.contains('a', 1);\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Removes a link from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} link The link element which link style should be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tremove(link, modifySelection) {\n\t\tconst editor = this._editor;\n\n\t\tif (link) {\n\t\t\tif (modifySelection && modifySelection.advance) {\n\t\t\t\tthis.advanceSelection();\n\t\t\t}\n\n\t\t\tlink.remove(editor);\n\t\t} else {\n\t\t\tconst style = new CKEDITOR.style({\n\t\t\t\talwaysRemoveElement: 1,\n\t\t\t\telement: 'a',\n\t\t\t\ttype: CKEDITOR.STYLE_INLINE,\n\t\t\t});\n\n\t\t\t// 'removeStyle()' removes the style from the editor's current selection.\n\t\t\t//  We need to force the selection to be the whole link element\n\t\t\t//  to remove it properly.\n\n\t\t\tconst selection = editor.getSelection();\n\t\t\tselection.selectElement(selection.getStartElement());\n\n\t\t\teditor.removeStyle(style);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the href of an already existing link.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method update\n\t * @param {CKEDITOR.dom.element} link The link element which href should be removed.\n\t * @param {Object|String} attrs The attributes to update or remove. Attributes with null values will be removed.\n\t * @param {Object} modifySelection A config object with an advance attribute to indicate if the selection should be moved after the link creation.\n\t */\n\tupdate(attrs, link, modifySelection) {\n\t\tconst instance = this;\n\n\t\tlink = link || this.getFromSelection();\n\n\t\tif (typeof attrs === 'string') {\n\t\t\tconst uri = instance._getCompleteURI(attrs);\n\n\t\t\tlink.setAttributes({\n\t\t\t\t'data-cke-saved-href': uri,\n\t\t\t\thref: uri,\n\t\t\t});\n\t\t} else if (typeof attrs === 'object') {\n\t\t\tconst removeAttrs = [];\n\n\t\t\tconst setAttrs = {};\n\n\t\t\tObject.keys(attrs).forEach(key => {\n\t\t\t\tif (attrs[key] === null) {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tremoveAttrs.push('data-cke-saved-href');\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveAttrs.push(key);\n\t\t\t\t} else {\n\t\t\t\t\tif (key === 'href') {\n\t\t\t\t\t\tconst uri = instance._getCompleteURI(attrs[key]);\n\n\t\t\t\t\t\tsetAttrs['data-cke-saved-href'] = uri;\n\t\t\t\t\t\tsetAttrs[key] = uri;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetAttrs[key] = attrs[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlink.removeAttributes(removeAttrs);\n\t\t\tlink.setAttributes(setAttrs);\n\t\t}\n\n\t\tif (modifySelection && modifySelection.advance) {\n\t\t\tthis.advanceSelection(link);\n\t\t}\n\t},\n\n\t/**\n\t * Checks if the URI begins with a '#' symbol to determine if it's an on page bookmark.\n\t * If it doesn't, it then checks if the URI has an '@' symbol. If it does and the URI\n\t * looks like an email and doesn't have 'mailto:', 'mailto:' is added to the URI.\n\t * If it doesn't and the URI doesn't have a scheme, the default 'http' scheme with\n\t * hierarchical path '//' is added to the URI.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Link\n\t * @method _getCompleteURI\n\t * @param {String} URI The URI of the link.\n\t * @protected\n\t * @return {String} The URI updated with the protocol.\n\t */\n\t_getCompleteURI(URI) {\n\t\tif (REGEX_BOOKMARK_SCHEME.test(URI)) {\n\t\t\treturn URI;\n\t\t} else if (REGEX_EMAIL_SCHEME.test(URI)) {\n\t\t\tURI = 'mailto:' + URI;\n\t\t} else if (!REGEX_URI_SCHEME.test(URI)) {\n\t\t\tURI = this.appendProtocol ? 'http://' + URI : URI;\n\t\t}\n\n\t\treturn URI;\n\t},\n};\n\nCKEDITOR.Link = CKEDITOR.Link || Link;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n// Wraps each of the plugin lifecycle methods in a closure that will\n// set up the editor.__processingPlugin__ variable so it can be globally\n// accessed exposing the plugin being processed and the lifecycle phase\n// in which it is happening\n//\n// @param {Object} plugin The plugin to wrap lifecycle methods\nconst wrapPluginLifecycle = function(plugin) {\n\tconst methods = ['beforeInit', 'init', 'afterInit'];\n\n\tmethods.forEach(methodName => {\n\t\tif (plugin[methodName]) {\n\t\t\tplugin[methodName] = CKEDITOR.tools.override(\n\t\t\t\tplugin[methodName],\n\t\t\t\toriginalPluginMethod => {\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tphase: methodName,\n\t\t\t\t\t\tplugin,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn function(editor) {\n\t\t\t\t\t\teditor.__processingPlugin__ = payload;\n\n\t\t\t\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\t\t\t\toriginalPluginMethod.call(this, editor);\n\n\t\t\t\t\t\teditor.__processingPlugin__ = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n};\n\n// Filters the requires object to remove unwanted dependencies. At this point\n// only 'toolbar' has been identified, but more can appear. An unwanted plugin\n// dependency is one that prevents a necessary plugin from being removed\n//\n// @param {string|Array<string>} requires The requires object\n// @return {string} The filtered requires object\nconst filterUnwantedDependencies = function(requires) {\n\tif (typeof requires === 'string') {\n\t\trequires = requires.split(',');\n\t}\n\n\treturn requires.filter(require => {\n\t\treturn require !== 'toolbar';\n\t});\n};\n\n/**\n * CKEDITOR.plugins class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.plugins\n */\n\n/**\n * Overrides CKEDITOR.plugins.load method so we can extend the lifecycle methods of\n * the loaded plugins to add some metainformation about the plugin being processed\n *\n * @param {String/Array} names The name of the resource to load. It may be a\n * string with a single resource name, or an array with several names.\n * @param {Function} callback A function to be called when all resources\n * are loaded. The callback will receive an array containing all loaded names.\n * @param {Object} [scope] The scope object to be used for the callback call.\n * @memberof CKEDITOR.plugins\n * @method load\n * @static\n */\nCKEDITOR.plugins.load = CKEDITOR.tools.override(\n\tCKEDITOR.plugins.load,\n\tpluginsLoad => {\n\t\t// Wrap original load function so we can transform the plugin input parameter\n\t\t// before passing it down to the original callback\n\t\treturn function(names, callback, scope) {\n\t\t\t// eslint-disable-next-line no-invalid-this\n\t\t\tpluginsLoad.call(this, names, plugins => {\n\t\t\t\tif (callback) {\n\t\t\t\t\tObject.keys(plugins).forEach(pluginName => {\n\t\t\t\t\t\tconst plugin = plugins[pluginName];\n\n\t\t\t\t\t\tif (plugin.requires) {\n\t\t\t\t\t\t\tplugin.requires = filterUnwantedDependencies(\n\t\t\t\t\t\t\t\tplugin.requires\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twrapPluginLifecycle(plugin);\n\t\t\t\t\t});\n\n\t\t\t\t\tcallback.call(scope, plugins);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}\n);\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionregion')) {\n\tCKEDITOR.SELECTION_TOP_TO_BOTTOM = 0;\n\tCKEDITOR.SELECTION_BOTTOM_TO_TOP = 1;\n\tCKEDITOR.SELECTION_LEFT_TO_RIGHT = 2;\n\tCKEDITOR.SELECTION_RIGHT_TO_LEFT = 3;\n\n\t/**\n\t * SelectionRegion utility class which provides metadata about the selection. The metadata may be the start and end\n\t * rectangles, caret region, etc. **This class is not intended to be used standalone. Its functions will\n\t * be merged into each editor instance, so the developer may use them directly via the editor, without making\n\t * an instance of this class**.\n\t *\n\t * @class SelectionRegion\n\t * @constructor\n\t */\n\tfunction SelectionRegion() {}\n\n\tSelectionRegion.prototype = {\n\t\tconstructor: SelectionRegion,\n\n\t\t/**\n\t\t * Creates selection from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromPoint\n\t\t * @param {Number} x X point in page coordinates.\n\t\t * @param {Number} y Y point in page coordinates.\n\t\t */\n\t\tcreateSelectionFromPoint(x, y) {\n\t\t\tthis.createSelectionFromRange(x, y, x, y);\n\t\t},\n\n\t\t/**\n\t\t * Creates selection from range. A range consists from two points in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method createSelectionFromRange\n\t\t * @param {Number} startX X coordinate of the first point.\n\t\t * @param {Number} startY Y coordinate of the first point.\n\t\t * @param {Number} endX X coordinate of the second point.\n\t\t * @param {Number} endY Y coordinate of the second point.\n\t\t */\n\t\tcreateSelectionFromRange(startX, startY, endX, endY) {\n\t\t\tlet end;\n\t\t\tlet endContainer;\n\t\t\tlet endOffset;\n\t\t\tlet range;\n\t\t\tlet start;\n\t\t\tlet startContainer;\n\t\t\tlet startOffset;\n\n\t\t\tif (typeof document.caretPositionFromPoint === 'function') {\n\t\t\t\tstart = document.caretPositionFromPoint(startX, startY);\n\t\t\t\tend = document.caretPositionFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.offsetNode;\n\t\t\t\tendContainer = end.offsetNode;\n\n\t\t\t\tstartOffset = start.offset;\n\t\t\t\tendOffset = end.offset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t} else if (typeof document.caretRangeFromPoint === 'function') {\n\t\t\t\tstart = document.caretRangeFromPoint(startX, startY);\n\t\t\t\tend = document.caretRangeFromPoint(endX, endY);\n\n\t\t\t\tstartContainer = start.startContainer;\n\t\t\t\tendContainer = end.startContainer;\n\n\t\t\t\tstartOffset = start.startOffset;\n\t\t\t\tendOffset = end.startOffset;\n\n\t\t\t\trange = this.createRange();\n\t\t\t}\n\n\t\t\tif (range && document.getSelection) {\n\t\t\t\trange.setStart(\n\t\t\t\t\tnew CKEDITOR.dom.node(startContainer),\n\t\t\t\t\tstartOffset\n\t\t\t\t);\n\t\t\t\trange.setEnd(new CKEDITOR.dom.node(endContainer), endOffset);\n\n\t\t\t\tthis.getSelection().selectRanges([range]);\n\t\t\t} else if (typeof document.body.createTextRange === 'function') {\n\t\t\t\tconst selection = this.getSelection();\n\n\t\t\t\tselection.unlock();\n\n\t\t\t\trange = document.body.createTextRange();\n\t\t\t\trange.moveToPoint(startX, startY);\n\n\t\t\t\tconst endRange = range.duplicate();\n\t\t\t\tendRange.moveToPoint(endX, endY);\n\n\t\t\t\trange.setEndPoint('EndToEnd', endRange);\n\t\t\t\trange.select();\n\n\t\t\t\tthis.getSelection().lock();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current position of the caret. The points are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getCaretRegion\n\t\t * @return {Object} Returns object with the following properties:\n\t\t * - bottom\n\t\t * - left\n\t\t * - right\n\t\t * - top\n\t\t */\n\t\tgetCaretRegion() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t};\n\n\t\t\tconst bookmarks = selection.createBookmarks();\n\n\t\t\tif (!bookmarks.length) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tconst bookmarkNodeEl = bookmarks[0].startNode.$;\n\n\t\t\tbookmarkNodeEl.style.display = 'inline-block';\n\n\t\t\tregion = new CKEDITOR.dom.element(bookmarkNodeEl).getClientRect();\n\n\t\t\tbookmarkNodeEl.parentNode.removeChild(bookmarkNodeEl);\n\n\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\twindow\n\t\t\t).getScrollPosition();\n\n\t\t\tregion.bottom = scrollPos.y + region.bottom;\n\t\t\tregion.left = scrollPos.x + region.left;\n\t\t\tregion.right = scrollPos.x + region.right;\n\t\t\tregion.top = scrollPos.y + region.top;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns data for the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionData\n\t\t * @return {Object|null} Returns an object with the following data:\n\t\t * - element - The currently selected element, if any\n\t\t * - text - The selected text\n\t\t * - region - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionRegion:method\"}}{{/crossLink}}\n\t\t */\n\t\tgetSelectionData() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (!selection.getNative()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst result = {\n\t\t\t\telement: selection.getSelectedElement(),\n\t\t\t\ttext: selection.getSelectedText(),\n\t\t\t};\n\n\t\t\tresult.region = this.getSelectionRegion(selection);\n\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Returns the region of the current selection.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionRegion\n\t\t * @return {Object} Returns object which is being returned from\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getClientRectsRegion:method\"}}{{/crossLink}} with three more properties:\n\t\t * - direction - the direction of the selection. Can be one of these:\n\t\t *   1. CKEDITOR.SELECTION_TOP_TO_BOTTOM\n\t\t *   2. CKEDITOR.SELECTION_BOTTOM_TO_TOP\n\t\t * - height - The height of the selection region\n\t\t * - width - The width of the selection region\n\t\t */\n\t\tgetSelectionRegion() {\n\t\t\tconst region = this.getClientRectsRegion();\n\n\t\t\tregion.direction = this.getSelectionDirection();\n\n\t\t\tregion.height = region.bottom - region.top;\n\t\t\tregion.width = region.right - region.left;\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Returns true if the current selection is empty, false otherwise.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method isSelectionEmpty\n\t\t * @return {Boolean} Returns true if the current selection is empty, false otherwise.\n\t\t */\n\t\tisSelectionEmpty() {\n\t\t\tconst selection = this.getSelection();\n\n\t\t\tif (selection.getType() === CKEDITOR.SELECTION_NONE) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst ranges = selection.getRanges();\n\t\t\treturn ranges && ranges.length === 1 && ranges[0].collapsed;\n\t\t},\n\n\t\t/**\n\t\t * Returns object with data about the [client rectangles](https://developer.mozilla.org/en-US/docs/Web/API/Element.getClientRects) of the selection,\n\t\t * normalized across browses. All offsets below are in page coordinates.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getClientRectsRegion\n\t\t * @return {Object} Returns object with the following data:\n\t\t * - bottom - bottom offset of all client rectangles\n\t\t * - left - left offset of all client rectangles\n\t\t * - right - right offset of all client rectangles\n\t\t * - top - top offset of all client rectangles\n\t\t * - startRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t * - endRect - An Object, which contains the following information:\n\t\t *     + bottom - bottom offset\n\t\t *     + height - the height of the rectangle\n\t\t *     + left - left offset of the selection\n\t\t *     + right - right offset of the selection\n\t\t *     + top - top offset of the selection\n\t\t *     + width - the width of the rectangle\n\t\t *\n\t\t * If there is no native selection, the objects will be filled with 0.\n\t\t */\n\t\tgetClientRectsRegion() {\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tconst defaultRect = {\n\t\t\t\tbottom: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t};\n\n\t\t\tlet region = {\n\t\t\t\tbottom: 0,\n\t\t\t\tendRect: defaultRect,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tstartRect: defaultRect,\n\t\t\t};\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn region;\n\t\t\t}\n\n\t\t\tlet bottom = 0;\n\t\t\tlet clientRects;\n\t\t\tlet left = Infinity;\n\t\t\tlet right = -Infinity;\n\t\t\tlet top = Infinity;\n\n\t\t\tif (nativeSelection.createRange) {\n\t\t\t\tclientRects = nativeSelection.createRange().getClientRects();\n\t\t\t} else {\n\t\t\t\tclientRects =\n\t\t\t\t\tnativeSelection.rangeCount > 0\n\t\t\t\t\t\t? nativeSelection.getRangeAt(0).getClientRects()\n\t\t\t\t\t\t: [];\n\t\t\t}\n\n\t\t\tif (clientRects.length === 0) {\n\t\t\t\tregion = this.getCaretRegion();\n\t\t\t} else {\n\t\t\t\tfor (let i = 0, length = clientRects.length; i < length; i++) {\n\t\t\t\t\tconst item = clientRects[i];\n\n\t\t\t\t\tif (item.left < left) {\n\t\t\t\t\t\tleft = item.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.right > right) {\n\t\t\t\t\t\tright = item.right;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.top < top) {\n\t\t\t\t\t\ttop = item.top;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.bottom > bottom) {\n\t\t\t\t\t\tbottom = item.bottom;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst scrollPos = new CKEDITOR.dom.window(\n\t\t\t\t\twindow\n\t\t\t\t).getScrollPosition();\n\n\t\t\t\tregion.bottom = scrollPos.y + bottom;\n\t\t\t\tregion.left = scrollPos.x + left;\n\t\t\t\tregion.right = scrollPos.x + right;\n\t\t\t\tregion.top = scrollPos.y + top;\n\n\t\t\t\tif (clientRects.length) {\n\t\t\t\t\tconst endRect = clientRects[clientRects.length - 1];\n\t\t\t\t\tconst startRect = clientRects[0];\n\n\t\t\t\t\tregion.endRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + endRect.bottom,\n\t\t\t\t\t\theight: endRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + endRect.left,\n\t\t\t\t\t\tright: scrollPos.x + endRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + endRect.top,\n\t\t\t\t\t\twidth: endRect.width,\n\t\t\t\t\t};\n\n\t\t\t\t\tregion.startRect = {\n\t\t\t\t\t\tbottom: scrollPos.y + startRect.bottom,\n\t\t\t\t\t\theight: startRect.height,\n\t\t\t\t\t\tleft: scrollPos.x + startRect.left,\n\t\t\t\t\t\tright: scrollPos.x + startRect.right,\n\t\t\t\t\t\ttop: scrollPos.y + startRect.top,\n\t\t\t\t\t\twidth: startRect.width,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn region;\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the direction of the selection. The direction is from top to bottom or from bottom to top.\n\t\t * For IE < 9 it is not possible, so the direction for these browsers will be always CKEDITOR.SELECTION_TOP_TO_BOTTOM.\n\t\t *\n\t\t * @instance\n\t\t * @memberof SelectionRegion\n\t\t * @method getSelectionDirection\n\t\t * @return {Number} Returns a number which represents selection direction. It might be one of these:\n\t\t * - CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t * - CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t */\n\t\tgetSelectionDirection() {\n\t\t\tlet direction = CKEDITOR.SELECTION_TOP_TO_BOTTOM;\n\t\t\tconst selection = this.getSelection();\n\t\t\tconst nativeSelection = selection.getNative();\n\n\t\t\tif (!nativeSelection) {\n\t\t\t\treturn direction;\n\t\t\t}\n\n\t\t\tlet anchorNode;\n\n\t\t\tif (\n\t\t\t\t(anchorNode = nativeSelection.anchorNode) &&\n\t\t\t\tanchorNode.compareDocumentPosition\n\t\t\t) {\n\t\t\t\tconst position = anchorNode.compareDocumentPosition(\n\t\t\t\t\tnativeSelection.focusNode\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t(!position &&\n\t\t\t\t\t\tnativeSelection.anchorOffset >\n\t\t\t\t\t\t\tnativeSelection.focusOffset) ||\n\t\t\t\t\tposition === Node.DOCUMENT_POSITION_PRECEDING\n\t\t\t\t) {\n\t\t\t\t\tdirection = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn direction;\n\t\t},\n\t};\n\n\tCKEDITOR.plugins.add('ae_selectionregion', {\n\t\tinit(editor) {\n\t\t\tlet attr;\n\t\t\tconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\t\t\tfor (attr in SelectionRegion.prototype) {\n\t\t\t\tif (\n\t\t\t\t\thasOwnProperty.call(SelectionRegion.prototype, attr) &&\n\t\t\t\t\ttypeof editor[attr] === 'undefined'\n\t\t\t\t) {\n\t\t\t\t\teditor[attr] = SelectionRegion.prototype[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst IE_NON_DIRECTLY_EDITABLE_ELEMENT = {\n\ttable: 1,\n\tcol: 1,\n\tcolgroup: 1,\n\ttbody: 1,\n\ttd: 1,\n\ttfoot: 1,\n\tth: 1,\n\tthead: 1,\n\ttr: 1,\n};\n\n/**\n * Table class utility. Provides methods for create, delete and update tables.\n *\n * @class CKEDITOR.Table\n * @constructor\n * @param {Object} editor The CKEditor instance.\n */\n\nfunction Table(editor) {\n\tthis._editor = editor;\n}\n\nTable.HEADING_BOTH = 'Both';\nTable.HEADING_COL = 'Column';\nTable.HEADING_NONE = 'None';\nTable.HEADING_ROW = 'Row';\n\nTable.prototype = {\n\tconstructor: Table,\n\n\t/**\n\t * Creates a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method create\n\t * @param {Object} config Table configuration object\n\t * @return {Object} The created table\n\t */\n\tcreate(config) {\n\t\tconst editor = this._editor;\n\t\tconst table = this._createElement('table');\n\n\t\tconfig = config || {};\n\n\t\t// Generate the rows and cols.\n\t\tconst tbody = table.append(this._createElement('tbody'));\n\t\tconst rows = config.rows || 1;\n\t\tconst cols = config.cols || 1;\n\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tconst row = tbody.append(this._createElement('tr'));\n\t\t\tfor (let j = 0; j < cols; j++) {\n\t\t\t\tconst cell = row.append(this._createElement('td'));\n\n\t\t\t\tcell.appendBogus();\n\t\t\t}\n\t\t}\n\n\t\tthis.setAttributes(table, config.attrs);\n\t\tthis.setHeading(table, config.heading);\n\n\t\t// Insert the table element if we're creating one.\n\t\teditor.insertElement(table);\n\n\t\tconst firstCell = new CKEDITOR.dom.element(table.$.rows[0].cells[0]);\n\t\tconst range = editor.createRange();\n\t\trange.moveToPosition(firstCell, CKEDITOR.POSITION_AFTER_START);\n\t\trange.select();\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Retrieves a table from the current selection.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getFromSelection\n\t * @return {CKEDITOR.dom.element} The retrieved table or null if not found.\n\t */\n\tgetFromSelection() {\n\t\tlet table;\n\t\tconst selection = this._editor.getSelection();\n\t\tconst selected = selection.getSelectedElement();\n\n\t\tif (selected && selected.is('table')) {\n\t\t\ttable = selected;\n\t\t} else {\n\t\t\tconst ranges = selection.getRanges();\n\n\t\t\tif (ranges.length > 0) {\n\t\t\t\t// Webkit could report the following range on cell selection (#4948):\n\t\t\t\t// <table><tr><td>[&nbsp;</td></tr></table>]\n\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (CKEDITOR.env.webkit) {\n\t\t\t\t\tranges[0].shrink(CKEDITOR.NODE_ELEMENT);\n\t\t\t\t}\n\n\t\t\t\ttable = this._editor\n\t\t\t\t\t.elementPath(ranges[0].getCommonAncestor(true))\n\t\t\t\t\t.contains('table', 1);\n\t\t\t}\n\t\t}\n\n\t\treturn table;\n\t},\n\n\t/**\n\t * Checks if a given table can be considered as editable. This method\n\t * workarounds a limitation of IE where for some elements (like table),\n\t * `isContentEditable` returns always false. This is because IE does not support\n\t * `contenteditable` on such elements. However, despite such elements\n\t * cannot be set as content editable directly, a content editable SPAN,\n\t * or DIV element can be placed inside the individual table cells.\n\t * See https://msdn.microsoft.com/en-us/library/ms537837%28v=VS.85%29.aspx\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method isEditable\n\t * @param {CKEDITOR.dom.element} el The table element to test if editable\n\t * @return {Boolean}\n\t */\n\tisEditable(el) {\n\t\tif (!CKEDITOR.env.ie || !el.is(IE_NON_DIRECTLY_EDITABLE_ELEMENT)) {\n\t\t\treturn !el.isReadOnly();\n\t\t}\n\n\t\tif (el.hasAttribute('contenteditable')) {\n\t\t\treturn el.getAttribute('contenteditable') !== 'false';\n\t\t}\n\n\t\treturn this.isEditable(el.getParent());\n\t},\n\n\t/**\n\t * Returns which heading style is set for the given table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method getHeading\n\t * @param {CKEDITOR.dom.element} table The table to gather the heading from. If null, it will be retrieved from the current selection.\n\t * @return {String} The heading of the table. Expected values are `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tgetHeading(table) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tif (!table) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rowHeadingSettings = table.$.tHead !== null;\n\n\t\tlet colHeadingSettings = true;\n\n\t\t// Check if all of the first cells in every row are TH\n\t\tfor (let row = 0; row < table.$.rows.length; row++) {\n\t\t\t// If just one cell isn't a TH then it isn't a header column\n\t\t\tconst cell = table.$.rows[row].cells[0];\n\n\t\t\tif (cell && cell.nodeName.toLowerCase() !== 'th') {\n\t\t\t\tcolHeadingSettings = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet headingSettings = Table.HEADING_NONE;\n\n\t\tif (rowHeadingSettings) {\n\t\t\theadingSettings = Table.HEADING_ROW;\n\t\t}\n\n\t\tif (colHeadingSettings) {\n\t\t\theadingSettings =\n\t\t\t\theadingSettings === Table.HEADING_ROW\n\t\t\t\t\t? Table.HEADING_BOTH\n\t\t\t\t\t: Table.HEADING_COL;\n\t\t}\n\n\t\treturn headingSettings;\n\t},\n\n\t/**\n\t * Removes a table from the editor.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method remove\n\t * @param {CKEDITOR.dom.element} table The table element which table style should be removed.\n\t */\n\tremove(table) {\n\t\tconst editor = this._editor;\n\n\t\tif (table) {\n\t\t\ttable.remove();\n\t\t} else {\n\t\t\ttable = editor.elementPath().contains('table', 1);\n\n\t\t\tif (table) {\n\t\t\t\t// If the table's parent has only one child remove it as well (unless it's a table cell, or the editable element) (#5416, #6289, #12110)\n\t\t\t\tconst parent = table.getParent();\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tif (\n\t\t\t\t\tparent.getChildCount() === 1 &&\n\t\t\t\t\t!parent.is('td', 'th') &&\n\t\t\t\t\t!parent.equals(editable)\n\t\t\t\t) {\n\t\t\t\t\ttable = parent;\n\t\t\t\t}\n\n\t\t\t\tconst range = editor.createRange();\n\t\t\t\trange.moveToPosition(table, CKEDITOR.POSITION_BEFORE_START);\n\t\t\t\ttable.remove();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Assigns provided attributes to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setAttributes\n\t * @param {Object} table The table to which the attributes should be assigned\n\t * @param {Object} attrs The attributes which have to be assigned to the table\n\t */\n\tsetAttributes(table, attrs) {\n\t\tif (attrs) {\n\t\t\tObject.keys(attrs).forEach(attr => {\n\t\t\t\ttable.setAttribute(attr, attrs[attr]);\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Sets the appropriate table heading style to a table.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @method setHeading\n\t * @param {CKEDITOR.dom.element} table The table element to which the heading should be set. If null, it will be retrieved from the current selection.\n\t * @param {String} heading The table heading to be set. Accepted values are: `CKEDITOR.Table.NONE`, `CKEDITOR.Table.ROW`, `CKEDITOR.Table.COL` and `CKEDITOR.Table.BOTH`.\n\t */\n\tsetHeading(table, heading) {\n\t\ttable = table || this.getFromSelection();\n\n\t\tlet i;\n\t\tlet newCell;\n\t\tlet tableHead;\n\t\tconst tableBody = table.getElementsByTag('tbody').getItem(0);\n\n\t\tlet tableHeading = this.getHeading(table);\n\t\tconst hadColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\tconst needColHeading =\n\t\t\theading === Table.HEADING_COL || heading === Table.HEADING_BOTH;\n\t\tconst needRowHeading =\n\t\t\theading === Table.HEADING_ROW || heading === Table.HEADING_BOTH;\n\n\t\t// If we need row heading and don't have a <thead> element yet, move the\n\t\t// first row of the table to the head and convert the nodes to <th> ones.\n\t\tif (!table.$.tHead && needRowHeading) {\n\t\t\tconst tableFirstRow = tableBody.getElementsByTag('tr').getItem(0);\n\t\t\tconst tableFirstRowChildCount = tableFirstRow.getChildCount();\n\n\t\t\t// Change TD to TH:\n\t\t\tfor (i = 0; i < tableFirstRowChildCount; i++) {\n\t\t\t\tconst cell = tableFirstRow.getChild(i);\n\n\t\t\t\t// Skip bookmark nodes. (#6155)\n\t\t\t\tif (\n\t\t\t\t\tcell.type === CKEDITOR.NODE_ELEMENT &&\n\t\t\t\t\t!cell.data('cke-bookmark')\n\t\t\t\t) {\n\t\t\t\t\tcell.renameNode('th');\n\t\t\t\t\tcell.setAttribute('scope', 'col');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttableHead = this._createElement(table.$.createTHead());\n\t\t\ttableHead.append(tableFirstRow.remove());\n\t\t}\n\n\t\t// If we don't need row heading and we have a <thead> element, move the\n\t\t// row out of there and into the <tbody> element.\n\t\tif (table.$.tHead !== null && !needRowHeading) {\n\t\t\t// Move the row out of the THead and put it in the TBody:\n\t\t\ttableHead = this._createElement(table.$.tHead);\n\n\t\t\tconst previousFirstRow = tableBody.getFirst();\n\n\t\t\twhile (tableHead.getChildCount() > 0) {\n\t\t\t\tconst newFirstRow = tableHead.getFirst();\n\t\t\t\tconst newFirstRowChildCount = newFirstRow.getChildCount();\n\n\t\t\t\tfor (i = 0; i < newFirstRowChildCount; i++) {\n\t\t\t\t\tnewCell = newFirstRow.getChild(i);\n\n\t\t\t\t\tif (newCell.type === CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewFirstRow.insertBefore(previousFirstRow);\n\t\t\t}\n\n\t\t\ttableHead.remove();\n\t\t}\n\n\t\ttableHeading = this.getHeading(table);\n\t\tconst hasColHeading =\n\t\t\ttableHeading === Table.HEADING_COL ||\n\t\t\ttableHeading === Table.HEADING_BOTH;\n\n\t\t// If we need column heading and the table doesn't have it, convert every first cell in\n\t\t// every row into a `<th scope=\"row\">` element.\n\t\tif (!hasColHeading && needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tif (table.$.rows[i].cells[0].nodeName.toLowerCase() !== 'th') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(\n\t\t\t\t\t\ttable.$.rows[i].cells[0]\n\t\t\t\t\t);\n\t\t\t\t\tnewCell.renameNode('th');\n\t\t\t\t\tnewCell.setAttribute('scope', 'row');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we don't need column heading but the table has it, convert every first cell in every\n\t\t// row back into a `<td>` element.\n\t\tif (hadColHeading && !needColHeading) {\n\t\t\tfor (i = 0; i < table.$.rows.length; i++) {\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tif (row.getParent().getName() === 'tbody') {\n\t\t\t\t\tnewCell = new CKEDITOR.dom.element(row.$.cells[0]);\n\t\t\t\t\tnewCell.renameNode('td');\n\t\t\t\t\tnewCell.removeAttribute('scope');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Creates a new CKEDITOR.dom.element using the passed tag name.\n\t *\n\t * @instance\n\t * @memberof CKEDITOR.Table\n\t * @protected\n\t * @method _createElement\n\t * @param {String} name The tag name from which an element should be created\n\t * @return {CKEDITOR.dom.element} Instance of CKEDITOR DOM element class\n\t */\n\t_createElement(name) {\n\t\treturn new CKEDITOR.dom.element(name, this._editor.document);\n\t},\n};\n\nCKEDITOR.on('instanceReady', event => {\n\tconst headingCommands = [\n\t\tTable.HEADING_NONE,\n\t\tTable.HEADING_ROW,\n\t\tTable.HEADING_COL,\n\t\tTable.HEADING_BOTH,\n\t];\n\n\tconst tableUtils = new Table(event.editor);\n\n\theadingCommands.forEach(heading => {\n\t\tevent.editor.addCommand('tableHeading' + heading, {\n\t\t\texec(_editor) {\n\t\t\t\ttableUtils.setHeading(null, heading);\n\t\t\t},\n\t\t});\n\t});\n});\n\nCKEDITOR.Table = CKEDITOR.Table || Table;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEDITOR.tools class utility which adds additional methods to those of CKEditor.\n *\n * @class CKEDITOR.tools\n */\n\n/**\n * Sends a request using the JSONP technique.\n *\n * @memberof CKEDITOR.tools\n * @method jsonp\n * @param {CKEDITOR.template} urlTemplate The template of the URL to be requested. All properties passed in `urlParams` can be used, plus a `{callback}`, which represent a JSONP callback, must be defined.\n * @param {Function} callback A function to be called in case of success.\n * @param {Function} errorCallback A function to be called in case of failure.\n * @param {Object} urlParams Parameters to be passed to the `urlTemplate`.\n * @return {Object} An object with the following properties:\n *  - id: the transaction ID\n *  - a `cancel()` method\n * @static\n */\nCKEDITOR.tools.jsonp = function(\n\turlTemplate,\n\turlParams,\n\tcallback,\n\terrorCallback\n) {\n\tconst callbackKey = CKEDITOR.tools.getNextNumber();\n\n\turlParams = urlParams || {};\n\turlParams.callback = 'CKEDITOR._.jsonpCallbacks[' + callbackKey + ']';\n\n\tif (!CKEDITOR._.jsonpCallbacks) {\n\t\tCKEDITOR._.jsonpCallbacks = {};\n\t}\n\n\tCKEDITOR._.jsonpCallbacks[callbackKey] = function(response) {\n\t\tsetTimeout(() => {\n\t\t\tcleanUp();\n\n\t\t\tcallback(response);\n\t\t});\n\t};\n\n\tlet scriptElement = new CKEDITOR.dom.element('script');\n\tscriptElement.setAttribute('src', urlTemplate.output(urlParams));\n\tscriptElement.on('error', () => {\n\t\tcleanUp();\n\n\t\tif (errorCallback) {\n\t\t\terrorCallback();\n\t\t}\n\t});\n\n\tfunction cleanUp() {\n\t\tif (scriptElement) {\n\t\t\tscriptElement.remove();\n\t\t\tdelete CKEDITOR._.jsonpCallbacks[callbackKey];\n\t\t\tscriptElement = null;\n\t\t}\n\t}\n\n\tCKEDITOR.document.getBody().append(scriptElement);\n\n\treturn {\n\t\tcancel: cleanUp,\n\t\tid: callbackKey,\n\t};\n};\n\n/**\n * Returns a new object containing all of the properties of all the supplied\n * objects. The properties from later objects will overwrite those in earlier\n * objects.\n *\n * Passing in a single object will create a shallow copy of it.\n *\n * @memberof CKEDITOR.tools\n * @method merge\n * @param {Object} objects* One or more objects to merge.\n * @return {Object} A new merged object.\n * @static\n */\nCKEDITOR.tools.merge =\n\tCKEDITOR.tools.merge ||\n\tfunction(...args) {\n\t\tconst result = {};\n\n\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\tconst obj = args[i];\n\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tresult[key] = obj[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n/**\n * Simulates event on a DOM element.\n *\n * @memberof CKEDITOR.tools\n * @method simulate\n * @param {DOMElement} element The element on which the event shoud be simualted.\n * @param {String} event The name of the event which have to be simulated.\n * @static\n */\nCKEDITOR.tools.simulate = function(element, event) {\n\tconst eventInstance = document.createEvent('Events');\n\teventInstance.initEvent(event, true, false);\n\telement.dispatchEvent(eventInstance);\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_uicore')) {\n\t/**\n\t * UICore class which will handle user interactions with the editor. These interactions\n\t * might be triggered via mouse, keyboard or touch devices. The class fill fire an event via\n\t * CKEditor's event system - \"editorInteraction\". The UI may listen to this event and\n\t * execute some actions - for example to show/hide toolbars.\n\t *\n\t * By default if user presses the Esc key, 'editorInteraction' event won't be fired. However, this behaviour can be changed\n\t * by setting {{#crossLink \"CKEDITOR.plugins.ae_uicore/allowEsc:attribute\"}}{{/crossLink}} config property in editor's configuration to true.\n\t *\n\t * @class ae_uicore\n\t */\n\n\t/**\n\t * Fired when user interacts somehow with the browser. This may be clicking with the mouse, pressing keyboard button,\n\t * or touching screen. This even will be not fired after each interaction. It will be debounced. By default the timeout\n\t * is 50ms. This value can be overwritten via {{#crossLink \"CKEDITOR.plugins.ae_uicore/timeout:attribute\"}}{{/crossLink}}\n\t * property of editor's configuration, like: editor.config.uicore.timeout = 100\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#editorInteraction\n\t * @param {Object} data An object which contains the following properties:\n\t * - nativeEvent - The event as received from CKEditor.\n\t * - selectionData - The data, returned from {{#crossLink \"CKEDITOR.plugins.ae_selectionregion/getSelectionData:method\"}}{{/crossLink}}\n\t */\n\n\t/**\n\t * Fired by UI elements like Toolbars or Buttons when their state changes. The listener updates the live region with the provided data.\n\t *\n\t * @memberof ae_uicore\n\t * @event ae_uicore#ariaUpdate\n\t * @param {Object} data An object which contains the following properties:\n\t * - message - The provided message from the UI element.\n\t */\n\n\t/**\n\t * If set to true, the editor will still fire {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event,\n\t * if user presses Esc key.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute allowEsc\n\t * @default false\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Specifies the default timeout after which the {{#crossLink \"CKEDITOR.plugins.ae_uicore/editorInteraction:event\"}}{{/crossLink}} event\n\t * will be fired.\n\t *\n\t * @memberof ae_uicore\n\t * @attribute timeout\n\t * @default 50 (ms)\n\t * @type Number\n\t */\n\n\tCKEDITOR.plugins.add('ae_uicore', {\n\t\t/**\n\t\t * Initializer lifecycle implementation for the UICore plugin.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method init\n\t\t * @param {Object} editor The current CKEditor instance.\n\t\t * @protected\n\t\t */\n\t\tinit(editor) {\n\t\t\tlet ariaState = [];\n\n\t\t\tconst ariaElement = this._createAriaElement(editor.id);\n\n\t\t\tconst uiTasksTimeout = editor.config.uicore\n\t\t\t\t? editor.config.uicore.timeout\n\t\t\t\t: 50;\n\n\t\t\tconst handleUI = CKEDITOR.tools.debounce(event => {\n\t\t\t\tariaState = [];\n\n\t\t\t\tif (\n\t\t\t\t\tevent.name !== 'keyup' ||\n\t\t\t\t\tevent.data.$.keyCode !== 27 ||\n\t\t\t\t\teditor.config.allowEsc\n\t\t\t\t) {\n\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\tif (selectionData) {\n\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\tnativeEvent: event.data.$,\n\t\t\t\t\t\t\tselectionData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleAria = CKEDITOR.tools.debounce(_event => {\n\t\t\t\tariaElement.innerHTML = ariaState.join('. ');\n\t\t\t}, uiTasksTimeout);\n\n\t\t\tconst handleMouseLeave = CKEDITOR.tools.debounce(event => {\n\t\t\t\tconst aeUINodes = document.querySelectorAll('.ae-ui');\n\n\t\t\t\tlet found;\n\n\t\t\t\tfor (let i = 0; i < aeUINodes.length; i++) {\n\t\t\t\t\tif (aeUINodes[i].contains(event.data.$.relatedTarget)) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!found) {\n\t\t\t\t\thandleUI(event);\n\t\t\t\t}\n\t\t\t}, uiTasksTimeout);\n\n\t\t\teditor.on('ariaUpdate', event => {\n\t\t\t\t// handleAria is debounced function, so if it is being called multiple times, it will\n\t\t\t\t// be canceled until some time passes.\n\t\t\t\t// For that reason here we explicitly append the current message to the list of messages\n\t\t\t\t// and call handleAria. Since it is debounced, when some timeout passes,\n\t\t\t\t// all the messages will be applied to the live region and not only the last one.\n\n\t\t\t\tariaState.push(event.data.message);\n\n\t\t\t\thandleAria();\n\t\t\t});\n\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\tconst focusHandler = editable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'focus',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tfocusHandler.removeListener();\n\n\t\t\t\t\t\teditable.attachListener(editable, 'keyup', handleUI);\n\t\t\t\t\t\teditable.attachListener(editable, 'mouseup', handleUI);\n\t\t\t\t\t\teditable.attachListener(\n\t\t\t\t\t\t\teditable,\n\t\t\t\t\t\t\t'mouseleave',\n\t\t\t\t\t\t\thandleMouseLeave\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\thandleUI(event);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('destroy', _event => {\n\t\t\t\tariaElement.parentNode.removeChild(ariaElement);\n\n\t\t\t\thandleUI.detach();\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Creates and applies an HTML element to the body of the document which will contain ARIA messages.\n\t\t *\n\t\t * @memberof ae_uicore\n\t\t * @method _createAriaElement\n\t\t * @param {String} id The provided id of the element. It will be used as prefix for the final element Id.\n\t\t * @protected\n\t\t * @return {HTMLElement} The created and applied to DOM element.\n\t\t */\n\t\t_createAriaElement(id) {\n\t\t\tconst statusElement = document.createElement('div');\n\n\t\t\tstatusElement.className = 'ae-sr-only';\n\n\t\t\tstatusElement.setAttribute('aria-live', 'polite');\n\t\t\tstatusElement.setAttribute('role', 'status');\n\t\t\tstatusElement.setAttribute('id', id + 'LiveRegion');\n\n\t\t\tdocument.body.appendChild(statusElement);\n\n\t\t\treturn statusElement;\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst isIE = CKEDITOR.env.ie;\n\nif (!CKEDITOR.plugins.get('ae_addimages')) {\n\t/**\n\t * CKEditor plugin which allows Drag&Drop of images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of dropped images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_addimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event CKEDITOR.plugins.ae_addimages#imageAdd\n\t * @instance\n\t * @memberof CKEDITOR.plugins.ae_addimages\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_addimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'dragenter', 'dragover', 'drop' and `paste` events on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragenter',\n\t\t\t\t\tthis._onDragEnter,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'dragover',\n\t\t\t\t\tthis._onDragOver,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'drop',\n\t\t\t\t\tthis._onDragDrop,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Accepts an array of dropped files to the editor. Then, it filters the images and sends them for further\n\t\t * processing to {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}}\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#beforeImageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _handleFiles\n\t\t * @param {Array} files Array of dropped files. Only the images from this list will be processed.\n\t\t * @param {Object} editor The current editor instance\n\t\t * @protected\n\t\t */\n\t\t_handleFiles(files, editor) {\n\t\t\tlet file;\n\t\t\tlet i;\n\n\t\t\tconst imageFiles = [];\n\n\t\t\tfor (i = 0; i < files.length; i++) {\n\t\t\t\tfile = files[i];\n\n\t\t\t\tif (file.type.indexOf('image') === 0) {\n\t\t\t\t\timageFiles.push(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\timageFiles,\n\t\t\t});\n\n\t\t\tif (result) {\n\t\t\t\tfor (i = 0; i < imageFiles.length; i++) {\n\t\t\t\t\tfile = imageFiles[i];\n\n\t\t\t\t\tthis._processFile(file, editor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Handles drag drop event. The function will create a selection from the current\n\t\t * point and will send a list of files to be processed to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_handleFiles:method\"}}{{/crossLink}} method.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragDrop\n\t\t * @param {CKEDITOR.dom.event} event dragdrop event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragDrop(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst transferFiles = nativeEvent.dataTransfer.files;\n\n\t\t\tif (transferFiles.length > 0) {\n\t\t\t\tnew CKEDITOR.dom.event(nativeEvent).preventDefault();\n\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tevent.listenerData.editor.createSelectionFromPoint(\n\t\t\t\t\tnativeEvent.clientX,\n\t\t\t\t\tnativeEvent.clientY\n\t\t\t\t);\n\n\t\t\t\tthis._handleFiles(transferFiles, editor);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag enter event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragEnter\n\t\t * @param {DOM event} event dragenter event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragEnter(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handles drag over event. In case of IE, this function will prevent the event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onDragOver\n\t\t * @param {DOM event} event dragover event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onDragOver(event) {\n\t\t\tif (isIE) {\n\t\t\t\tthis._preventEvent(event);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks if the pasted data is image and passes it to\n\t\t * {{#crossLink \"CKEDITOR.plugins.ae_addimages/_processFile:method\"}}{{/crossLink}} for processing.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _onPaste\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t * @protected\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (\n\t\t\t\tevent.data &&\n\t\t\t\tevent.data.$ &&\n\t\t\t\tevent.data.$.clipboardData &&\n\t\t\t\tevent.data.$.clipboardData.items &&\n\t\t\t\tevent.data.$.clipboardData.items.length > 0\n\t\t\t) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\tthis._processFile(imageFile, event.listenerData.editor);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Prevents a native event.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_preventEvent(event) {\n\t\t\tevent = new CKEDITOR.dom.event(event.data.$);\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t},\n\n\t\t/**\n\t\t * Processes an image file. The function creates an img element and sets as source\n\t\t * a Data URI, then fires an 'imageAdd' event via CKEditor's event system.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_addimages#imageAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_addimages\n\t\t * @method _preventEvent\n\t\t * @param {DOM event} event The event to be prevented.\n\t\t * @protected\n\t\t */\n\t\t_processFile(file, editor) {\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener('loadend', () => {\n\t\t\t\tconst bin = reader.result;\n\n\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t'<img src=\"' + bin + '\">'\n\t\t\t\t);\n\n\t\t\t\teditor.insertElement(el);\n\n\t\t\t\tconst imageData = {\n\t\t\t\t\tel,\n\t\t\t\t\tfile,\n\t\t\t\t};\n\n\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t});\n\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolink')) {\n\t// Disables the auto URL detection feature in IE, their lacks functionality:\n\t// They convert the links only on space. We do on space, comma, semicolon and Enter.\n\tif (/MSIE ([^;]*)|Trident.*; rv:([0-9.]+)/.test(navigator.userAgent)) {\n\t\tdocument.execCommand('AutoUrlDetect', false, false);\n\t}\n\n\tconst KEY_BACK = 8;\n\n\tconst KEY_COMMA = 188;\n\n\tconst KEY_ENTER = 13;\n\n\tconst KEY_SEMICOLON = 186;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DELIMITERS = [KEY_COMMA, KEY_ENTER, KEY_SEMICOLON, KEY_SPACE];\n\n\tconst REGEX_LAST_WORD = /[^\\s]+/gim;\n\n\t// Seen at https://stackoverflow.com/a/5717133/2103996\n\tconst REGEX_URL =\n\t\t'^(https?:\\\\/\\\\/)?' + // protocol\n\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n\t\t'(\\\\#[-a-z\\\\d_]*)?$';\n\n\tconst REGEX_EMAIL = /[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}/i;\n\n\t/**\n\t * CKEditor plugin which automatically generates links when user types text which looks like URL.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolink\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolink', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers the `keyup` event on the editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keyup',\n\t\t\t\t\tthis._onKeyUp,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\n\t\t\teditor.on('paste', event => {\n\t\t\t\tif (event.data.method === 'paste') {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.data.dataValue.indexOf('<') > -1 ||\n\t\t\t\t\t\tevent.data.dataValue.indexOf('&lt;') > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.data.dataValue.indexOf('<u><font color=\"') >\n\t\t\t\t\t\t\t-1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\t\t\t/<u><font color=\"#(.*?)\">|<\\/font><\\/u>/g,\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\tevent.data.dataValue = event.data.dataValue.replace(\n\t\t\t\t\t\tRegExp(REGEX_URL, 'gim'),\n\t\t\t\t\t\turl => {\n\t\t\t\t\t\t\tif (instance._isValidURL(url)) {\n\t\t\t\t\t\t\t\tif (instance._isValidEmail(url)) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"mailto:' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t\t\t\turl +\n\t\t\t\t\t\t\t\t\t\t'</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t'<a href=\"' + url + '\">' + url + '</a>'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Retrieves the last word introduced by the user. Reads from the current\n\t\t * caret position backwards until it finds the first white space.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _getLastWord\n\t\t * @protected\n\t\t * @return {String} The last word introduced by user\n\t\t */\n\t\t_getLastWord(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tif (!range) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst offset = range.startOffset;\n\n\t\t\tlet previousText = '';\n\n\t\t\t// The user pressed Enter, so we have to look on the previous node\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tlet previousNode = range.startContainer.getPrevious();\n\n\t\t\t\tlet lastChild;\n\n\t\t\t\tif (previousNode) {\n\t\t\t\t\t// If previous node is a SPACE, (it does not have 'getLast' method),\n\t\t\t\t\t// ignore it and find the previous text node\n\t\t\t\t\twhile (!previousNode.getLast) {\n\t\t\t\t\t\tpreviousNode = previousNode.getPrevious();\n\t\t\t\t\t}\n\n\t\t\t\t\tlastChild = previousNode.getLast();\n\n\t\t\t\t\t// Depending on the browser, the last child node may be a <BR>\n\t\t\t\t\t// (which does not have 'getText' method),\n\t\t\t\t\t// so ignore it and find the previous text node\n\t\t\t\t\twhile (lastChild && !lastChild.getText()) {\n\t\t\t\t\t\tlastChild = lastChild.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if the lastChild is already a link\n\t\t\t\tif (!(lastChild && lastChild.$.href)) {\n\t\t\t\t\tthis._startContainer = lastChild;\n\t\t\t\t\tpreviousText = lastChild ? lastChild.getText() : '';\n\t\t\t\t\tthis._offset = previousText.length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._startContainer = range.startContainer;\n\n\t\t\t\t// Last character is the delimiter, ignore it\n\t\t\t\tpreviousText = this._startContainer\n\t\t\t\t\t.getText()\n\t\t\t\t\t.substring(0, offset - 1);\n\n\t\t\t\tthis._offset = offset - 1;\n\t\t\t}\n\n\t\t\tlet lastWord = '';\n\n\t\t\tconst match = previousText.match(REGEX_LAST_WORD);\n\n\t\t\tif (match) {\n\t\t\t\tlastWord = match.pop();\n\t\t\t}\n\n\t\t\treturn lastWord;\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid Email.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidEmail\n\t\t * @param {String} link The email we want to know if it is a valid Email\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the email is a valid Email, false otherwise\n\t\t */\n\t\t_isValidEmail(email) {\n\t\t\treturn REGEX_EMAIL.test(email);\n\t\t},\n\n\t\t/**\n\t\t * Checks if the given link is a valid URL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method isValidURL\n\t\t * @param {String} link The link we want to know if it is a valid URL\n\t\t * @protected\n\t\t * @return {Boolean} Returns true if the link is a valid URL, false otherwise\n\t\t */\n\t\t_isValidURL(link) {\n\t\t\treturn RegExp(REGEX_URL, 'i').test(link);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `keydown` event and if the keycode is `Backspace`, removes the previously\n\t\t * created link.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyDown\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._onKeyDown);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\tevent.cancel();\n\t\t\t\tevent.data.preventDefault();\n\n\t\t\t\tthis._removeLink(editor);\n\t\t\t}\n\n\t\t\tthis._ckLink = null;\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Enter` and `Space` key events in order to check if the last word\n\t\t * introduced by the user should be replaced by a link element.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _onKeyUp\n\t\t * @param {EventFacade} event EventFacade object\n\t\t * @protected\n\t\t */\n\t\t_onKeyUp(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tthis._currentKeyCode = nativeEvent.keyCode;\n\n\t\t\tif (DELIMITERS.indexOf(this._currentKeyCode) !== -1) {\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tconst lastWord = this._getLastWord(editor);\n\n\t\t\t\tif (this._isValidURL(lastWord)) {\n\t\t\t\t\tthis._replaceContentByLink(editor, lastWord);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Replaces content by a link element.\n\t\t *\n\t\t * @fires CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _replaceContentByLink\n\t\t * @param {String} content The text that has to be replaced by an link element\n\t\t * @protected\n\t\t */\n\t\t_replaceContentByLink(editor, content) {\n\t\t\tlet range = editor.createRange();\n\t\t\tconst node = CKEDITOR.dom.element.get(this._startContainer);\n\t\t\tconst offset = this._offset;\n\n\t\t\t// Select the content, so CKEDITOR.Link can properly replace it\n\t\t\trange.setStart(node, offset - content.length);\n\t\t\trange.setEnd(node, offset);\n\t\t\trange.select();\n\n\t\t\tconst ckLink = new CKEDITOR.Link(editor);\n\t\t\tckLink.create(content);\n\t\t\tthis._ckLink = ckLink;\n\n\t\t\tconst linkNode = ckLink.getFromSelection();\n\t\t\teditor.fire('autolinkAdd', linkNode);\n\n\t\t\tthis._subscribeToKeyEvent(editor);\n\n\t\t\t// Now range is on the link and it is selected. We have to\n\t\t\t// return focus to the caret position.\n\t\t\trange = editor.getSelection().getRanges()[0];\n\n\t\t\t// If user pressed `Enter`, get the next editable node at position 0,\n\t\t\t// otherwise set the cursor at the next character of the link (the white space)\n\t\t\tif (this._currentKeyCode === KEY_ENTER) {\n\t\t\t\tconst nextEditableNode = range.getNextEditableNode();\n\n\t\t\t\trange.setStart(nextEditableNode, 0);\n\t\t\t\trange.setEnd(nextEditableNode, 0);\n\t\t\t} else {\n\t\t\t\tconst enclosedNode = range.getEnclosedNode();\n\n\t\t\t\trange.setStart(enclosedNode, 0);\n\t\t\t\trange.setEnd(enclosedNode, 0);\n\t\t\t}\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Fired when a URL is detected in text and converted to a link.\n\t\t *\n\t\t * @event CKEDITOR.plugins.ae_autolink#autolinkAdd\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @param {CKEDITOR.dom.element} el Node of the created link.\n\t\t */\n\n\t\t/**\n\t\t * Removes the created link element, and replaces it by its text.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _removeLink\n\t\t * @protected\n\t\t */\n\t\t_removeLink(editor) {\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\t\t\tconst caretOffset = range.startOffset;\n\n\t\t\t// Select the link, so CKEDITOR.Link can properly remove it\n\t\t\tconst linkNode =\n\t\t\t\tthis._startContainer.getNext() || this._startContainer;\n\n\t\t\tconst newRange = editor.createRange();\n\t\t\tnewRange.setStart(linkNode, 0);\n\t\t\tnewRange.setEndAfter(linkNode);\n\t\t\tnewRange.select();\n\n\t\t\tthis._ckLink.remove();\n\n\t\t\t// Return focus to the caret position\n\t\t\trange.setEnd(range.startContainer, caretOffset);\n\t\t\trange.setStart(range.startContainer, caretOffset);\n\n\t\t\trange.select();\n\t\t},\n\n\t\t/**\n\t\t * Subscribe to a key event of the editable aria.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolink\n\t\t * @method _subscribeToKeyEvent\n\t\t * @protected\n\t\t */\n\t\t_subscribeToKeyEvent(editor) {\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Change the priority of keydown listener - 1 means the highest priority.\n\t\t\t// In Chrome on pressing `Enter` the listener is not being invoked.\n\t\t\t// See http://dev.ckeditor.com/ticket/11861 for more information.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._onKeyDown,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_autolist')) {\n\tconst KEY_BACK = 8;\n\n\tconst KEY_SPACE = 32;\n\n\tconst DEFAULT_CONFIG = [\n\t\t{\n\t\t\tregex: /^\\*$/,\n\t\t\ttype: 'bulletedlist',\n\t\t},\n\t\t{\n\t\t\tregex: /^1\\.$/,\n\t\t\ttype: 'numberedlist',\n\t\t},\n\t];\n\n\t/**\n\t * CKEditor plugin which automatically generates ordered/unordered list when user types text which looks like a list.\n\t *\n\t * @class CKEDITOR.plugins.ae_autolist\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_autolist', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKeditor plugin lifecycle.\n\t\t * The function registers the `keydown` event on the content editing area.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'keydown',\n\t\t\t\t\tthis._onKeyDown,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Checks for pressing the `Backspace` key in order to undo the list creation.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkForBackspaceAndUndo\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_checkForBackspaceAndUndo(event) {\n\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\teditable.removeListener('keydown', this._checkForBackspaceAndUndo);\n\n\t\t\tif (nativeEvent.keyCode === KEY_BACK) {\n\t\t\t\teditor.execCommand('undo');\n\t\t\t\teditor.insertHtml(event.listenerData.bullet + '&nbsp;');\n\t\t\t\tevent.data.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks current line to find match with MATCHES object to create OL or UL.\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _checkLine\n\t\t * @param {editor} Editor object\n\t\t * @protected\n\t\t * @return {Object|null} Returns an object which contains the detected list config if any\n\t\t */\n\t\t_getListConfig(editor) {\n\t\t\tconst configRegex = editor.config.autolist || DEFAULT_CONFIG;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\tconst textContainer = range.endContainer.getText();\n\n\t\t\tconst bullet = textContainer.substring(0, range.startOffset);\n\n\t\t\tconst text = textContainer.substring(\n\t\t\t\trange.startOffset,\n\t\t\t\ttextContainer.length\n\t\t\t);\n\n\t\t\tlet index = 0;\n\n\t\t\tconst regexLen = configRegex.length;\n\n\t\t\tlet autolistCfg = null;\n\n\t\t\twhile (!autolistCfg && regexLen > index) {\n\t\t\t\tconst regexItem = configRegex[index];\n\n\t\t\t\tif (regexItem.regex.test(bullet)) {\n\t\t\t\t\tautolistCfg = {\n\t\t\t\t\t\tbullet,\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\ttype: regexItem.type,\n\t\t\t\t\t};\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\treturn autolistCfg;\n\t\t},\n\n\t\t/**\n\t\t * Create list with different types: Bulleted or Numbered list\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _createList\n\t\t * @param {Object} listConfig Object that contains bullet, text and type for creating the list\n\t\t * @protected\n\t\t */\n\t\t_createList(listConfig) {\n\t\t\tconst editor = listConfig.editor;\n\n\t\t\tconst range = editor.getSelection().getRanges()[0];\n\n\t\t\trange.endContainer.setText(listConfig.text);\n\t\t\teditor.execCommand(listConfig.type);\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// Subscribe to keydown in order to check if the next key press is `Backspace`.\n\t\t\t// If so, the creation of the list will be discarded.\n\t\t\teditable.attachListener(\n\t\t\t\teditable,\n\t\t\t\t'keydown',\n\t\t\t\tthis._checkForBackspaceAndUndo,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\teditor,\n\t\t\t\t\tbullet: listConfig.bullet,\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Listens to the `Space` key events to check if the last word\n\t\t * introduced by the user should be replaced by a list (OL or UL)\n\t\t *\n\t\t * @instance\n\t\t * @memberof CKEDITOR.plugins.ae_autolist\n\t\t * @method _onKeyDown\n\t\t * @param {Event} event Event object\n\t\t * @protected\n\t\t */\n\t\t_onKeyDown(event) {\n\t\t\tconst nativeEvent = event.data.$;\n\n\t\t\tif (nativeEvent.keyCode === KEY_SPACE) {\n\t\t\t\tconst listConfig = this._getListConfig(\n\t\t\t\t\tevent.listenerData.editor\n\t\t\t\t);\n\n\t\t\t\tif (listConfig) {\n\t\t\t\t\tevent.data.preventDefault();\n\t\t\t\t\tthis._createList(listConfig);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEditor plugin: Dragable image resizing\n * https://github.com/sstur/ck-dragresize\n * - Shows semi-transparent overlay while resizing\n * - Enforces Aspect Ratio (unless holding shift)\n * - Snap to size of other images in editor\n * - Escape while dragging cancels resize\n */\nif (!CKEDITOR.plugins.get('ae_dragresize')) {\n\tconst IMAGE_HANDLES = {\n\t\tboth: ['tl', 'tm', 'tr', 'lm', 'rm', 'bl', 'bm', 'br'],\n\t\theight: ['tl', 'tm', 'tr', 'bl', 'bm', 'br'],\n\t\tscale: ['tl', 'tr', 'bl', 'br'],\n\t\twidth: ['tl', 'tr', 'lm', 'rm', 'bl', 'br'],\n\t};\n\n\tconst POSITION_ELEMENT_FN = {\n\t\tbl(handle, left, top, box) {\n\t\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t\t},\n\t\tbm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\tbox.height - 4 + top\n\t\t\t);\n\t\t},\n\t\tbr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t\t},\n\t\tlm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\t-3 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t\ttl(handle, left, top, _box) {\n\t\t\tpositionElement(handle, left - 3, top - 3);\n\t\t},\n\t\ttm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tMath.round(box.width / 2) - 3 + left,\n\t\t\t\t-3 + top\n\t\t\t);\n\t\t},\n\t\ttr(handle, left, top, box) {\n\t\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t\t},\n\t\trm(handle, left, top, box) {\n\t\t\tpositionElement(\n\t\t\t\thandle,\n\t\t\t\tbox.width - 4 + left,\n\t\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t\t);\n\t\t},\n\t};\n\n\tconst IMAGE_SNAP_TO_SIZE = 7;\n\n\tconst isFirefox = 'MozAppearance' in document.documentElement.style;\n\n\tconst isWebKit = 'WebkitAppearance' in document.documentElement.style;\n\n\tconst enablePlugin = isWebKit || isFirefox;\n\n\tif (enablePlugin) {\n\t\t// CSS is added in a compressed form\n\t\tCKEDITOR.addCss(\n\t\t\t'img::selection{color:rgba(0,0,0,0)}img.ckimgrsz{outline:1px dashed #000}#ckimgrsz{position:absolute;width:0;height:0;cursor:default;z-index:10001}#ckimgrsz span{display:none;position:absolute;top:0;left:0;width:0;height:0;background-size:100% 100%;opacity:.65;outline:1px dashed #000}#ckimgrsz i{position:absolute;display:block;width:5px;height:5px;background:#fff;border:1px solid #000}#ckimgrsz i.active,#ckimgrsz i:hover{background:#000}#ckimgrsz i.br,#ckimgrsz i.tl{cursor:nwse-resize}#ckimgrsz i.bm,#ckimgrsz i.tm{cursor:ns-resize}#ckimgrsz i.bl,#ckimgrsz i.tr{cursor:nesw-resize}#ckimgrsz i.lm,#ckimgrsz i.rm{cursor:ew-resize}body.dragging-br,body.dragging-br *,body.dragging-tl,body.dragging-tl *{cursor:nwse-resize!important}body.dragging-bm,body.dragging-bm *,body.dragging-tm,body.dragging-tm *{cursor:ns-resize!important}body.dragging-bl,body.dragging-bl *,body.dragging-tr,body.dragging-tr *{cursor:nesw-resize!important}body.dragging-lm,body.dragging-lm *,body.dragging-rm,body.dragging-rm *{cursor:ew-resize!important}'\n\t\t);\n\t}\n\n\t/**\n\t * Initializes the plugin\n\t */\n\tCKEDITOR.plugins.add('ae_dragresize', {\n\t\tonLoad() {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t},\n\t\tinit(editor) {\n\t\t\tif (!enablePlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.once('contentDom', _evt => {\n\t\t\t\tinit(editor);\n\t\t\t});\n\t\t},\n\t});\n\n\tfunction init(editor) {\n\t\tconst window = editor.window.$;\n\n\t\tconst document = editor.document.$;\n\n\t\tif (isFirefox) {\n\t\t\t// Disable the native image resizing\n\t\t\tdocument.execCommand('enableObjectResizing', false, false);\n\t\t}\n\n\t\tconst snapToSize =\n\t\t\ttypeof IMAGE_SNAP_TO_SIZE === 'undefined'\n\t\t\t\t? null\n\t\t\t\t: IMAGE_SNAP_TO_SIZE;\n\n\t\teditor.config.imageScaleResize =\n\t\t\teditor.config.imageScaleResize || 'both';\n\n\t\tconst resizer = new Resizer(editor, {\n\t\t\timageScaleResize: editor.config.imageScaleResize,\n\t\t\tsnapToSize,\n\t\t});\n\n\t\tconst mouseDownListener = function(e) {\n\t\t\tif (resizer.isHandle(e.target)) {\n\t\t\t\tresizer.initDrag(e);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\n\t\tfunction selectionChange() {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (!selection) return;\n\t\t\t// If an element is selected and that element is an IMG\n\t\t\tif (\n\t\t\t\tselection.getType() !== CKEDITOR.SELECTION_NONE &&\n\t\t\t\tselection.getStartElement().is('img')\n\t\t\t) {\n\t\t\t\t// And we're not right or middle clicking on the image\n\t\t\t\tif (\n\t\t\t\t\t!window.event ||\n\t\t\t\t\t!window.event.button ||\n\t\t\t\t\twindow.event.button === 0\n\t\t\t\t) {\n\t\t\t\t\tresizer.show(selection.getStartElement().$);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresizer.hide();\n\t\t\t}\n\t\t}\n\n\t\teditor.on('selectionChange', selectionChange);\n\n\t\teditor.on('getData', e => {\n\t\t\tlet html = e.data.dataValue || '';\n\t\t\thtml = html.replace(/<div id=\"ckimgrsz\"([\\s\\S]*?)<\\/div>/i, '');\n\t\t\thtml = html.replace(/\\b(ckimgrsz)\\b/g, '');\n\t\t\te.data.dataValue = html;\n\t\t});\n\n\t\teditor.on('beforeUndoImage', () => {\n\t\t\t// Remove the handles before undo images are saved\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('afterUndoImage', () => {\n\t\t\t// Restore the handles after undo images are saved\n\t\t\tselectionChange();\n\t\t});\n\n\t\teditor.on('blur', () => {\n\t\t\t// Remove the handles when editor loses focus\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('beforeModeUnload', function self() {\n\t\t\teditor.removeListener('beforeModeUnload', self);\n\t\t\tresizer.hide();\n\t\t});\n\n\t\teditor.on('destroy', () => {\n\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\tif (resizeElement) {\n\t\t\t\tresizeElement.remove();\n\t\t\t}\n\n\t\t\tif (isFirefox) {\n\t\t\t\tdocument.execCommand('enableObjectResizing', false, true);\n\t\t\t}\n\n\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t});\n\n\t\t// Update the selection when the browser window is resized\n\t\tlet resizeTimeout;\n\t\teditor.window.on('resize', () => {\n\t\t\t// Cancel any resize waiting to happen\n\t\t\tclearTimeout(resizeTimeout);\n\t\t\t// Delay resize to \"debounce\"\n\t\t\tresizeTimeout = setTimeout(selectionChange, 50);\n\t\t});\n\t}\n\n\tfunction Resizer(editor, cfg) {\n\t\tthis.editor = editor;\n\t\tthis.window = editor.window.$;\n\t\tthis.document = editor.document.$;\n\t\tthis.cfg = cfg || {};\n\t\tthis.init();\n\t}\n\n\tResizer.prototype = {\n\t\tinit() {\n\t\t\tconst instance = this;\n\n\t\t\tconst container = (this.container = this.document.createElement(\n\t\t\t\t'div'\n\t\t\t));\n\n\t\t\tcontainer.id = 'ckimgrsz';\n\t\t\tthis.preview = this.document.createElement('span');\n\t\t\tcontainer.appendChild(this.preview);\n\n\t\t\tconst handles = (this.handles = {});\n\n\t\t\tIMAGE_HANDLES[this.cfg.imageScaleResize].forEach(handleName => {\n\t\t\t\thandles[handleName] = instance.handles[\n\t\t\t\t\thandleName\n\t\t\t\t] = instance.createHandle(handleName);\n\t\t\t});\n\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\tcontainer.appendChild(handles[n]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreateHandle(name) {\n\t\t\tconst el = this.document.createElement('i');\n\t\t\tel.classList.add(name);\n\t\t\treturn el;\n\t\t},\n\t\tisHandle(el) {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (handles[n] === el) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tshow(el) {\n\t\t\tlet uiNode = this.editor.config.uiNode;\n\n\t\t\tconst scrollTop = uiNode ? uiNode.scrollTop : 0;\n\n\t\t\tthis.el = el;\n\t\t\tif (this.cfg.snapToSize) {\n\t\t\t\tthis.otherImages = toArray(\n\t\t\t\t\tthis.document.getElementsByTagName('img')\n\t\t\t\t);\n\t\t\t\tthis.otherImages.splice(this.otherImages.indexOf(el), 1);\n\t\t\t}\n\t\t\tconst box = (this.box = getBoundingBox(this.window, el));\n\t\t\tpositionElement(this.container, box.left, box.top + scrollTop);\n\n\t\t\tuiNode = uiNode || document.body;\n\n\t\t\tuiNode.appendChild(this.container);\n\n\t\t\tthis.el.classList.add('ckimgrsz');\n\t\t\tthis.showHandles();\n\t\t},\n\t\thide() {\n\t\t\t// Remove class from all img.ckimgrsz\n\t\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\t\t\tfor (let i = 0; i < elements.length; ++i) {\n\t\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t\t}\n\t\t\tthis.hideHandles();\n\t\t\tif (this.container.parentNode) {\n\t\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t\t}\n\t\t},\n\t\tinitDrag(e) {\n\t\t\tif (e.button !== 0) {\n\t\t\t\t// right-click or middle-click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst resizer = this;\n\t\t\tconst drag = new DragEvent(this.window, this.document);\n\t\t\tdrag.onStart = function() {\n\t\t\t\tresizer.showPreview();\n\t\t\t\tresizer.isDragging = true;\n\t\t\t\tresizer.editor.getSelection().lock();\n\t\t\t};\n\t\t\tdrag.onDrag = function() {\n\t\t\t\tresizer.calculateSize(this);\n\t\t\t\tresizer.updatePreview();\n\t\t\t\tconst box = resizer.previewBox;\n\t\t\t\tresizer.updateHandles(box, box.left, box.top);\n\t\t\t};\n\t\t\tdrag.onRelease = function() {\n\t\t\t\tresizer.isDragging = false;\n\t\t\t\tresizer.hidePreview();\n\t\t\t\tresizer.hide();\n\t\t\t\tresizer.editor.getSelection().unlock();\n\t\t\t\t// Save an undo snapshot before the image is permanently changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.onComplete = function() {\n\t\t\t\tresizer.resizeComplete();\n\t\t\t\t// Save another snapshot after the image is changed\n\t\t\t\tresizer.editor.fire('saveSnapshot');\n\t\t\t};\n\t\t\tdrag.start(e);\n\t\t},\n\t\tupdateHandles(box, left, top) {\n\t\t\tleft = left || 0;\n\t\t\ttop = top || 0;\n\t\t\tconst handles = this.handles;\n\n\t\t\tfor (const handle in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, handle)) {\n\t\t\t\t\tPOSITION_ELEMENT_FN[handle](\n\t\t\t\t\t\thandles[handle],\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbox\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tthis.updateHandles(this.box);\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'block';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thideHandles() {\n\t\t\tconst handles = this.handles;\n\t\t\tfor (const n in handles) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(handles, n)) {\n\t\t\t\t\thandles[n].style.display = 'none';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowPreview() {\n\t\t\tthis.preview.style.backgroundImage = 'url(\"' + this.el.src + '\")';\n\t\t\tthis.calculateSize();\n\t\t\tthis.updatePreview();\n\t\t\tthis.preview.style.display = 'block';\n\t\t},\n\t\tupdatePreview() {\n\t\t\tconst box = this.previewBox;\n\t\t\tpositionElement(this.preview, box.left, box.top);\n\t\t\tthis.preview.style.width = this.previewBox.width + 'px';\n\t\t\tthis.preview.style.height = this.previewBox.height + 'px';\n\t\t},\n\t\thidePreview() {\n\t\t\tconst box = getBoundingBox(this.window, this.preview);\n\t\t\tthis.result = {\n\t\t\t\twidth: box.width,\n\t\t\t\theight: box.height,\n\t\t\t};\n\t\t\tthis.preview.style.display = 'none';\n\t\t},\n\t\tcalculateSize(data) {\n\t\t\tconst box = (this.previewBox = {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: this.box.width,\n\t\t\t\theight: this.box.height,\n\t\t\t});\n\n\t\t\tif (!data) return;\n\n\t\t\tconst attr = data.target.className;\n\n\t\t\tif (~attr.indexOf('r')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('b')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height + data.delta.y);\n\t\t\t}\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.height = Math.max(32, this.box.height - data.delta.y);\n\t\t\t}\n\t\t\t// if dragging corner, enforce aspect ratio (unless shift key is being held)\n\t\t\tif (attr.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\t\tconst ratio = this.box.width / this.box.height;\n\t\t\t\tif (box.width / box.height > ratio) {\n\t\t\t\t\tbox.height = Math.round(box.width / ratio);\n\t\t\t\t} else {\n\t\t\t\t\tbox.width = Math.round(box.height * ratio);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst snapToSize = this.cfg.snapToSize;\n\n\t\t\tif (snapToSize) {\n\t\t\t\tconst others = this.otherImages;\n\t\t\t\tfor (let i = 0; i < others.length; i++) {\n\t\t\t\t\tconst other = getBoundingBox(this.window, others[i]);\n\t\t\t\t\tif (\n\t\t\t\t\t\tMath.abs(box.width - other.width) <= snapToSize &&\n\t\t\t\t\t\tMath.abs(box.height - other.height) <= snapToSize\n\t\t\t\t\t) {\n\t\t\t\t\t\tbox.width = other.width;\n\t\t\t\t\t\tbox.height = other.height;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// recalculate left or top position\n\t\t\tif (~attr.indexOf('l')) {\n\t\t\t\tbox.left = this.box.width - box.width;\n\t\t\t}\n\t\t\tif (~attr.indexOf('t')) {\n\t\t\t\tbox.top = this.box.height - box.height;\n\t\t\t}\n\t\t},\n\t\tresizeComplete() {\n\t\t\tresizeElement.call(\n\t\t\t\tthis,\n\t\t\t\tthis.el,\n\t\t\t\tthis.result.width,\n\t\t\t\tthis.result.height\n\t\t\t);\n\t\t},\n\t};\n\n\tfunction DragEvent(window, document) {\n\t\tthis.window = window;\n\t\tthis.document = document;\n\t\tthis.events = {\n\t\t\tmousemove: bind(this.mousemove, this),\n\t\t\tkeydown: bind(this.keydown, this),\n\t\t\tmouseup: bind(this.mouseup, this),\n\t\t};\n\t}\n\n\tDragEvent.prototype = {\n\t\tstart(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.target = e.target;\n\t\t\tthis.attr = e.target.className;\n\t\t\tthis.startPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.update(e);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.addEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.addEventListener('mouseup', events.mouseup, false);\n\t\t\tthis.document.body.classList.add('dragging-' + this.attr);\n\t\t\tif (this.onStart) {\n\t\t\t\tthis.onStart();\n\t\t\t}\n\t\t},\n\t\tupdate(e) {\n\t\t\tthis.currentPos = {\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t};\n\t\t\tthis.delta = {\n\t\t\t\tx: e.clientX - this.startPos.x,\n\t\t\t\ty: e.clientY - this.startPos.y,\n\t\t\t};\n\t\t\tthis.keys = {\n\t\t\t\tshift: e.shiftKey,\n\t\t\t\tctrl: e.ctrlKey,\n\t\t\t\talt: e.altKey,\n\t\t\t};\n\t\t},\n\t\tmousemove(e) {\n\t\t\tthis.update(e);\n\t\t\tif (this.onDrag) {\n\t\t\t\tthis.onDrag();\n\t\t\t}\n\t\t\tif (e.which === 0) {\n\t\t\t\t// mouse button released outside window; mouseup wasn't fired (Chrome)\n\t\t\t\tthis.mouseup(e);\n\t\t\t}\n\t\t},\n\t\tkeydown(e) {\n\t\t\t// escape key cancels dragging\n\t\t\tif (e.keyCode === 27) {\n\t\t\t\tthis.release();\n\t\t\t}\n\t\t},\n\t\tmouseup(e) {\n\t\t\tthis.update(e);\n\t\t\tthis.release();\n\t\t\tif (this.onComplete) {\n\t\t\t\tthis.onComplete();\n\t\t\t}\n\t\t},\n\t\trelease() {\n\t\t\tthis.document.body.classList.remove('dragging-' + this.attr);\n\t\t\tconst events = this.events;\n\t\t\tthis.document.removeEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tevents.mousemove,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.document.removeEventListener('keydown', events.keydown, false);\n\t\t\tthis.document.removeEventListener('mouseup', events.mouseup, false);\n\t\t\tif (this.onRelease) {\n\t\t\t\tthis.onRelease();\n\t\t\t}\n\t\t},\n\t};\n\n\t// helper functions\n\tfunction toArray(obj) {\n\t\tconst len = obj.length;\n\n\t\tconst arr = new Array(len);\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tarr[i] = obj[i];\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction bind(fn, ctx) {\n\t\tif (fn.bind) {\n\t\t\treturn fn.bind(ctx);\n\t\t}\n\t\treturn function(...args) {\n\t\t\tfn.apply(ctx, args);\n\t\t};\n\t}\n\n\tfunction positionElement(el, left, top) {\n\t\tel.style.left = String(left) + 'px';\n\t\tel.style.top = String(top) + 'px';\n\t}\n\n\tfunction resizeElement(el, width, height) {\n\t\tconst imageScaleResize = this.editor.config.imageScaleResize;\n\t\tif (imageScaleResize === 'both') {\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t} else if (\n\t\t\timageScaleResize === 'width' ||\n\t\t\timageScaleResize === 'scale'\n\t\t) {\n\t\t\tel.removeAttribute('height');\n\t\t\tel.style.height = 'auto';\n\t\t\tel.setAttribute('width', String(width));\n\t\t\tel.style.width = String(width) + 'px';\n\t\t} else if (imageScaleResize === 'height') {\n\t\t\tel.setAttribute('height', String(height));\n\t\t\tel.style.height = String(height) + 'px';\n\t\t\tel.removeAttribute('width');\n\t\t\tel.style.width = 'auto';\n\t\t}\n\t}\n\n\tfunction getBoundingBox(window, el) {\n\t\tconst rect = el.getBoundingClientRect();\n\t\treturn {\n\t\t\tleft: rect.left + window.pageXOffset,\n\t\t\ttop: rect.top + window.pageYOffset,\n\t\t\twidth: rect.width,\n\t\t\theight: rect.height,\n\t\t};\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * CKEditor plugin: Image2\n * - Show gripper to resize images on IE\n */\nif (!CKEDITOR.plugins.get('ae_dragresize_ie')) {\n\tconst alignmentsObj = {\n\t\tcenter: 1,\n\t\tleft: 0,\n\t\tright: 2,\n\t};\n\n\t/*\n\t * Set cursor css depend on imageScaleResize config\n\t **/\n\n\tconst cursor = {\n\t\tboth: 'nwse-resize',\n\t\theight: 'ns-resize',\n\t\tscale: 'nwse-resize',\n\t\twidth: 'ew-resize',\n\t};\n\n\tconst regexPercent = /^\\s*(\\d+%)\\s*$/i;\n\n\tconst template = '<img alt=\"\" src=\"\" />';\n\n\tCKEDITOR.plugins.add('ae_dragresize_ie', {\n\t\thidpi: true,\n\n\t\ticons: 'image',\n\n\t\tinit(editor) {\n\t\t\tconst image = widgetDef(editor);\n\n\t\t\t// Register the widget.\n\t\t\teditor.widgets.add('image', image);\n\t\t},\n\n\t\tonLoad() {\n\t\t\tCKEDITOR.addCss(\n\t\t\t\t'.cke_image_resizer_nwse-resize{' +\n\t\t\t\t\t'cursor: nwse-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_ns-resize{' +\n\t\t\t\t\t'cursor: ns-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_nwse-resize{' +\n\t\t\t\t\t'cursor: nwse-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_ew-resize{' +\n\t\t\t\t\t'cursor: ew-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_nocaption{' +\n\t\t\t\t\t// This is to remove unwanted space so resize\n\t\t\t\t\t// wrapper is displayed property.\n\t\t\t\t\t'line-height:0' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer{' +\n\t\t\t\t\t'display:none;' +\n\t\t\t\t\t'position:absolute;' +\n\t\t\t\t\t'width:10px;' +\n\t\t\t\t\t'height:10px;' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'background:#000;' +\n\t\t\t\t\t'outline:1px solid #fff;' +\n\t\t\t\t\t// Prevent drag handler from being misplaced (#11207).\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'cursor:nwse-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_wrapper{' +\n\t\t\t\t\t'position:relative;' +\n\t\t\t\t\t'display:inline-block;' +\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_widget_wrapper:hover .cke_image_resizer,' +\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizing{' +\n\t\t\t\t\t'display:block' +\n\t\t\t\t\t'}'\n\t\t\t);\n\t\t},\n\n\t\trequires: 'widget',\n\t});\n\n\t// Widget states (forms) depending on alignment and configuration.\n\t//\n\t// Non-captioned widget (inline styles)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>   │<img style=”float:left” />   │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p style=”text-align:center”>│\n\t// \t\t│      │ <p style=”text-align:center”> │  <img />                    │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>  │<img style=”float:right” />  │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Non-captioned widget (config.image2_alignClasses defined)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>         │<img class=”left” />         │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p class=”center”>           │\n\t// \t\t│      │ <p class=”center”>            │ <img />                     │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>        │<img class=”right” />        │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Captioned widget (inline styles)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>            │<figure style=”float:left” />           │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper style=”text-align:center”>     │<div style=”text-align:center”>         │\n\t// \t\t│      │ <figure style=”display:inline-block” />│ <figure style=”display:inline-block” />│\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>           │<figure style=”float:right” />          │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// Captioned widget (config.image2_alignClasses defined)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>                  │<figure class=”left” />                 │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper class=”center”>                │<div class=”center”>                    │\n\t// \t\t│      │ <figure />                             │ <figure />                             │\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>                 │<figure class=”right” />                │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction widgetDef(editor) {\n\t\teditor.config.imageScaleResize =\n\t\t\teditor.config.imageScaleResize || 'both';\n\n\t\teditor.on('imageAdd', imageData => {\n\t\t\teditor.widgets.initOn(imageData.data.el, 'image');\n\t\t});\n\n\t\tconst alignClasses = editor.config.image2_alignClasses;\n\n\t\tconst captionedClass = editor.config.image2_captionedClass;\n\n\t\treturn {\n\t\t\tinit() {\n\t\t\t\tconst helpers = CKEDITOR.plugins.image2;\n\n\t\t\t\tconst image = this.parts.image;\n\n\t\t\t\tconst data = {\n\t\t\t\t\talt: image.getAttribute('alt') || '',\n\t\t\t\t\thasCaption: !!this.parts.caption,\n\t\t\t\t\theight: image.getAttribute('height') || '',\n\t\t\t\t\t// Lock ratio is on by default (#10833).\n\t\t\t\t\tlock: this.ready\n\t\t\t\t\t\t? helpers.checkHasNaturalRatio(image)\n\t\t\t\t\t\t: true,\n\t\t\t\t\tsrc: image.getAttribute('src'),\n\t\t\t\t\twidth: image.getAttribute('width') || '',\n\t\t\t\t};\n\n\t\t\t\t// If we used 'a' in widget#parts definition, it could happen that\n\t\t\t\t// selected element is a child of widget.parts#caption. Since there's no clever\n\t\t\t\t// way to solve it with CSS selectors, it's done like that. (#11783).\n\t\t\t\tconst link = image.getAscendant('a');\n\n\t\t\t\tif (link && this.wrapper.contains(link)) {\n\t\t\t\t\tthis.parts.link = link;\n\t\t\t\t}\n\n\t\t\t\t// Depending on configuration, read style/class from element and\n\t\t\t\t// then remove it. Removed style/class will be set on wrapper in #data listener.\n\t\t\t\t// Note: Center alignment is detected during upcast, so only left/right cases\n\t\t\t\t// are checked below.\n\t\t\t\tif (!data.align) {\n\t\t\t\t\tconst alignElement = data.hasCaption ? this.element : image;\n\n\t\t\t\t\t// Read the initial left/right alignment from the class set on element.\n\t\t\t\t\tif (alignClasses) {\n\t\t\t\t\t\tif (alignElement.hasClass(alignClasses[0])) {\n\t\t\t\t\t\t\tdata.align = 'left';\n\t\t\t\t\t\t} else if (alignElement.hasClass(alignClasses[2])) {\n\t\t\t\t\t\t\tdata.align = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data.align) {\n\t\t\t\t\t\t\talignElement.removeClass(\n\t\t\t\t\t\t\t\talignClasses[alignmentsObj[data.align]]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata.align = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Read initial float style from figure/image and then remove it.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata.align = alignElement.getStyle('float') || 'none';\n\t\t\t\t\t\talignElement.removeStyle('float');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get rid of extra vertical space when there's no caption.\n\t\t\t\t// It will improve the look of the resizer.\n\t\t\t\tthis.wrapper[(data.hasCaption ? 'remove' : 'add') + 'Class'](\n\t\t\t\t\t'cke_image_nocaption'\n\t\t\t\t);\n\n\t\t\t\tthis.setData(data);\n\n\t\t\t\tif (editor.config.image2_disableResizer !== true) {\n\t\t\t\t\tsetupResizer(this);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of Image2.\n\t\t\t// @see CKEDITOR.plugins.widget#addClass\n\t\t\taddClass(className) {\n\t\t\t\tgetStyleableElement(this).addClass(className);\n\t\t\t},\n\n\t\t\tallowedContent: getWidgetAllowedContent(editor),\n\n\t\t\t// This widget converts style-driven dimensions to attributes.\n\t\t\tcontentTransformations: [['img[width]: sizeToAttribute']],\n\n\t\t\tdata() {\n\t\t\t\tconst features = this.features;\n\n\t\t\t\t// Image can't be captioned when figcaption is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.hasCaption &&\n\t\t\t\t\t!editor.filter.checkFeature(features.caption)\n\t\t\t\t) {\n\t\t\t\t\tthis.data.hasCaption = false;\n\t\t\t\t}\n\n\t\t\t\t// Image can't be aligned when floating is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.align != 'none' &&\n\t\t\t\t\t!editor.filter.checkFeature(features.align)\n\t\t\t\t) {\n\t\t\t\t\tthis.data.align = 'none';\n\t\t\t\t}\n\n\t\t\t\t// Update widget.parts.link since it will not auto-update unless widget\n\t\t\t\t// is destroyed and re-inited.\n\t\t\t\tif (!this.data.link) {\n\t\t\t\t\tif (this.parts.link) {\n\t\t\t\t\t\tdelete this.parts.link;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.parts.link) {\n\t\t\t\t\t\tthis.parts.link = this.parts.image.getParent();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.parts.image.setAttributes({\n\t\t\t\t\talt: this.data.alt,\n\n\t\t\t\t\tcontenteditable: this.parts.image.getAttribute(\n\t\t\t\t\t\t'contenteditable'\n\t\t\t\t\t)\n\t\t\t\t\t\t? this.parts.image.getAttribute('contenteditable')\n\t\t\t\t\t\t: true,\n\n\t\t\t\t\t// This internal is required by the editor.\n\t\t\t\t\t'data-cke-saved-src': this.data.src,\n\n\t\t\t\t\tsrc: this.data.src,\n\t\t\t\t});\n\n\t\t\t\t// If shifting non-captioned -> captioned, remove classes\n\t\t\t\t// related to styles from <img/>.\n\t\t\t\tif (\n\t\t\t\t\tthis.oldData &&\n\t\t\t\t\t!this.oldData.hasCaption &&\n\t\t\t\t\tthis.data.hasCaption\n\t\t\t\t) {\n\t\t\t\t\tfor (const c in this.data.classes) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\tthis.data.classes,\n\t\t\t\t\t\t\t\tc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.parts.image.removeClass(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set dimensions of the image according to gathered data.\n\t\t\t\t// Do it only when the attributes are allowed (#11004).\n\t\t\t\tif (editor.filter.checkFeature(features.dimension)) {\n\t\t\t\t\tsetDimensions(this);\n\t\t\t\t}\n\n\t\t\t\t// Cache current data.\n\t\t\t\tthis.oldData = CKEDITOR.tools.extend({}, this.data);\n\t\t\t},\n\n\t\t\tdowncast: downcastWidgetElement(editor),\n\n\t\t\tdraggable: false,\n\n\t\t\t// This widget has an editable caption.\n\t\t\teditables: {\n\t\t\t\tcaption: {\n\t\t\t\t\tselector: 'figcaption',\n\t\t\t\t\tallowedContent: 'br em strong sub sup u s; a[!href,target]',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tfeatures: getWidgetFeatures(editor),\n\n\t\t\t// Overrides default method to handle internal mutability of Image2.\n\t\t\t// @see CKEDITOR.plugins.widget#getClasses\n\t\t\tgetClasses: (function() {\n\t\t\t\tconst classRegex = new RegExp(\n\t\t\t\t\t'^(' +\n\t\t\t\t\t\t[].concat(captionedClass, alignClasses).join('|') +\n\t\t\t\t\t\t')$'\n\t\t\t\t);\n\n\t\t\t\treturn function() {\n\t\t\t\t\tconst classes = this.repository.parseElementClasses(\n\t\t\t\t\t\tgetStyleableElement(this).getAttribute('class')\n\t\t\t\t\t);\n\n\t\t\t\t\t// Neither config.image2_captionedClass nor config.image2_alignClasses\n\t\t\t\t\t// do not belong to style classes.\n\t\t\t\t\tfor (const c in classes) {\n\t\t\t\t\t\tif (classRegex.test(c)) {\n\t\t\t\t\t\t\tdelete classes[c];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t};\n\t\t\t})(),\n\n\t\t\tgetLabel() {\n\t\t\t\tconst label = (this.data.alt || '') + ' ' + this.pathName;\n\n\t\t\t\treturn label;\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of Image2.\n\t\t\t// @see CKEDITOR.plugins.widget#hasClass\n\t\t\thasClass(className) {\n\t\t\t\treturn getStyleableElement(this).hasClass(className);\n\t\t\t},\n\n\t\t\tparts: {\n\t\t\t\tcaption: 'figcaption',\n\t\t\t\timage: 'img',\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of Image2.\n\t\t\t// @see CKEDITOR.plugins.widget#removeClass\n\t\t\tremoveClass(className) {\n\t\t\t\tgetStyleableElement(this).removeClass(className);\n\t\t\t},\n\n\t\t\trequiredContent: 'img[src,alt]',\n\n\t\t\tstyleableElements: 'img figure',\n\n\t\t\t// Template of the widget: plain image.\n\t\t\ttemplate,\n\n\t\t\tupcast: upcastWidgetElement(editor),\n\t\t};\n\t}\n\n\t/**\n\t * A set of Enhanced Image (image2) plugin helpers.\n\t *\n\t * @class\n\t * @singleton\n\t */\n\tCKEDITOR.plugins.image2 = {\n\t\t/**\n\t\t * Checks whether the current image ratio matches the natural one\n\t\t * by comparing dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheckHasNaturalRatio(image) {\n\t\t\tconst $ = image.$;\n\n\t\t\tconst natural = this.getNatural(image);\n\n\t\t\t// The reason for two alternative comparisons is that the rounding can come from\n\t\t\t// both dimensions, e.g. there are two cases:\n\t\t\t// \t1. height is computed as a rounded relation of the real height and the value of width,\n\t\t\t//\t2. width is computed as a rounded relation of the real width and the value of heigh.\n\t\t\treturn (\n\t\t\t\tMath.round(($.clientWidth / natural.width) * natural.height) ==\n\t\t\t\t\t$.clientHeight ||\n\t\t\t\tMath.round(($.clientHeight / natural.height) * natural.width) ==\n\t\t\t\t\t$.clientWidth\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Returns natural dimensions of the image. For modern browsers\n\t\t * it uses natural(Width|Height). For old ones (IE8) it creates\n\t\t * a new image and reads the dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Object}\n\t\t */\n\t\tgetNatural(image) {\n\t\t\tlet dimensions;\n\n\t\t\tif (image.$.naturalWidth) {\n\t\t\t\tdimensions = {\n\t\t\t\t\theight: image.$.naturalHeigh,\n\t\t\t\t\twidth: image.$.naturalWidth,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst img = new Image();\n\n\t\t\t\timg.src = image.getAttribute('src');\n\n\t\t\t\tdimensions = {\n\t\t\t\t\theight: img.heigh,\n\t\t\t\t\twidth: img.width,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn dimensions;\n\t\t},\n\t};\n\n\t// Returns a function that creates widgets from all <img> and\n\t// <figure class=\"{config.image2_captionedClass}\"> elements.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction upcastWidgetElement(editor) {\n\t\tconst isCenterWrapper = centerWrapperChecker(editor);\n\n\t\tconst captionedClass = editor.config.image2_captionedClass;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\t// @param {Object} data\n\t\treturn function(el, data) {\n\t\t\tconst dimensions = {\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t};\n\n\t\t\tconst name = el.name;\n\n\t\t\tlet image;\n\n\t\t\t// #11110 Don't initialize on pasted fake objects.\n\t\t\tif (el.attributes['data-cke-realelement']) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a center wrapper is found, there are 3 possible cases:\n\t\t\t//\n\t\t\t// 1. <div style=\"text-align:center\"><figure>...</figure></div>.\n\t\t\t//    In this case centering is done with a class set on widget.wrapper.\n\t\t\t//    Simply replace centering wrapper with figure (it's no longer necessary).\n\t\t\t//\n\t\t\t// 2. <p style=\"text-align:center\"><img/></p>.\n\t\t\t//    Nothing to do here: <p> remains for styling purposes.\n\t\t\t//\n\t\t\t// 3. <div style=\"text-align:center\"><img/></div>.\n\t\t\t//    Nothing to do here (2.) but that case is only possible in enterMode different\n\t\t\t//    than ENTER_P.\n\t\t\tif (isCenterWrapper(el)) {\n\t\t\t\tif (name == 'div') {\n\t\t\t\t\tconst figure = el.getFirst('figure');\n\n\t\t\t\t\t// Case #1.\n\t\t\t\t\tif (figure) {\n\t\t\t\t\t\tel.replaceWith(figure);\n\t\t\t\t\t\tel = figure;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Cases #2 and #3 (handled transparently)\n\n\t\t\t\t// If there's a centering wrapper, save it in data.\n\t\t\t\tdata.align = 'center';\n\n\t\t\t\t// Image can be wrapped in link <a><img/></a>.\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\t\t\t}\n\n\t\t\t// No center wrapper has been found.\n\t\t\telse if (name == 'figure' && el.hasClass(captionedClass)) {\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\n\t\t\t\t// Upcast linked image like <a><img/></a>.\n\t\t\t} else if (isLinkedOrStandaloneImage(el)) {\n\t\t\t\timage = el.name == 'a' ? el.children[0] : el;\n\t\t\t}\n\n\t\t\tif (!image) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there's an image, then cool, we got a widget.\n\t\t\t// Now just remove dimension attributes expressed with %.\n\t\t\tfor (const d in dimensions) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(dimensions, d)) {\n\t\t\t\t\tconst dimension = image.attributes[d];\n\n\t\t\t\t\tif (dimension && dimension.match(regexPercent)) {\n\t\t\t\t\t\tdelete image.attributes[d];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function which transforms the widget to the external format\n\t// according to the current configuration.\n\t//\n\t// @param {CKEDITOR.editor}\n\tfunction downcastWidgetElement(editor) {\n\t\tconst alignClasses = editor.config.image2_alignClasses;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\treturn function(el) {\n\t\t\t// In case of <a><img/></a>, <img/> is the element to hold\n\t\t\t// inline styles or classes (image2_alignClasses).\n\t\t\tconst attrsHolder = el.name == 'a' ? el.getFirst() : el;\n\n\t\t\tdelete attrsHolder.attributes.contenteditable;\n\n\t\t\tconst attrs = attrsHolder.attributes;\n\n\t\t\tconst align = this.data.align;\n\n\t\t\t// De-wrap the image from resize handle wrapper.\n\t\t\t// Only block widgets have one.\n\t\t\tif (!this.inline) {\n\t\t\t\tconst resizeWrapper = el.getFirst('span');\n\n\t\t\t\tif (resizeWrapper) {\n\t\t\t\t\tresizeWrapper.replaceWith(\n\t\t\t\t\t\tresizeWrapper.getFirst({\n\t\t\t\t\t\t\ta: 1,\n\t\t\t\t\t\t\timg: 1,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (align && align != 'none') {\n\t\t\t\tconst styles = CKEDITOR.tools.parseCssText(attrs.style || '');\n\n\t\t\t\t// When the widget is captioned (<figure>) and internally centering is done\n\t\t\t\t// with widget's wrapper style/class, in the external data representation,\n\t\t\t\t// <figure> must be wrapped with an element holding an style/class:\n\t\t\t\t//\n\t\t\t\t// \t<div style=\"text-align:center\">\n\t\t\t\t// \t\t<figure class=\"image\" style=\"display:inline-block\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t// or\n\t\t\t\t// \t<div class=\"some-center-class\">\n\t\t\t\t// \t\t<figure class=\"image\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t//\n\t\t\t\tif (align == 'center' && el.name == 'figure') {\n\t\t\t\t\tel = el.wrapWith(\n\t\t\t\t\t\tnew CKEDITOR.htmlParser.element(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\talignClasses\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tclass: alignClasses[1],\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\tstyle: 'text-align:center',\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If left/right, add float style to the downcasted element.\n\t\t\t\telse if (\n\t\t\t\t\talign in\n\t\t\t\t\t{\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\tright: 1,\n\t\t\t\t\t}\n\t\t\t\t) {\n\t\t\t\t\tif (alignClasses) {\n\t\t\t\t\t\tattrsHolder.addClass(\n\t\t\t\t\t\t\talignClasses[alignmentsObj[align]]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyles['float'] = align;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update element styles.\n\t\t\t\tif (!alignClasses && !CKEDITOR.tools.isEmpty(styles)) {\n\t\t\t\t\tattrs.style = CKEDITOR.tools.writeCssText(styles);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function that checks if an element is a centering wrapper.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction centerWrapperChecker(editor) {\n\t\tconst captionedClass = editor.config.image2_captionedClass;\n\n\t\tconst alignClasses = editor.config.image2_alignClasses;\n\n\t\tconst validChildren = {\n\t\t\ta: 1,\n\t\t\tfigure: 1,\n\t\t\timg: 1,\n\t\t};\n\n\t\treturn function(el) {\n\t\t\t// Wrapper must be either <div> or <p>.\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\tel.name in\n\t\t\t\t\t{\n\t\t\t\t\t\tdiv: 1,\n\t\t\t\t\t\tp: 1,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst children = el.children;\n\n\t\t\t// Centering wrapper can have only one child.\n\t\t\tif (children.length !== 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst child = children[0];\n\n\t\t\t// Only <figure> or <img /> can be first (only) child of centering wrapper,\n\t\t\t// regardless of its type.\n\t\t\tif (!(child.name in validChildren)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If centering wrapper is <p>, only <img /> can be the child.\n\t\t\t//   <p style=\"text-align:center\"><img /></p>\n\t\t\tif (el.name == 'p') {\n\t\t\t\tif (!isLinkedOrStandaloneImage(child)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Centering <div> can hold <img/> or <figure>, depending on enterMode.\n\t\t\telse {\n\t\t\t\t// If a <figure> is the first (only) child, it must have a class.\n\t\t\t\t//   <div style=\"text-align:center\"><figure>...</figure><div>\n\t\t\t\tif (child.name == 'figure') {\n\t\t\t\t\tif (!child.hasClass(captionedClass)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Centering <div> can hold <img/> or <a><img/></a> only when enterMode\n\t\t\t\t\t// is ENTER_(BR|DIV).\n\t\t\t\t\t//   <div style=\"text-align:center\"><img /></div>\n\t\t\t\t\t//   <div style=\"text-align:center\"><a><img /></a></div>\n\t\t\t\t\tif (editor.enterMode == CKEDITOR.ENTER_P) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Regardless of enterMode, a child which is not <figure> must be\n\t\t\t\t\t// either <img/> or <a><img/></a>.\n\t\t\t\t\tif (!isLinkedOrStandaloneImage(child)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Centering wrapper got to be... centering. If image2_alignClasses are defined,\n\t\t\t// check for centering class. Otherwise, check the style.\n\t\t\tif (\n\t\t\t\talignClasses\n\t\t\t\t\t? el.hasClass(alignClasses[1])\n\t\t\t\t\t: CKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\tel.attributes.style || '',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t  )['text-align'] == 'center'\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\t// Checks whether element is <img/> or <a><img/></a>.\n\t//\n\t// @param {CKEDITOR.htmlParser.element}\n\tfunction isLinkedOrStandaloneImage(el) {\n\t\tif (el.name == 'img') {\n\t\t\treturn true;\n\t\t} else if (el.name == 'a') {\n\t\t\treturn el.children.length == 1 && el.getFirst('img');\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// Sets width and height of the widget image according to current widget data.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setDimensions(widget) {\n\t\tconst data = widget.data;\n\n\t\tconst dimensions = {\n\t\t\theight: data.height,\n\t\t\twidth: data.width,\n\t\t};\n\n\t\tconst image = widget.parts.image;\n\n\t\tfor (const d in dimensions) {\n\t\t\tif (dimensions[d]) {\n\t\t\t\timage.setAttribute(d, dimensions[d]);\n\t\t\t} else {\n\t\t\t\timage.removeAttribute(d);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Defines all features related to drag-driven image resizing.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setupResizer(widget) {\n\t\tconst editor = widget.editor;\n\n\t\tconst editable = editor.editable();\n\n\t\tconst doc = editor.document;\n\n\t\t// Store the resizer in a widget for testing (#11004).\n\t\tconst resizer = (widget.resizer = doc.createElement('span'));\n\n\t\tresizer.addClass('cke_image_resizer');\n\t\tresizer.addClass(\n\t\t\t'cke_image_resizer_' + cursor[editor.config.imageScaleResize]\n\t\t);\n\t\tresizer.append(new CKEDITOR.dom.text('\\u200b', doc));\n\n\t\t// Inline widgets don't need a resizer wrapper as an image spans the entire widget.\n\t\tif (!widget.inline) {\n\t\t\tconst imageOrLink = widget.parts.link || widget.parts.image;\n\n\t\t\tconst oldResizeWrapper = imageOrLink.getParent();\n\n\t\t\tconst resizeWrapper = doc.createElement('span');\n\n\t\t\tresizeWrapper.addClass('cke_image_resizer_wrapper');\n\t\t\tresizeWrapper.append(imageOrLink);\n\t\t\tresizeWrapper.append(resizer);\n\t\t\twidget.element.append(resizeWrapper, true);\n\n\t\t\t// Remove the old wrapper which could came from e.g. pasted HTML\n\t\t\t// and which could be corrupted (e.g. resizer span has been lost).\n\t\t\tif (oldResizeWrapper.is('span')) {\n\t\t\t\toldResizeWrapper.remove();\n\t\t\t}\n\t\t} else {\n\t\t\twidget.wrapper.append(resizer);\n\t\t}\n\n\t\t// Calculate values of size variables and mouse offsets.\n\t\tresizer.on('mousedown', evt => {\n\t\t\tconst image = widget.parts.image;\n\n\t\t\t// \"factor\" can be either 1 or -1. I.e.: For right-aligned images, we need to\n\t\t\t// subtract the difference to get proper width, etc. Without \"factor\",\n\t\t\t// resizer starts working the opposite way.\n\t\t\tconst factor = widget.data.align == 'right' ? -1 : 1;\n\n\t\t\t// The x-coordinate of the mouse relative to the screen\n\t\t\t// when button gets pressed.\n\t\t\tconst startX = evt.data.$.screenX;\n\n\t\t\tconst startY = evt.data.$.screenY;\n\n\t\t\t// The initial dimensions and aspect ratio of the image.\n\t\t\tconst startWidth = image.$.clientWidth;\n\n\t\t\tconst startHeight = image.$.clientHeight;\n\n\t\t\tconst listeners = [];\n\n\t\t\t// A class applied to editable during resizing.\n\t\t\tconst cursorClass = 'cke_image_s' + (!~factor ? 'w' : 'e');\n\n\t\t\tlet nativeEvt;\n\t\t\tlet newWidth;\n\t\t\tlet newHeight;\n\t\t\tlet updateData;\n\n\t\t\tlet moveDiffX;\n\t\t\tlet moveDiffY;\n\n\t\t\t// Save the undo snapshot first: before resizing.\n\t\t\teditor.fire('saveSnapshot');\n\n\t\t\t// Mousemove listeners are removed on mouseup.\n\t\t\tattachToDocuments('mousemove', onMouseMove, listeners);\n\n\t\t\t// Clean up the mousemove listener. Update widget data if valid.\n\t\t\tattachToDocuments('mouseup', onMouseUp, listeners);\n\n\t\t\t// The entire editable will have the special cursor while resizing goes on.\n\t\t\teditable.addClass(cursorClass);\n\n\t\t\t// This is to always keep the resizer element visible while resizing.\n\t\t\tresizer.addClass('cke_image_resizing');\n\n\t\t\t// Attaches an event to a global document if inline editor.\n\t\t\t// Additionally, if classic (`iframe`-based) editor, also attaches the same event to `iframe`'s document.\n\t\t\tfunction attachToDocuments(name, callback, collection) {\n\t\t\t\tconst globalDoc = CKEDITOR.document;\n\n\t\t\t\tconst listeners = [];\n\n\t\t\t\tif (!doc.equals(globalDoc)) {\n\t\t\t\t\tlisteners.push(globalDoc.on(name, callback));\n\t\t\t\t}\n\n\t\t\t\tlisteners.push(doc.on(name, callback));\n\n\t\t\t\tif (collection) {\n\t\t\t\t\tfor (let i = listeners.length; i--; ) {\n\t\t\t\t\t\tcollection.push(listeners.pop());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// This is how variables refer to the geometry.\n\t\t\t// Note: x corresponds to moveOffset, this is the position of mouse\n\t\t\t// Note: o corresponds to [startX, startY].\n\t\t\t//\n\t\t\t// \t+--------------+--------------+\n\t\t\t// \t|              |              |\n\t\t\t// \t|      I       |      II      |\n\t\t\t// \t|              |              |\n\t\t\t// \t+------------- o -------------+ _ _ _\n\t\t\t// \t|              |              |      ^\n\n\t\t\t// \t|      VI      |     III      |      | moveDiffY\n\t\t\t// \t|              |         x _ _ _ _ _ v\n\t\t\t// \t+--------------+---------|----+\n\t\t\t// \t               |         |\n\t\t\t// \t                <------->\n\t\t\t// \t                moveDiffX\n\t\t\tfunction onMouseMove(evt) {\n\t\t\t\tconst imageScaleResize = editor.config.imageScaleResize;\n\n\t\t\t\tnativeEvt = evt.data.$;\n\n\t\t\t\t// This is how far the mouse is from the point the button was pressed.\n\t\t\t\tmoveDiffX = nativeEvt.screenX - startX;\n\t\t\t\tmoveDiffY = startY - nativeEvt.screenY;\n\n\t\t\t\tif (\n\t\t\t\t\timageScaleResize === 'width' ||\n\t\t\t\t\timageScaleResize === 'both' ||\n\t\t\t\t\timageScaleResize === 'scale'\n\t\t\t\t) {\n\t\t\t\t\tnewWidth = startWidth + factor * moveDiffX;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\timageScaleResize === 'height' ||\n\t\t\t\t\timageScaleResize === 'both'\n\t\t\t\t) {\n\t\t\t\t\tnewHeight = startHeight - moveDiffY;\n\t\t\t\t}\n\n\t\t\t\tif (imageScaleResize === 'scale') {\n\t\t\t\t\tnewHeight = 'auto';\n\t\t\t\t}\n\n\t\t\t\tnewWidth = newWidth || startWidth;\n\t\t\t\tnewHeight = newHeight || startHeight;\n\n\t\t\t\t// Don't update attributes if less than 10.\n\t\t\t\t// This is to prevent images to visually disappear.\n\t\t\t\tif (\n\t\t\t\t\tnewWidth >= 15 &&\n\t\t\t\t\t(newHeight >= 15 || newHeight === 'auto')\n\t\t\t\t) {\n\t\t\t\t\timage.$.style.width = newWidth + 'px';\n\t\t\t\t\timage.$.style.height = newHeight + 'px';\n\n\t\t\t\t\tupdateData = true;\n\t\t\t\t} else {\n\t\t\t\t\tupdateData = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onMouseUp() {\n\t\t\t\tlet l;\n\n\t\t\t\twhile ((l = listeners.pop())) {\n\t\t\t\t\tl.removeListener();\n\t\t\t\t}\n\n\t\t\t\t// Restore default cursor by removing special class.\n\t\t\t\teditable.removeClass(cursorClass);\n\n\t\t\t\t// This is to bring back the regular behaviour of the resizer.\n\t\t\t\tresizer.removeClass('cke_image_resizing');\n\n\t\t\t\tif (updateData) {\n\t\t\t\t\twidget.setData({\n\t\t\t\t\t\theight: newHeight,\n\t\t\t\t\t\twidth: newWidth,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save another undo snapshot: after resizing.\n\t\t\t\t\teditor.fire('saveSnapshot');\n\t\t\t\t}\n\n\t\t\t\t// Don't update data twice or more.\n\t\t\t\tupdateData = false;\n\t\t\t}\n\t\t});\n\n\t\t// Change the position of the widget resizer when data changes.\n\t\twidget.on('data', () => {\n\t\t\tresizer[widget.data.align == 'right' ? 'addClass' : 'removeClass'](\n\t\t\t\t'cke_image_resizer_left'\n\t\t\t);\n\t\t});\n\n\t\twidget.parts.image.on('click', () => {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (selection) {\n\t\t\t\tconst element = selection.getStartElement();\n\n\t\t\t\tif (element) {\n\t\t\t\t\tconst widgetElement = element.findOne('img');\n\n\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\tnativeEvent: event,\n\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t// Returns a set of widget allowedContent rules, depending\n\t// on configurations like config#image2_alignClasses or\n\t// config#image2_captionedClass.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetAllowedContent(editor) {\n\t\tconst rules = {\n\t\t\tfigcaption: true,\n\t\t\tfigure: {\n\t\t\t\tclasses: '!' + editor.config.image2_captionedClass,\n\t\t\t},\n\t\t\timg: {\n\t\t\t\tattributes: '!src,alt,width,height',\n\t\t\t},\n\t\t};\n\n\t\treturn rules;\n\t}\n\n\t// Returns a set of widget feature rules, depending\n\t// on editor configuration. Note that the following may not cover\n\t// all the possible cases since requiredContent supports a single\n\t// tag only.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetFeatures(editor) {\n\t\tconst alignClasses = editor.config.image2_alignClasses;\n\n\t\tconst features = {\n\t\t\talign: {\n\t\t\t\trequiredContent:\n\t\t\t\t\t'img' +\n\t\t\t\t\t(alignClasses ? '(' + alignClasses[0] + ')' : '{float}'),\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\trequiredContent: 'figcaption',\n\t\t\t},\n\t\t\tdimension: {\n\t\t\t\trequiredContent: 'img[width,height]',\n\t\t\t},\n\t\t};\n\n\t\treturn features;\n\t}\n\n\t// Returns element which is styled, considering current\n\t// state of the widget.\n\t//\n\t// @see CKEDITOR.plugins.widget#applyStyle\n\t// @param {CKEDITOR.plugins.widget} widget\n\t// @returns {CKEDITOR.dom.element}\n\tfunction getStyleableElement(widget) {\n\t\treturn widget.data.hasCaption ? widget.element : widget.parts.image;\n\t}\n}\n\nCKEDITOR.config.image2_captionedClass = 'image';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2017, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\n(function() {\n\tif (CKEDITOR.plugins.get('ae_dragresize_ie11')) {\n\t\treturn;\n\t}\n\n\tconst template = '<img alt=\"\" src=\"\" />';\n\n\tconst templateBlock = new CKEDITOR.template(\n\t\t'<figure class=\"{captionedClass}\">' +\n\t\t\ttemplate +\n\t\t\t'<figcaption>{captionPlaceholder}</figcaption>' +\n\t\t\t'</figure>'\n\t);\n\n\tconst alignmentsObj = {left: 0, center: 1, right: 2};\n\n\tconst regexPercent = /^\\s*(\\d+%)\\s*$/i;\n\n\tCKEDITOR.plugins.add('ae_dragresize_ie11', {\n\t\trequires: 'widget',\n\t\tonLoad() {\n\t\t\tCKEDITOR.addCss(\n\t\t\t\t'.cke_image_nocaption{' +\n\t\t\t\t\t// This is to remove unwanted space so resize\n\t\t\t\t\t// wrapper is displayed property.\n\t\t\t\t\t'line-height:0' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_editable.cke_image_ne, .cke_editable.cke_image_ne *{cursor:ne-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_nw, .cke_editable.cke_image_nw *{cursor:nw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_sw, .cke_editable.cke_image_sw *{cursor:sw-resize !important}' +\n\t\t\t\t\t'.cke_editable.cke_image_se, .cke_editable.cke_image_se *{cursor:se-resize !important}' +\n\t\t\t\t\t'.cke_image_resizer{' +\n\t\t\t\t\t'display:none;' +\n\t\t\t\t\t'position:absolute;' +\n\t\t\t\t\t'width:10px;' +\n\t\t\t\t\t'height:10px;' +\n\t\t\t\t\t'background:#000;' +\n\t\t\t\t\t'outline:1px solid #fff;' +\n\t\t\t\t\t// Prevent drag handler from being misplaced (#11207).\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_image_resizer_wrapper{' +\n\t\t\t\t\t'position:relative;' +\n\t\t\t\t\t'display:inline-block;' +\n\t\t\t\t\t'line-height:0;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_ne{' +\n\t\t\t\t\t'cursor:ne-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Top-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_nw{' +\n\t\t\t\t\t'cursor:nw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'top:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-right corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_se{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:se-resize;' +\n\t\t\t\t\t'left:auto;' +\n\t\t\t\t\t'right:-5px;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Bottom-left corner style of the resizer.\n\t\t\t\t\t'.cke_image_resizer.cke_image_resizer_sw{' +\n\t\t\t\t\t'bottom:-5px;' +\n\t\t\t\t\t'cursor:sw-resize;' +\n\t\t\t\t\t'left:-5px;' +\n\t\t\t\t\t'right:auto;' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t'.cke_widget_wrapper:hover .cke_image_resizer,' +\n\t\t\t\t\t'.cke_image_resizing>.cke_image_resizer{' +\n\t\t\t\t\t'display:block' +\n\t\t\t\t\t'}' +\n\t\t\t\t\t// Expand widget wrapper when linked inline image.\n\t\t\t\t\t'.cke_widget_wrapper>a{' +\n\t\t\t\t\t'display:inline-block' +\n\t\t\t\t\t'}'\n\t\t\t);\n\t\t},\n\n\t\tinit(editor) {\n\t\t\t// Adapts configuration from original image plugin. Should be removed\n\t\t\t// when we'll rename ae_dragresize_ie11 to image.\n\n\t\t\tconst image = widgetDef(editor);\n\n\t\t\t// Register the widget.\n\t\t\teditor.widgets.add('image', image);\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne('img');\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tafterInit(editor) {\n\t\t\t// Integrate with align commands (justify plugin).\n\t\t\tconst align = {left: 1, right: 1, center: 1, block: 1};\n\n\t\t\tconst integrate = alignCommandIntegrator(editor);\n\n\t\t\tfor (const value in align) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(align, value)) {\n\t\t\t\t\tintegrate(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\t// Widget states (forms) depending on alignment and configuration.\n\t//\n\t// Non-captioned widget (inline styles)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>   │<img style=”float:left” />   │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p style=”text-align:center”>│\n\t// \t\t│      │ <p style=”text-align:center”> │  <img />                    │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>  │<img style=”float:right” />  │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Non-captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬───────────────────────────────┬─────────────────────────────┐\n\t// \t\t│Align │Internal form                  │Data                         │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│none  │<wrapper>                      │<img />                      │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>         │<img class=”left” />         │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│center│<wrapper>                      │<p class=”center”>           │\n\t// \t\t│      │ <p class=”center”>            │ <img />                     │\n\t// \t\t│      │   <img />                     │</p>                         │\n\t// \t\t│      │ </p>                          │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t├──────┼───────────────────────────────┼─────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>        │<img class=”right” />        │\n\t// \t\t│      │ <img />                       │                             │\n\t// \t\t│      │</wrapper>                     │                             │\n\t// \t\t└──────┴───────────────────────────────┴─────────────────────────────┘\n\t//\n\t// Captioned widget (inline styles)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper style=”float:left”>            │<figure style=”float:left” />           │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper style=”text-align:center”>     │<div style=”text-align:center”>         │\n\t// \t\t│      │ <figure style=”display:inline-block” />│ <figure style=”display:inline-block” />│\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper style=”float:right”>           │<figure style=”float:right” />          │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// Captioned widget (config.ae_dragresize_ie11_alignClasses defined)\n\t// \t\t┌──────┬────────────────────────────────────────┬────────────────────────────────────────┐\n\t// \t\t│Align │Internal form                           │Data                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│none  │<wrapper>                               │<figure />                              │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│left  │<wrapper class=”left”>                  │<figure class=”left” />                 │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│center│<wrapper class=”center”>                │<div class=”center”>                    │\n\t// \t\t│      │ <figure />                             │ <figure />                             │\n\t// \t\t│      │</wrapper>                              │</p>                                    │\n\t// \t\t├──────┼────────────────────────────────────────┼────────────────────────────────────────┤\n\t// \t\t│right │<wrapper class=”right”>                 │<figure class=”right” />                │\n\t// \t\t│      │ <figure />                             │                                        │\n\t// \t\t│      │</wrapper>                              │                                        │\n\t// \t\t└──────┴────────────────────────────────────────┴────────────────────────────────────────┘\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction widgetDef(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tfunction deflate() {\n\t\t\tif (this.deflated) return;\n\n\t\t\t// Remember whether widget was focused before destroyed.\n\t\t\tif (editor.widgets.focused == this.widget) this.focused = true;\n\n\t\t\teditor.widgets.destroy(this.widget);\n\n\t\t\t// Mark widget was destroyed.\n\t\t\tthis.deflated = true;\n\t\t}\n\n\t\tfunction inflate() {\n\t\t\tconst editable = editor.editable();\n\n\t\t\tconst doc = editor.document;\n\n\t\t\t// Create a new widget. This widget will be either captioned\n\t\t\t// non-captioned, block or inline according to what is the\n\t\t\t// new state of the widget.\n\t\t\tif (this.deflated) {\n\t\t\t\tthis.widget = editor.widgets.initOn(\n\t\t\t\t\tthis.element,\n\t\t\t\t\t'image',\n\t\t\t\t\tthis.widget.data\n\t\t\t\t);\n\n\t\t\t\t// Once widget was re-created, it may become an inline element without\n\t\t\t\t// block wrapper (i.e. when unaligned, end not captioned). Let's do some\n\t\t\t\t// sort of autoparagraphing here (#10853).\n\t\t\t\tif (\n\t\t\t\t\tthis.widget.inline &&\n\t\t\t\t\t!new CKEDITOR.dom.elementPath(this.widget.wrapper, editable)\n\t\t\t\t\t\t.block\n\t\t\t\t) {\n\t\t\t\t\tconst block = doc.createElement(\n\t\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div'\n\t\t\t\t\t);\n\t\t\t\t\tblock.replace(this.widget.wrapper);\n\t\t\t\t\tthis.widget.wrapper.move(block);\n\t\t\t\t}\n\n\t\t\t\t// The focus must be transferred from the old one (destroyed)\n\t\t\t\t// to the new one (just created).\n\t\t\t\tif (this.focused) {\n\t\t\t\t\tthis.widget.focus();\n\t\t\t\t\tdelete this.focused;\n\t\t\t\t}\n\n\t\t\t\tdelete this.deflated;\n\t\t\t}\n\n\t\t\t// If now widget was destroyed just update wrapper's alignment.\n\t\t\t// According to the new state.\n\t\t\telse {\n\t\t\t\tsetWrapperAlign(this.widget, alignClasses);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tallowedContent: getWidgetAllowedContent(editor),\n\n\t\t\trequiredContent: 'img[src,alt]',\n\n\t\t\tfeatures: getWidgetFeatures(editor),\n\n\t\t\tstyleableElements: 'img figure',\n\n\t\t\t// This widget converts style-driven dimensions to attributes.\n\t\t\tcontentTransformations: [['img[width]: sizeToAttribute']],\n\n\t\t\t// This widget has an editable caption.\n\t\t\teditables: {\n\t\t\t\tcaption: {\n\t\t\t\t\tselector: 'figcaption',\n\t\t\t\t\tallowedContent: 'br em strong sub sup u s; a[!href,target]',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tparts: {\n\t\t\t\timage: 'img',\n\t\t\t\tcaption: 'figcaption',\n\t\t\t\t// parts#link defined in widget#init\n\t\t\t},\n\n\t\t\t// Template of the widget: plain image.\n\t\t\ttemplate,\n\n\t\t\tdata() {\n\t\t\t\tconst features = this.features;\n\n\t\t\t\t// Image can't be captioned when figcaption is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.hasCaption &&\n\t\t\t\t\t!editor.filter.checkFeature(features.caption)\n\t\t\t\t)\n\t\t\t\t\tthis.data.hasCaption = false;\n\n\t\t\t\t// Image can't be aligned when floating is disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\tthis.data.align != 'none' &&\n\t\t\t\t\t!editor.filter.checkFeature(features.align)\n\t\t\t\t)\n\t\t\t\t\tthis.data.align = 'none';\n\n\t\t\t\t// Convert the internal form of the widget from the old state to the new one.\n\t\t\t\tthis.shiftState({\n\t\t\t\t\twidget: this,\n\t\t\t\t\telement: this.element,\n\t\t\t\t\toldData: this.oldData,\n\t\t\t\t\tnewData: this.data,\n\t\t\t\t\tdeflate,\n\t\t\t\t\tinflate,\n\t\t\t\t});\n\n\t\t\t\t// Update widget.parts.link since it will not auto-update unless widget\n\t\t\t\t// is destroyed and re-inited.\n\t\t\t\tif (!this.data.link) {\n\t\t\t\t\tif (this.parts.link) delete this.parts.link;\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.parts.link)\n\t\t\t\t\t\tthis.parts.link = this.parts.image.getParent();\n\t\t\t\t}\n\n\t\t\t\tthis.parts.image.setAttributes({\n\t\t\t\t\tsrc: this.data.src,\n\n\t\t\t\t\t// This internal is required by the editor.\n\t\t\t\t\t'data-cke-saved-src': this.data.src,\n\n\t\t\t\t\talt: this.data.alt,\n\t\t\t\t});\n\n\t\t\t\t// If shifting non-captioned -> captioned, remove classes\n\t\t\t\t// related to styles from <img/>.\n\t\t\t\tif (\n\t\t\t\t\tthis.oldData &&\n\t\t\t\t\t!this.oldData.hasCaption &&\n\t\t\t\t\tthis.data.hasCaption\n\t\t\t\t) {\n\t\t\t\t\tfor (const c in this.data.classes) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\t\tthis.data.classes,\n\t\t\t\t\t\t\t\tc\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.parts.image.removeClass(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set dimensions of the image according to gathered data.\n\t\t\t\t// Do it only when the attributes are allowed (#11004).\n\t\t\t\tif (editor.filter.checkFeature(features.dimension))\n\t\t\t\t\tsetDimensions(this);\n\n\t\t\t\t// Cache current data.\n\t\t\t\tthis.oldData = CKEDITOR.tools.extend({}, this.data);\n\t\t\t},\n\n\t\t\tinit() {\n\t\t\t\tconst helpers = CKEDITOR.plugins.ae_dragresize_ie11;\n\n\t\t\t\tconst image = this.parts.image;\n\n\t\t\t\tconst data = {\n\t\t\t\t\thasCaption: !!this.parts.caption,\n\t\t\t\t\tsrc: image.getAttribute('src'),\n\t\t\t\t\talt: image.getAttribute('alt') || '',\n\t\t\t\t\twidth: image.getAttribute('width') || '',\n\t\t\t\t\theight: image.getAttribute('height') || '',\n\n\t\t\t\t\t// Lock ratio is on by default (#10833).\n\t\t\t\t\tlock: this.ready\n\t\t\t\t\t\t? helpers.checkHasNaturalRatio(image)\n\t\t\t\t\t\t: true,\n\t\t\t\t};\n\n\t\t\t\t// If we used 'a' in widget#parts definition, it could happen that\n\t\t\t\t// selected element is a child of widget.parts#caption. Since there's no clever\n\t\t\t\t// way to solve it with CSS selectors, it's done like that. (#11783).\n\t\t\t\tconst link = image.getAscendant('a');\n\n\t\t\t\tif (link && this.wrapper.contains(link)) this.parts.link = link;\n\n\t\t\t\t// Depending on configuration, read style/class from element and\n\t\t\t\t// then remove it. Removed style/class will be set on wrapper in #data listener.\n\t\t\t\t// Note: Center alignment is detected during upcast, so only left/right cases\n\t\t\t\t// are checked below.\n\t\t\t\tif (!data.align) {\n\t\t\t\t\tconst alignElement = data.hasCaption ? this.element : image;\n\n\t\t\t\t\t// Read the initial left/right alignment from the class set on element.\n\t\t\t\t\tif (alignClasses) {\n\t\t\t\t\t\tif (alignElement.hasClass(alignClasses[0])) {\n\t\t\t\t\t\t\tdata.align = 'left';\n\t\t\t\t\t\t} else if (alignElement.hasClass(alignClasses[2])) {\n\t\t\t\t\t\t\tdata.align = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data.align) {\n\t\t\t\t\t\t\talignElement.removeClass(\n\t\t\t\t\t\t\t\talignClasses[alignmentsObj[data.align]]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdata.align = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Read initial float style from figure/image and then remove it.\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata.align = alignElement.getStyle('float') || 'none';\n\t\t\t\t\t\talignElement.removeStyle('float');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Update data.link object with attributes if the link has been discovered.\n\t\t\t\tif (editor.plugins.link && this.parts.link) {\n\t\t\t\t\tdata.link = helpers.getLinkAttributesParser()(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\tthis.parts.link\n\t\t\t\t\t);\n\n\t\t\t\t\t// Get rid of cke_widget_* classes in data. Otherwise\n\t\t\t\t\t// they might appear in link dialog.\n\t\t\t\t\tconst advanced = data.link.advanced;\n\t\t\t\t\tif (advanced && advanced.advCSSClasses) {\n\t\t\t\t\t\tadvanced.advCSSClasses = CKEDITOR.tools.trim(\n\t\t\t\t\t\t\tadvanced.advCSSClasses.replace(/cke_\\S+/, '')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get rid of extra vertical space when there's no caption.\n\t\t\t\t// It will improve the look of the resizer.\n\t\t\t\tthis.wrapper[(data.hasCaption ? 'remove' : 'add') + 'Class'](\n\t\t\t\t\t'cke_image_nocaption'\n\t\t\t\t);\n\n\t\t\t\tthis.setData(data);\n\n\t\t\t\t// Setup dynamic image resizing with mouse.\n\t\t\t\t// Don't initialize resizer when dimensions are disallowed (#11004).\n\t\t\t\tif (\n\t\t\t\t\teditor.filter.checkFeature(this.features.dimension) &&\n\t\t\t\t\teditor.config.ae_dragresize_ie11_disableResizer !== true\n\t\t\t\t)\n\t\t\t\t\tsetupResizer(this);\n\n\t\t\t\tconst dragHandlerStyle = this.dragHandlerContainer.$.style;\n\t\t\t\tdragHandlerStyle.setAttribute(\n\t\t\t\t\t'backgroundColor',\n\t\t\t\t\t'rgba(255, 255, 255, 1'\n\t\t\t\t);\n\t\t\t\tdragHandlerStyle.setAttribute('opacity', '1');\n\n\t\t\t\tthis.shiftState = helpers.stateShifter(this.editor);\n\n\t\t\t\t// Add widget editing option to its context menu.\n\t\t\t\tthis.on('contextMenu', function(evt) {\n\t\t\t\t\tevt.data.image = CKEDITOR.TRISTATE_OFF;\n\n\t\t\t\t\t// Integrate context menu items for link.\n\t\t\t\t\t// Note that widget may be wrapped in a link, which\n\t\t\t\t\t// does not belong to that widget (#11814).\n\t\t\t\t\tif (this.parts.link || this.wrapper.getAscendant('a'))\n\t\t\t\t\t\tevt.data.link = evt.data.unlink = CKEDITOR.TRISTATE_OFF;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#addClass\n\t\t\taddClass(className) {\n\t\t\t\tgetStyleableElement(this).addClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#hasClass\n\t\t\thasClass(className) {\n\t\t\t\treturn getStyleableElement(this).hasClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#removeClass\n\t\t\tremoveClass(className) {\n\t\t\t\tgetStyleableElement(this).removeClass(className);\n\t\t\t},\n\n\t\t\t// Overrides default method to handle internal mutability of ae_dragresize_ie11.\n\t\t\t// @see CKEDITOR.plugins.widget#getClasses\n\t\t\tgetClasses: (function() {\n\t\t\t\tconst classRegex = new RegExp(\n\t\t\t\t\t'^(' +\n\t\t\t\t\t\t[].concat(captionedClass, alignClasses).join('|') +\n\t\t\t\t\t\t')$'\n\t\t\t\t);\n\n\t\t\t\treturn function() {\n\t\t\t\t\tconst classes = this.repository.parseElementClasses(\n\t\t\t\t\t\tgetStyleableElement(this).getAttribute('class')\n\t\t\t\t\t);\n\n\t\t\t\t\t// Neither config.ae_dragresize_ie11_captionedClass nor config.ae_dragresize_ie11_alignClasses\n\t\t\t\t\t// do not belong to style classes.\n\t\t\t\t\tfor (const c in classes) {\n\t\t\t\t\t\tif (classRegex.test(c)) delete classes[c];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t};\n\t\t\t})(),\n\n\t\t\tupcast: upcastWidgetElement(editor),\n\t\t\tdowncast: downcastWidgetElement(editor),\n\n\t\t\tgetLabel() {\n\t\t\t\tconst label = (this.data.alt || '') + ' ' + this.pathName;\n\n\t\t\t\treturn this.editor.lang.widget.label.replace(/%1/, label);\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * A set of Enhanced Image (ae_dragresize_ie11) plugin helpers.\n\t *\n\t * @class\n\t * @singleton\n\t */\n\tCKEDITOR.plugins.ae_dragresize_ie11 = {\n\t\tstateShifter(editor) {\n\t\t\t// Tag name used for centering non-captioned widgets.\n\t\t\tconst doc = editor.document;\n\n\t\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t\tconst captionedClass =\n\t\t\t\teditor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t\tconst editable = editor.editable();\n\n\t\t\t// The order that stateActions get executed. It matters!\n\n\t\t\tconst shiftables = ['hasCaption', 'align', 'link'];\n\n\t\t\t// Atomic procedures, one per state variable.\n\t\t\tconst stateActions = {\n\t\t\t\talign(shift, oldValue, newValue) {\n\t\t\t\t\tconst el = shift.element;\n\n\t\t\t\t\t// Alignment changed.\n\t\t\t\t\tif (\n\t\t\t\t\t\tshift.changed.align ||\n\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t) {\n\t\t\t\t\t\t// No caption in the new state.\n\t\t\t\t\t\tif (!shift.newData.hasCaption) {\n\t\t\t\t\t\t\t// Changed to \"center\" (non-captioned).\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnewValue == 'center' ||\n\t\t\t\t\t\t\t\t(el.$.style.marginLeft === 'auto' &&\n\t\t\t\t\t\t\t\t\tel.$.style.marginRight === 'auto')\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Changed to \"non-center\" from \"center\" while caption removed.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!shift.changed.hasCaption &&\n\t\t\t\t\t\t\t\toldValue == 'center' &&\n\t\t\t\t\t\t\t\tnewValue != 'center'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\t\t\tshift.element = unwrapFromCentering(el);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Alignment remains and \"center\" removed caption.\n\t\t\t\t\telse if (\n\t\t\t\t\t\tnewValue == 'center' &&\n\t\t\t\t\t\tshift.changed.hasCaption &&\n\t\t\t\t\t\t!shift.newData.hasCaption\n\t\t\t\t\t) {\n\t\t\t\t\t\tshift.deflate();\n\t\t\t\t\t\tshift.element = wrapInCentering(editor, el);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Finally set display for figure.\n\t\t\t\t\tif (!alignClasses && el.is('figure')) {\n\t\t\t\t\t\tif (newValue == 'center')\n\t\t\t\t\t\t\tel.setStyle('display', 'inline-block');\n\t\t\t\t\t\telse el.removeStyle('display');\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\thasCaption(shift, oldValue, newValue) {\n\t\t\t\t\t// This action is for real state change only.\n\t\t\t\t\tif (!shift.changed.hasCaption) return;\n\n\t\t\t\t\t// Get <img/> or <a><img/></a> from widget. Note that widget element might itself\n\t\t\t\t\t// be what we're looking for. Also element can be <p style=\"text-align:center\"><a>...</a></p>.\n\t\t\t\t\tlet imageOrLink;\n\t\t\t\t\tif (shift.element.is({img: 1, a: 1}))\n\t\t\t\t\t\timageOrLink = shift.element;\n\t\t\t\t\telse imageOrLink = shift.element.findOne('a,img');\n\n\t\t\t\t\t// Switching hasCaption always destroys the widget.\n\t\t\t\t\tshift.deflate();\n\n\t\t\t\t\t// There was no caption, but the caption is to be added.\n\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t// Create new <figure> from widget template.\n\t\t\t\t\t\tconst figure = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\ttemplateBlock.output({\n\t\t\t\t\t\t\t\tcaptionedClass,\n\t\t\t\t\t\t\t\tcaptionPlaceholder:\n\t\t\t\t\t\t\t\t\teditor.lang.ae_dragresize_ie11\n\t\t\t\t\t\t\t\t\t\t.captionPlaceholder,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tdoc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Replace element with <figure>.\n\t\t\t\t\t\treplaceSafely(figure, shift.element);\n\n\t\t\t\t\t\t// Use old <img/> or <a><img/></a> instead of the one from the template,\n\t\t\t\t\t\t// so we won't lose additional attributes.\n\t\t\t\t\t\timageOrLink.replace(figure.findOne('img'));\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = figure;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The caption was present, but now it's to be removed.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Unwrap <img/> or <a><img/></a> from figure.\n\t\t\t\t\t\timageOrLink.replace(shift.element);\n\n\t\t\t\t\t\t// Update widget's element.\n\t\t\t\t\t\tshift.element = imageOrLink;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tlink(shift, oldValue, newValue) {\n\t\t\t\t\tif (shift.changed.link) {\n\t\t\t\t\t\tconst img = shift.element.is('img')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('img');\n\n\t\t\t\t\t\tconst link = shift.element.is('a')\n\t\t\t\t\t\t\t? shift.element\n\t\t\t\t\t\t\t: shift.element.findOne('a');\n\n\t\t\t\t\t\t// Why deflate:\n\t\t\t\t\t\t// If element is <img/>, it will be wrapped into <a>,\n\t\t\t\t\t\t// which becomes a new widget.element.\n\t\t\t\t\t\t// If element is <a><img/></a>, it will be unlinked\n\t\t\t\t\t\t// so <img/> becomes a new widget.element.\n\n\t\t\t\t\t\tconst needsDeflate =\n\t\t\t\t\t\t\t(shift.element.is('a') && !newValue) ||\n\t\t\t\t\t\t\t(shift.element.is('img') && newValue);\n\n\t\t\t\t\t\tlet newEl;\n\n\t\t\t\t\t\tif (needsDeflate) shift.deflate();\n\n\t\t\t\t\t\t// If unlinked the image, returned element is <img>.\n\t\t\t\t\t\tif (!newValue) newEl = unwrapFromLink(link);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// If linked the image, returned element is <a>.\n\t\t\t\t\t\t\tif (!oldValue)\n\t\t\t\t\t\t\t\tnewEl = wrapInLink(img, shift.newData.link);\n\n\t\t\t\t\t\t\t// Set and remove all attributes associated with this state.\n\t\t\t\t\t\t\tconst attributes = CKEDITOR.plugins.ae_dragresize_ie11.getLinkAttributesGetter()(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnewValue\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (!CKEDITOR.tools.isEmpty(attributes.set))\n\t\t\t\t\t\t\t\t(newEl || link).setAttributes(attributes.set);\n\n\t\t\t\t\t\t\tif (attributes.removed.length)\n\t\t\t\t\t\t\t\t(newEl || link).removeAttributes(\n\t\t\t\t\t\t\t\t\tattributes.removed\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (needsDeflate) shift.element = newEl;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tfunction wrapInCentering(editor, element) {\n\t\t\t\tconst attribsAndStyles = {};\n\n\t\t\t\tif (alignClasses)\n\t\t\t\t\tattribsAndStyles.attributes = {class: alignClasses[1]};\n\t\t\t\telse attribsAndStyles.styles = {'text-align': 'center'};\n\n\t\t\t\t// There's no gentle way to center inline element with CSS, so create p/div\n\t\t\t\t// that wraps widget contents and does the trick either with style or class.\n\t\t\t\tconst center = doc.createElement(\n\t\t\t\t\teditor.activeEnterMode == CKEDITOR.ENTER_P ? 'p' : 'div',\n\t\t\t\t\tattribsAndStyles\n\t\t\t\t);\n\n\t\t\t\t// Replace element with centering wrapper.\n\t\t\t\treplaceSafely(center, element);\n\t\t\t\telement.move(center);\n\n\t\t\t\treturn center;\n\t\t\t}\n\n\t\t\tfunction unwrapFromCentering(element) {\n\t\t\t\tconst imageOrLink = element.findOne('a,img');\n\n\t\t\t\timageOrLink.replace(element);\n\n\t\t\t\treturn imageOrLink;\n\t\t\t}\n\n\t\t\t// Wraps <img/> -> <a><img/></a>.\n\t\t\t// Returns reference to <a>.\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} img\n\t\t\t// @param {Object} linkData\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction wrapInLink(img, linkData) {\n\t\t\t\tconst link = doc.createElement('a', {\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: linkData.url,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tlink.replace(img);\n\t\t\t\timg.move(link);\n\n\t\t\t\treturn link;\n\t\t\t}\n\n\t\t\t// De-wraps <a><img/></a> -> <img/>.\n\t\t\t// Returns the reference to <img/>\n\t\t\t//\n\t\t\t// @param {CKEDITOR.dom.element} link\n\t\t\t// @returns {CKEDITOR.dom.element}\n\t\t\tfunction unwrapFromLink(link) {\n\t\t\t\tconst img = link.findOne('img');\n\n\t\t\t\timg.replace(link);\n\n\t\t\t\treturn img;\n\t\t\t}\n\n\t\t\tfunction replaceSafely(replacing, replaced) {\n\t\t\t\tif (replaced.getParent()) {\n\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\trange.moveToPosition(\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tCKEDITOR.POSITION_BEFORE_START\n\t\t\t\t\t);\n\n\t\t\t\t\t// Remove old element. Do it before insertion to avoid a case when\n\t\t\t\t\t// element is moved from 'replaced' element before it, what creates\n\t\t\t\t\t// a tricky case which insertElementIntorRange does not handle.\n\t\t\t\t\treplaced.remove();\n\n\t\t\t\t\teditable.insertElementIntoRange(replacing, range);\n\t\t\t\t} else {\n\t\t\t\t\treplacing.replace(replaced);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn function(shift) {\n\t\t\t\tlet name;\n\t\t\t\tlet i;\n\n\t\t\t\tshift.changed = {};\n\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tshift.changed[name] = shift.oldData\n\t\t\t\t\t\t? shift.oldData[name] !== shift.newData[name]\n\t\t\t\t\t\t: false;\n\t\t\t\t}\n\n\t\t\t\t// Iterate over possible state variables.\n\t\t\t\tfor (i = 0; i < shiftables.length; i++) {\n\t\t\t\t\tname = shiftables[i];\n\n\t\t\t\t\tstateActions[name](\n\t\t\t\t\t\tshift,\n\t\t\t\t\t\tshift.oldData ? shift.oldData[name] : null,\n\t\t\t\t\t\tshift.newData[name]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tshift.inflate();\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Checks whether the current image ratio matches the natural one\n\t\t * by comparing dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Boolean}\n\t\t */\n\t\tcheckHasNaturalRatio(image) {\n\t\t\tconst $ = image.$;\n\n\t\t\tconst natural = this.getNatural(image);\n\n\t\t\t// The reason for two alternative comparisons is that the rounding can come from\n\t\t\t// both dimensions, e.g. there are two cases:\n\t\t\t// \t1. height is computed as a rounded relation of the real height and the value of width,\n\t\t\t//\t2. width is computed as a rounded relation of the real width and the value of heigh.\n\t\t\treturn (\n\t\t\t\tMath.round(($.clientWidth / natural.width) * natural.height) ==\n\t\t\t\t\t$.clientHeight ||\n\t\t\t\tMath.round(($.clientHeight / natural.height) * natural.width) ==\n\t\t\t\t\t$.clientWidth\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Returns natural dimensions of the image. For modern browsers\n\t\t * it uses natural(Width|Height). For old ones (IE8) it creates\n\t\t * a new image and reads the dimensions.\n\t\t *\n\t\t * @param {CKEDITOR.dom.element} image\n\t\t * @return {Object}\n\t\t */\n\t\tgetNatural(image) {\n\t\t\tlet dimensions;\n\n\t\t\tif (image.$.naturalWidth) {\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: image.$.naturalWidth,\n\t\t\t\t\theight: image.$.naturalHeight,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.src = image.getAttribute('src');\n\n\t\t\t\tdimensions = {\n\t\t\t\t\twidth: img.width,\n\t\t\t\t\theight: img.height,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn dimensions;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute getter function. Default getter comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom getter e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom getter is used, a data model format it produces\n\t\t * must be compatible with {@link CKEDITOR.plugins.link#getLinkAttributes}.\n\t\t *\n\t\t * **Note:** A custom getter must understand the data model format produced by\n\t\t * {@link #getLinkAttributesParser} to work correctly.\n\t\t *\n\t\t * @return {Function} A function that gets (composes) link attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesGetter() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.getLinkAttributes;\n\t\t},\n\n\t\t/**\n\t\t * Returns an attribute parser function. Default parser comes from the Link plugin\n\t\t * and is documented by {@link CKEDITOR.plugins.link#parseLinkAttributes}.\n\t\t *\n\t\t * **Note:** It is possible to override this method and use a custom parser e.g.\n\t\t * in the absence of the Link plugin.\n\t\t *\n\t\t * **Note:** If a custom parser is used, a data model format produced by the parser\n\t\t * must be compatible with {@link #getLinkAttributesGetter}.\n\t\t *\n\t\t * **Note:** If a custom parser is used, it should be compatible with the\n\t\t * {@link CKEDITOR.plugins.link#parseLinkAttributes} data model format. Otherwise the\n\t\t * Link plugin dialog may not be populated correctly with parsed data. However\n\t\t * as long as Enhanced Image is **not** used with the Link plugin dialog, any custom data model\n\t\t * will work, being stored as an internal property of Enhanced Image widget's data only.\n\t\t *\n\t\t * @return {Function} A function that parses attributes.\n\t\t * @since 4.5.5\n\t\t */\n\t\tgetLinkAttributesParser() {\n\t\t\t// #13885\n\t\t\treturn CKEDITOR.plugins.link.parseLinkAttributes;\n\t\t},\n\t};\n\n\tfunction setWrapperAlign(widget, alignClasses) {\n\t\tconst wrapper = widget.wrapper;\n\n\t\tconst align = widget.data.align;\n\n\t\tconst hasCaption = widget.data.hasCaption;\n\n\t\tif (alignClasses) {\n\t\t\t// Remove all align classes first.\n\t\t\tfor (let i = 3; i--; ) wrapper.removeClass(alignClasses[i]);\n\n\t\t\tif (align == 'center') {\n\t\t\t\t// Avoid touching non-captioned, centered widgets because\n\t\t\t\t// they have the class set on the element instead of wrapper:\n\t\t\t\t//\n\t\t\t\t// \t<div class=\"cke_widget_wrapper\">\n\t\t\t\t// \t\t<p class=\"center-class\">\n\t\t\t\t// \t\t\t<img />\n\t\t\t\t// \t\t</p>\n\t\t\t\t// \t</div>\n\t\t\t\tif (hasCaption) {\n\t\t\t\t\twrapper.addClass(alignClasses[1]);\n\t\t\t\t}\n\t\t\t} else if (align != 'none') {\n\t\t\t\twrapper.addClass(alignClasses[alignmentsObj[align]]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (align == 'center') {\n\t\t\t\tif (hasCaption) wrapper.setStyle('text-align', 'center');\n\t\t\t\telse wrapper.removeStyle('text-align');\n\n\t\t\t\twrapper.removeStyle('float');\n\t\t\t} else {\n\t\t\t\tif (align == 'none') wrapper.removeStyle('float');\n\t\t\t\telse wrapper.setStyle('float', align);\n\n\t\t\t\twrapper.removeStyle('text-align');\n\t\t\t}\n\n\t\t\tconst image = wrapper.$.querySelector('img');\n\n\t\t\tconst imageStyles = image.getAttribute('style');\n\n\t\t\tif (imageStyles) {\n\t\t\t\tlet styles = '';\n\n\t\t\t\tconst heightStyles = /(height:.+?;)/.exec(imageStyles);\n\t\t\t\tif (heightStyles) {\n\t\t\t\t\tstyles += heightStyles[0];\n\t\t\t\t}\n\n\t\t\t\tconst widthStyles = /(width:.+?;)/.exec(imageStyles);\n\t\t\t\tif (widthStyles) {\n\t\t\t\t\tstyles += widthStyles[0];\n\t\t\t\t}\n\n\t\t\t\timage.setAttribute('style', styles);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Returns a function that creates widgets from all <img> and\n\t// <figure class=\"{config.ae_dragresize_ie11_captionedClass}\"> elements.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction upcastWidgetElement(editor) {\n\t\tconst isCenterWrapper = centerWrapperChecker(editor);\n\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\t// @param {Object} data\n\t\treturn function(el, data) {\n\t\t\tconst dimensions = {width: 1, height: 1};\n\n\t\t\tconst name = el.name;\n\n\t\t\tlet image;\n\n\t\t\t// #11110 Don't initialize on pasted fake objects.\n\t\t\tif (el.attributes['data-cke-realelement']) return;\n\n\t\t\t// If a center wrapper is found, there are 3 possible cases:\n\t\t\t//\n\t\t\t// 1. <div style=\"text-align:center\"><figure>...</figure></div>.\n\t\t\t//    In this case centering is done with a class set on widget.wrapper.\n\t\t\t//    Simply replace centering wrapper with figure (it's no longer necessary).\n\t\t\t//\n\t\t\t// 2. <p style=\"text-align:center\"><img/></p>.\n\t\t\t//    Nothing to do here: <p> remains for styling purposes.\n\t\t\t//\n\t\t\t// 3. <div style=\"text-align:center\"><img/></div>.\n\t\t\t//    Nothing to do here (2.) but that case is only possible in enterMode different\n\t\t\t//    than ENTER_P.\n\t\t\tif (isCenterWrapper(el)) {\n\t\t\t\tif (name == 'div') {\n\t\t\t\t\tconst figure = el.getFirst('figure');\n\n\t\t\t\t\t// Case #1.\n\t\t\t\t\tif (figure) {\n\t\t\t\t\t\tel.replaceWith(figure);\n\t\t\t\t\t\tel = figure;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Cases #2 and #3 (handled transparently)\n\n\t\t\t\t// If there's a centering wrapper, save it in data.\n\t\t\t\tdata.align = 'center';\n\n\t\t\t\t// Image can be wrapped in link <a><img/></a>.\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\t\t\t}\n\n\t\t\t// No center wrapper has been found.\n\t\t\telse if (name == 'figure' && el.hasClass(captionedClass)) {\n\t\t\t\timage = el.getFirst('img') || el.getFirst('a').getFirst('img');\n\n\t\t\t\t// Upcast linked image like <a><img/></a>.\n\t\t\t} else if (isLinkedOrStandaloneImage(el)) {\n\t\t\t\timage = el.name == 'a' ? el.children[0] : el;\n\t\t\t}\n\n\t\t\tif (!image) return;\n\n\t\t\t// If there's an image, then cool, we got a widget.\n\t\t\t// Now just remove dimension attributes expressed with %.\n\t\t\tfor (const d in dimensions) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(dimensions, d)) {\n\t\t\t\t\tconst dimension = image.attributes[d];\n\t\t\t\t\tif (dimension && dimension.match(regexPercent))\n\t\t\t\t\t\tdelete image.attributes[d];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function which transforms the widget to the external format\n\t// according to the current configuration.\n\t//\n\t// @param {CKEDITOR.editor}\n\tfunction downcastWidgetElement(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\t// @param {CKEDITOR.htmlParser.element} el\n\t\treturn function(el) {\n\t\t\t// In case of <a><img/></a>, <img/> is the element to hold\n\t\t\t// inline styles or classes (ae_dragresize_ie11_alignClasses).\n\t\t\tconst attrsHolder = el.name == 'a' ? el.getFirst() : el;\n\n\t\t\tconst attrs = attrsHolder.attributes;\n\n\t\t\tconst align = this.data.align;\n\n\t\t\t// De-wrap the image from resize handle wrapper.\n\t\t\t// Only block widgets have one.\n\t\t\tif (!this.inline) {\n\t\t\t\tconst resizeWrapper = el.getFirst('span');\n\n\t\t\t\tif (resizeWrapper)\n\t\t\t\t\tresizeWrapper.replaceWith(\n\t\t\t\t\t\tresizeWrapper.getFirst({img: 1, a: 1})\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (align && align != 'none') {\n\t\t\t\tconst styles = CKEDITOR.tools.parseCssText(attrs.style || '');\n\n\t\t\t\t// When the widget is captioned (<figure>) and internally centering is done\n\t\t\t\t// with widget's wrapper style/class, in the external data representation,\n\t\t\t\t// <figure> must be wrapped with an element holding an style/class:\n\t\t\t\t//\n\t\t\t\t// \t<div style=\"text-align:center\">\n\t\t\t\t// \t\t<figure class=\"image\" style=\"display:inline-block\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t// or\n\t\t\t\t// \t<div class=\"some-center-class\">\n\t\t\t\t// \t\t<figure class=\"image\">...</figure>\n\t\t\t\t// \t</div>\n\t\t\t\t//\n\t\t\t\tif (align == 'center' && el.name == 'figure') {\n\t\t\t\t\tel = el.wrapWith(\n\t\t\t\t\t\tnew CKEDITOR.htmlParser.element(\n\t\t\t\t\t\t\t'div',\n\t\t\t\t\t\t\talignClasses\n\t\t\t\t\t\t\t\t? {class: alignClasses[1]}\n\t\t\t\t\t\t\t\t: {style: 'text-align:center'}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// If left/right, add float style to the downcasted element.\n\t\t\t\telse if (align in {left: 1, right: 1}) {\n\t\t\t\t\tif (alignClasses)\n\t\t\t\t\t\tattrsHolder.addClass(\n\t\t\t\t\t\t\talignClasses[alignmentsObj[align]]\n\t\t\t\t\t\t);\n\t\t\t\t\telse styles['float'] = align;\n\t\t\t\t}\n\n\t\t\t\t// Update element styles.\n\t\t\t\tif (!alignClasses && !CKEDITOR.tools.isEmpty(styles))\n\t\t\t\t\tattrs.style = CKEDITOR.tools.writeCssText(styles) + ';';\n\t\t\t}\n\n\t\t\treturn el;\n\t\t};\n\t}\n\n\t// Returns a function that checks if an element is a centering wrapper.\n\t//\n\t// @param {CKEDITOR.editor} editor\n\t// @returns {Function}\n\tfunction centerWrapperChecker(editor) {\n\t\tconst captionedClass = editor.config.ae_dragresize_ie11_captionedClass;\n\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst validChildren = {figure: 1, a: 1, img: 1};\n\n\t\treturn function(el) {\n\t\t\t// Wrapper must be either <div> or <p>.\n\t\t\tif (!(el.name in {div: 1, p: 1})) return false;\n\n\t\t\tconst children = el.children;\n\n\t\t\t// Centering wrapper can have only one child.\n\t\t\tif (children.length !== 1) return false;\n\n\t\t\tconst child = children[0];\n\n\t\t\t// Only <figure> or <img /> can be first (only) child of centering wrapper,\n\t\t\t// regardless of its type.\n\t\t\tif (!(child.name in validChildren)) return false;\n\n\t\t\t// If centering wrapper is <p>, only <img /> can be the child.\n\t\t\t//   <p style=\"text-align:center\"><img /></p>\n\t\t\tif (el.name == 'p') {\n\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t}\n\t\t\t// Centering <div> can hold <img/> or <figure>, depending on enterMode.\n\t\t\telse {\n\t\t\t\t// If a <figure> is the first (only) child, it must have a class.\n\t\t\t\t//   <div style=\"text-align:center\"><figure>...</figure><div>\n\t\t\t\tif (child.name == 'figure') {\n\t\t\t\t\tif (!child.hasClass(captionedClass)) return false;\n\t\t\t\t} else {\n\t\t\t\t\t// Centering <div> can hold <img/> or <a><img/></a> only when enterMode\n\t\t\t\t\t// is ENTER_(BR|DIV).\n\t\t\t\t\t//   <div style=\"text-align:center\"><img /></div>\n\t\t\t\t\t//   <div style=\"text-align:center\"><a><img /></a></div>\n\t\t\t\t\tif (editor.enterMode == CKEDITOR.ENTER_P) return false;\n\n\t\t\t\t\t// Regardless of enterMode, a child which is not <figure> must be\n\t\t\t\t\t// either <img/> or <a><img/></a>.\n\t\t\t\t\tif (!isLinkedOrStandaloneImage(child)) return false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Centering wrapper got to be... centering. If ae_dragresize_ie11_alignClasses are defined,\n\t\t\t// check for centering class. Otherwise, check the style.\n\t\t\tif (\n\t\t\t\talignClasses\n\t\t\t\t\t? el.hasClass(alignClasses[1])\n\t\t\t\t\t: CKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\tel.attributes.style || '',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t  )['text-align'] == 'center'\n\t\t\t)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t};\n\t}\n\n\t// Checks whether element is <img/> or <a><img/></a>.\n\t//\n\t// @param {CKEDITOR.htmlParser.element}\n\tfunction isLinkedOrStandaloneImage(el) {\n\t\tif (el.name == 'img') return true;\n\t\telse if (el.name == 'a')\n\t\t\treturn el.children.length == 1 && el.getFirst('img');\n\n\t\treturn false;\n\t}\n\n\t// Sets width and height of the widget image according to current widget data.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setDimensions(widget) {\n\t\tconst data = widget.data;\n\n\t\tconst dimensions = {width: data.width, height: data.height};\n\n\t\tconst image = widget.parts.image;\n\n\t\tfor (const d in dimensions) {\n\t\t\tif (dimensions[d]) image.setAttribute(d, dimensions[d]);\n\t\t\telse image.removeAttribute(d);\n\t\t}\n\t}\n\n\t// Defines all features related to drag-driven image resizing.\n\t//\n\t// @param {CKEDITOR.plugins.widget} widget\n\tfunction setupResizer(widget) {\n\t\tconst editor = widget.editor;\n\n\t\tconst editable = editor.editable();\n\n\t\tconst doc = editor.document;\n\n\t\t// Store the resizer in a widget for testing (#11004).\n\n\t\tconst resizer = (widget.resizer = doc.createElement('span'));\n\n\t\t// Create resizer for each corner (NE, NW, SE, SW)\n\n\t\tconst resizerNE = doc.createElement('span');\n\n\t\tconst resizerNW = doc.createElement('span');\n\n\t\tconst resizerSE = doc.createElement('span');\n\n\t\tconst resizerSW = doc.createElement('span');\n\n\t\tresizerNE.addClass('cke_image_resizer');\n\t\tresizerNE.addClass('cke_image_resizer_ne');\n\n\t\tresizerNW.addClass('cke_image_resizer');\n\t\tresizerNW.addClass('cke_image_resizer_nw');\n\n\t\tresizerSE.addClass('cke_image_resizer');\n\t\tresizerSE.addClass('cke_image_resizer_se');\n\n\t\tresizerSW.addClass('cke_image_resizer');\n\t\tresizerSW.addClass('cke_image_resizer_sw');\n\n\t\t// Add each directional resizer as a child of resizer\n\t\tresizer.append(resizerNE);\n\t\tresizer.append(resizerNW);\n\t\tresizer.append(resizerSE);\n\t\tresizer.append(resizerSW);\n\n\t\t// resizer.setAttribute( 'title', editor.lang.ae_dragresize_ie11.resizer );\n\t\tresizer.append(new CKEDITOR.dom.text('\\u200b', doc));\n\n\t\t// Inline widgets don't need a resizer wrapper as an image spans the entire widget.\n\t\tif (!widget.inline) {\n\t\t\tconst imageOrLink = widget.parts.link || widget.parts.image;\n\n\t\t\tconst oldResizeWrapper = imageOrLink.getParent();\n\n\t\t\tconst resizeWrapper = doc.createElement('span');\n\n\t\t\tresizeWrapper.addClass('cke_image_resizer_wrapper');\n\t\t\tresizeWrapper.append(imageOrLink);\n\t\t\tresizeWrapper.append(resizer);\n\t\t\twidget.element.append(resizeWrapper, true);\n\n\t\t\t// Remove the old wrapper which could came from e.g. pasted HTML\n\t\t\t// and which could be corrupted (e.g. resizer span has been lost).\n\t\t\tif (oldResizeWrapper.is('span')) oldResizeWrapper.remove();\n\t\t} else {\n\t\t\twidget.wrapper.append(resizer);\n\t\t}\n\n\t\t// Calculate values of size variables and mouse offsets.\n\t\tresizer.on('mousedown', evt => {\n\t\t\tconst image = widget.parts.image;\n\n\t\t\t// The x-coordinate of the mouse relative to the screen\n\t\t\t// when button gets pressed.\n\n\t\t\tconst startX = evt.data.$.screenX;\n\n\t\t\tconst startY = evt.data.$.screenY;\n\n\t\t\t// The initial dimensions and aspect ratio of the image.\n\n\t\t\tconst startWidth = image.$.clientWidth;\n\n\t\t\tconst startHeight = image.$.clientHeight;\n\n\t\t\tconst ratio = startWidth / startHeight;\n\n\t\t\tconst listeners = [];\n\n\t\t\tconst target = evt.data.getTarget();\n\n\t\t\tlet factorX;\n\n\t\t\tlet factorY;\n\n\t\t\tlet moveDiffX;\n\n\t\t\tlet moveDiffY;\n\n\t\t\tlet nativeEvt;\n\n\t\t\tlet newHeight;\n\n\t\t\tlet newWidth;\n\n\t\t\tlet updateData;\n\n\t\t\t// \"factorX\" and \"factorY\" can be either 1 or -1. I.e.: We need to\n\t\t\t// add/subtract the difference to get proper width, etc. Without \"factorX\"\n\t\t\t// and \"factorY\", resizer starts working the opposite way.\n\t\t\tif (target.hasClass('cke_image_resizer_ne')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_nw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = 1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_se')) {\n\t\t\t\tfactorX = 1;\n\t\t\t\tfactorY = -1;\n\t\t\t} else if (target.hasClass('cke_image_resizer_sw')) {\n\t\t\t\tfactorX = -1;\n\t\t\t\tfactorY = -1;\n\t\t\t}\n\n\t\t\t// A class applied to editable during resizing.\n\t\t\tconst cursorClass =\n\t\t\t\t'cke_image_' +\n\t\t\t\t(!~factorY ? 's' : 'n') +\n\t\t\t\t(!~factorX ? 'w' : 'e');\n\n\t\t\t// Save the undo snapshot first: before resizing.\n\t\t\teditor.fire('saveSnapshot');\n\n\t\t\t// Mousemove listeners are removed on mouseup.\n\t\t\tattachToDocuments('mousemove', onMouseMove, listeners);\n\n\t\t\t// Clean up the mousemove listener. Update widget data if valid.\n\t\t\tattachToDocuments('mouseup', onMouseUp, listeners);\n\n\t\t\t// The entire editable will have the special cursor while resizing goes on.\n\t\t\teditable.addClass(cursorClass);\n\n\t\t\t// This is to always keep the resizer element visible while resizing.\n\t\t\tresizer.addClass('cke_image_resizing');\n\n\t\t\t// Attaches an event to a global document if inline editor.\n\t\t\t// Additionally, if classic (`iframe`-based) editor, also attaches the same event to `iframe`'s document.\n\t\t\tfunction attachToDocuments(name, callback, collection) {\n\t\t\t\tconst globalDoc = CKEDITOR.document;\n\n\t\t\t\tconst listeners = [];\n\n\t\t\t\tif (!doc.equals(globalDoc))\n\t\t\t\t\tlisteners.push(globalDoc.on(name, callback));\n\n\t\t\t\tlisteners.push(doc.on(name, callback));\n\n\t\t\t\tif (collection) {\n\t\t\t\t\tfor (let i = listeners.length; i--; )\n\t\t\t\t\t\tcollection.push(listeners.pop());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Calculate width first, and then adjust height, preserving ratio.\n\t\t\tfunction adjustToX() {\n\t\t\t\tnewWidth = startWidth + factorX * moveDiffX;\n\t\t\t\tnewHeight = Math.round(newWidth / ratio);\n\t\t\t}\n\n\t\t\t// Calculate height first, and then adjust width, preserving ratio.\n\t\t\tfunction adjustToY() {\n\t\t\t\tnewHeight = startHeight + factorY * moveDiffY;\n\t\t\t\tnewWidth = Math.round(newHeight * ratio);\n\t\t\t}\n\n\t\t\t// This is how variables refer to the geometry.\n\t\t\t// Note: x corresponds to moveOffset, this is the position of mouse\n\t\t\t// Note: o corresponds to [startX, startY].\n\t\t\t//\n\t\t\t// \t+--------------+--------------+\n\t\t\t// \t|              |              |\n\t\t\t// \t|      I       |      II      |\n\t\t\t// \t|              |              |\n\t\t\t// \t+------------- o -------------+ _ _ _\n\t\t\t// \t|              |              |      ^\n\t\t\t// \t|      VI      |     III      |      | moveDiffY\n\t\t\t// \t|              |         x _ _ _ _ _ v\n\t\t\t// \t+--------------+---------|----+\n\t\t\t// \t               |         |\n\t\t\t// \t                <------->\n\t\t\t// \t                moveDiffX\n\t\t\tfunction onMouseMove(evt) {\n\t\t\t\tnativeEvt = evt.data.$;\n\n\t\t\t\t// This is how far the mouse is from the point the button was pressed.\n\t\t\t\tmoveDiffX = nativeEvt.screenX - startX;\n\t\t\t\tmoveDiffY = startY - nativeEvt.screenY;\n\n\t\t\t\t// Resize with NE, SE drag handles\n\t\t\t\tif (factorX == 1) {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Resize with NW, SW drag handles\n\t\t\t\telse {\n\t\t\t\t\tif (moveDiffX <= 0) {\n\t\t\t\t\t\tadjustToX();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustToY();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Don't update attributes if less than 10.\n\t\t\t\t// This is to prevent images to visually disappear.\n\t\t\t\tif (newWidth >= 15 && newHeight >= 15) {\n\t\t\t\t\timage.$.style.width = newWidth + 'px';\n\t\t\t\t\timage.$.style.height = newHeight + 'px';\n\n\t\t\t\t\tupdateData = true;\n\t\t\t\t} else {\n\t\t\t\t\tupdateData = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onMouseUp() {\n\t\t\t\tlet l;\n\n\t\t\t\twhile ((l = listeners.pop())) l.removeListener();\n\n\t\t\t\t// Restore default cursor by removing special class.\n\t\t\t\teditable.removeClass(cursorClass);\n\n\t\t\t\t// This is to bring back the regular behaviour of the resizer.\n\t\t\t\tresizer.removeClass('cke_image_resizing');\n\n\t\t\t\tif (updateData) {\n\t\t\t\t\twidget.setData({\n\t\t\t\t\t\theight: newHeight,\n\t\t\t\t\t\twidth: newWidth,\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save another undo snapshot: after resizing.\n\t\t\t\t\teditor.fire('saveSnapshot');\n\t\t\t\t}\n\n\t\t\t\t// Don't update data twice or more.\n\t\t\t\tupdateData = false;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeWidgetAlignment = function(widget, imageAlignment) {\n\t\tif (imageAlignment === 'left' || imageAlignment === 'right') {\n\t\t\twidget.wrapper.removeStyle('float');\n\t\t} else if (imageAlignment === 'center') {\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t\twidget.editor.execCommand('justifyleft');\n\t\t}\n\t};\n\n\t// Integrates widget alignment setting with justify\n\t// plugin's commands (execution and refreshment).\n\t// @param {CKEDITOR.editor} editor\n\t// @param {String} value 'left', 'right', 'center' or 'block'\n\tfunction alignCommandIntegrator(editor) {\n\t\tconst execCallbacks = [];\n\n\t\tlet enabled;\n\n\t\treturn function(value) {\n\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t// Most likely, the justify plugin isn't loaded.\n\t\t\tif (!command) return;\n\n\t\t\t// This command will be manually refreshed along with\n\t\t\t// other commands after exec.\n\t\t\texecCallbacks.push(() => {\n\t\t\t\tcommand.refresh(editor, editor.elementPath());\n\t\t\t});\n\n\t\t\tif (value in {right: 1, left: 1, center: 1}) {\n\t\t\t\tcommand.on('exec', evt => {\n\t\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\t\tif (widget) {\n\t\t\t\t\t\tif (widget.data.align === value) {\n\t\t\t\t\t\t\tremoveWidgetAlignment(widget, value);\n\n\t\t\t\t\t\t\tdelete widget.data.align;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twidget.setData('align', value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Once the widget changed its align, all the align commands\n\t\t\t\t\t\t// must be refreshed: the event is to be cancelled.\n\t\t\t\t\t\tfor (let i = execCallbacks.length; i--; )\n\t\t\t\t\t\t\texecCallbacks[i]();\n\n\t\t\t\t\t\tevt.cancel();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcommand.on('refresh', function(evt) {\n\t\t\t\tconst widget = getFocusedWidget(editor);\n\n\t\t\t\tconst allowed = {right: 1, left: 1, center: 1};\n\n\t\t\t\tif (!widget) return;\n\n\t\t\t\t// Cache \"enabled\" on first use. This is because filter#checkFeature may\n\t\t\t\t// not be available during plugin's afterInit in the future — a moment when\n\t\t\t\t// alignCommandIntegrator is called.\n\t\t\t\tif (enabled === undefined)\n\t\t\t\t\tenabled = editor.filter.checkFeature(\n\t\t\t\t\t\teditor.widgets.registered.image.features.align\n\t\t\t\t\t);\n\n\t\t\t\t// Don't allow justify commands when widget alignment is disabled (#11004).\n\t\t\t\tif (!enabled) this.setState(CKEDITOR.TRISTATE_DISABLED);\n\t\t\t\telse {\n\t\t\t\t\tthis.setState(\n\t\t\t\t\t\twidget.data.align == value\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t: value in allowed\n\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tevt.cancel();\n\t\t\t});\n\t\t};\n\t}\n\n\t// Returns the focused widget, if of the type specific for this plugin.\n\t// If no widget is focused, `null` is returned.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {CKEDITOR.plugins.widget}\n\tfunction getFocusedWidget(editor) {\n\t\tconst widget = editor.widgets.focused;\n\n\t\tif (widget && widget.name == 'image') return widget;\n\n\t\treturn null;\n\t}\n\n\t// Returns a set of widget allowedContent rules, depending\n\t// on configurations like config#ae_dragresize_ie11_alignClasses or\n\t// config#ae_dragresize_ie11_captionedClass.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetAllowedContent(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst rules = {\n\t\t\t// Widget may need <div> or <p> centering wrapper.\n\t\t\tdiv: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\tp: {\n\t\t\t\tmatch: centerWrapperChecker(editor),\n\t\t\t},\n\t\t\timg: {\n\t\t\t\tattributes: '!src,alt,width,height',\n\t\t\t},\n\t\t\tfigure: {\n\t\t\t\tclasses: '!' + editor.config.ae_dragresize_ie11_captionedClass,\n\t\t\t},\n\t\t\tfigcaption: true,\n\t\t};\n\n\t\tif (alignClasses) {\n\t\t\t// Centering class from the config.\n\t\t\trules.div.classes = alignClasses[1];\n\t\t\trules.p.classes = rules.div.classes;\n\n\t\t\t// Left/right classes from the config.\n\t\t\trules.img.classes = alignClasses[0] + ',' + alignClasses[2];\n\t\t\trules.figure.classes += ',' + rules.img.classes;\n\t\t} else {\n\t\t\t// Centering with text-align.\n\t\t\trules.div.styles = 'text-align';\n\t\t\trules.p.styles = 'text-align';\n\n\t\t\trules.img.styles = 'float';\n\t\t\trules.figure.styles = 'float,display';\n\t\t}\n\n\t\treturn rules;\n\t}\n\n\t// Returns a set of widget feature rules, depending\n\t// on editor configuration. Note that the following may not cover\n\t// all the possible cases since requiredContent supports a single\n\t// tag only.\n\t//\n\t// @param {CKEDITOR.editor}\n\t// @returns {Object}\n\tfunction getWidgetFeatures(editor) {\n\t\tconst alignClasses = editor.config.ae_dragresize_ie11_alignClasses;\n\n\t\tconst features = {\n\t\t\tdimension: {\n\t\t\t\trequiredContent: 'img[width,height]',\n\t\t\t},\n\t\t\talign: {\n\t\t\t\trequiredContent:\n\t\t\t\t\t'img' +\n\t\t\t\t\t(alignClasses ? '(' + alignClasses[0] + ')' : '{float}'),\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\trequiredContent: 'figcaption',\n\t\t\t},\n\t\t};\n\n\t\treturn features;\n\t}\n\n\t// Returns element which is styled, considering current\n\t// state of the widget.\n\t//\n\t// @see CKEDITOR.plugins.widget#applyStyle\n\t// @param {CKEDITOR.plugins.widget} widget\n\t// @returns {CKEDITOR.dom.element}\n\tfunction getStyleableElement(widget) {\n\t\treturn widget.data.hasCaption ? widget.element : widget.parts.image;\n\t}\n})();\n\n/**\n * A CSS class applied to the `<figure>` element of a captioned image.\n *\n * Read more in the [documentation](#!/guide/dev_captionedimage) and see the\n * [SDK sample](http://sdk.ckeditor.com/samples/captionedimage.html).\n *\n *\t\t// Changes the class to \"captionedImage\".\n *\t\tconfig.ae_dragresize_ie11_captionedClass = 'captionedImage';\n *\n * @cfg {String} [ae_dragresize_ie11_captionedClass='image']\n * @member CKEDITOR.config\n */\nCKEDITOR.config.ae_dragresize_ie11_captionedClass = 'image';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport {HIGH_PRIORITY} from './priorities';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_embed')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tconst REGEX_DEFAULT_LINK = /<a href=/;\n\n\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL =\n\t\t'http://alloy.iframe.ly/api/oembed?url={url}&callback={callback}';\n\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL =\n\t\t'<div data-ae-embed-url=\"{url}\"></div>';\n\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL = '<a href=\"{url}\">{url}</a>';\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects using an oembed\n\t * service. By default, and for demoing purposes only, the oembed service is hosted in iframe.ly\n\t * at //alloy.iframe.ly/api/oembed?url={url}&callback={callback}. Note this should be changed to\n\t * a self-hosted or paid service in production environments. Access to the alloy.iframe.ly endpoint\n\t * may be restricted per domain due to significant traffic.\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.ae_embed\n\t */\n\tCKEDITOR.plugins.add('ae_embed', {\n\t\trequires: 'widget',\n\t\tinit(editor) {\n\t\t\tconst AE_EMBED_URL_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedUrlTemplate ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_URL_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\t);\n\t\t\tconst AE_EMBED_DEFAULT_LINK_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedLinkDefaultTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_AE_EMBED_DEFAULT_LINK_TPL\n\t\t\t);\n\n\t\t\t// Default function to upcast DOM elements to embed widgets.\n\t\t\t// It matches CKEDITOR.DEFAULT_AE_EMBED_WIDGET_TPL\n\t\t\tconst defaultEmbedWidgetUpcastFn = function(element, data) {\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-ae-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-ae-embed-url'];\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Create a embedUrl command that can be invoked to easily embed media URLs\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec(editor, data) {\n\t\t\t\t\teditor.insertHtml(\n\t\t\t\t\t\tAE_EMBED_WIDGET_TPL.output({\n\t\t\t\t\t\t\turl: data.url,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Create a widget to properly handle embed operations\n\t\t\teditor.widgets.add('ae_embed', {\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-ae-embed-url]',\n\n\t\t\t\t/**\n\t\t\t\t * Listener to be executed every time the widget's data changes. It takes care of\n\t\t\t\t * requesting the embed object to the configured oembed service and render it in\n\t\t\t\t * the editor\n\t\t\t\t *\n\t\t\t\t * @method data\n\t\t\t\t * @param {event} event Data change event\n\t\t\t\t */\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst widget = this;\n\n\t\t\t\t\tconst url = event.data.url;\n\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tCKEDITOR.tools.jsonp(\n\t\t\t\t\t\t\tAE_EMBED_URL_TPL,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\turl: encodeURIComponent(url),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tresponse => {\n\t\t\t\t\t\t\t\tif (response.html) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tREGEX_DEFAULT_LINK.test(response.html)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\twidget.element.setHtml(response.html);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_msg => {\n\t\t\t\t\t\t\t\twidget.createATag(url);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tcreateATag(url) {\n\t\t\t\t\tthis.editor.execCommand('undo');\n\n\t\t\t\t\tconst aTagHtml = AE_EMBED_DEFAULT_LINK_TPL.output({\n\t\t\t\t\t\turl,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.editor.insertHtml(aTagHtml);\n\t\t\t\t\tthis.editor.fire('actionPerformed', this);\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Function used to upcast an element to ae_embed widgets.\n\t\t\t\t *\n\t\t\t\t * @method upcast\n\t\t\t\t * @param {CKEDITOR.htmlParser.element} element The element to be checked\n\t\t\t\t * @param {Object} data The object that will be passed to the widget\n\t\t\t\t */\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Add a listener to handle paste events and turn links into embed objects\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\teditor.on(\n\t\t\t\t\t'paste',\n\t\t\t\t\tevent => {\n\t\t\t\t\t\tconst link = event.data.dataValue;\n\n\t\t\t\t\t\tif (REGEX_HTTP.test(link)) {\n\t\t\t\t\t\t\tevent.stop();\n\n\t\t\t\t\t\t\teditor.execCommand('embedUrl', {\n\t\t\t\t\t\t\t\turl: event.data.dataValue,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t// Make sure we run before autolink's paste handler,\n\t\t\t\t\t// otherwise the link will be turned into an anchor and our\n\t\t\t\t\t// REGEX_HTTP test will fail.\n\t\t\t\t\tHIGH_PRIORITY\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Add a listener to handle selection change events and properly detect editor\n\t\t\t// interactions on the widgets without messing with widget native selection\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"ae_embed\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Add a filter to skip filtering widget elements\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-ae-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * Priorities that can be used to control the order in which event handlers run.\n *\n * @see https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_event.html#method-on\n */\nexport const DEFAULT_PRIORITY = 10;\nexport const HIGH_PRIORITY = 5;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Resizer from './Resizer.es';\n\nif (!CKEDITOR.plugins.get('embedurl')) {\n\tconst REGEX_HTTP = /^https?/;\n\n\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL =\n\t\t'<div data-embed-url=\"{url}\" class=\"embed-responsive embed-responsive-16by9\">{content}<div class=\"embed-help-message\">{helpMessageIcon}<span> {helpMessage}</span></div></div><br>';\n\n\t/**\n\t * Enum for supported embed alignments\n\t * @type {Object}\n\t */\n\n\tconst EMBED_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported embed alignments\n\t * @type {Array}\n\t */\n\n\tconst ALIGN_VALUES = [\n\t\tEMBED_ALIGNMENT.CENTER,\n\t\tEMBED_ALIGNMENT.LEFT,\n\t\tEMBED_ALIGNMENT.RIGHT,\n\t];\n\n\t/**\n\t * Necessary styles for the center alignment\n\t * @type {Array.<Object>}\n\t */\n\n\tconst CENTERED_EMBED_STYLE = [\n\t\t{\n\t\t\tname: 'display',\n\t\t\tvalue: 'block',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-left',\n\t\t\tvalue: 'auto',\n\t\t},\n\t\t{\n\t\t\tname: 'margin-right',\n\t\t\tvalue: 'auto',\n\t\t},\n\t];\n\n\t/**\n\t * Retrieves the alignment value of an embed element.\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @return {String} The alignment value\n\t */\n\n\tconst getEmbedAlignment = function(embed) {\n\t\tlet embedAlignment = embed.getStyle('float');\n\n\t\tif (\n\t\t\t!embedAlignment ||\n\t\t\tembedAlignment === 'inherit' ||\n\t\t\tembedAlignment === 'none'\n\t\t) {\n\t\t\tembedAlignment = embed.getAttribute('align');\n\t\t}\n\n\t\tif (!embedAlignment) {\n\t\t\tconst centeredEmbed = CENTERED_EMBED_STYLE.every(style => {\n\t\t\t\tlet styleCheck = embed.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(\n\t\t\t\t\t\tvendorPrefix =>\n\t\t\t\t\t\t\tembed.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tembedAlignment = centeredEmbed ? EMBED_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\treturn embedAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be removed\n\t */\n\n\tconst removeEmbedAlignment = function(embed, embedAlignment) {\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.removeStyle('float');\n\n\t\t\tif (embedAlignment === getEmbedAlignment(embed)) {\n\t\t\t\tembed.removeAttribute('align');\n\t\t\t}\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.removeStyle(vendorPrefix + style.name)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an embed\n\t *\n\t * @param {CKEDITOR.dom.element} embed The embed element\n\t * @param {String} embedAlignment The embed alignment value to be set\n\t */\n\n\tconst setEmbedAlignment = function(embed, embedAlignment) {\n\t\tremoveEmbedAlignment(embed, getEmbedAlignment(embed));\n\n\t\tif (\n\t\t\tembedAlignment === EMBED_ALIGNMENT.LEFT ||\n\t\t\tembedAlignment === EMBED_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tembed.setStyle('float', embedAlignment);\n\t\t} else if (embedAlignment === EMBED_ALIGNMENT.CENTER) {\n\t\t\tCENTERED_EMBED_STYLE.forEach(style => {\n\t\t\t\tembed.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix =>\n\t\t\t\t\t\tembed.setStyle(vendorPrefix + style.name, style.value)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tconst getSelectedElement = function(editor) {\n\t\tconst result = {\n\t\t\talignment: null,\n\t\t\telement: null,\n\t\t};\n\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (\n\t\t\t\tselectedElement &&\n\t\t\t\tselectedElement.getAttribute('data-cke-widget-wrapper')\n\t\t\t) {\n\t\t\t\tresult.alignment = getEmbedAlignment(selectedElement);\n\t\t\t\tresult.element = selectedElement;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconst resizeElement = function(el, width, height) {\n\t\tconst wrapperElement = el.parentElement;\n\n\t\tif (wrapperElement && width > 0 && height > 0) {\n\t\t\tconst rect = wrapperElement.getBoundingClientRect();\n\n\t\t\tconst pwidth =\n\t\t\t\twidth >= rect.width\n\t\t\t\t\t? 100\n\t\t\t\t\t: Math.floor((width / rect.width) * 100);\n\t\t\tconst style = `width:${pwidth}%;`;\n\n\t\t\twrapperElement.setAttribute('style', style);\n\n\t\t\tconst widgetElement = wrapperElement.querySelector(\n\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t);\n\n\t\t\tif (widgetElement) {\n\t\t\t\tconst styles =\n\t\t\t\t\tJSON.parse(widgetElement.getAttribute('data-styles')) || {};\n\n\t\t\t\tstyles.width = `${width}px`;\n\t\t\t\tstyles.height = `${height}px`;\n\n\t\t\t\twidgetElement.setAttribute(\n\t\t\t\t\t'data-styles',\n\t\t\t\t\tJSON.stringify(styles)\n\t\t\t\t);\n\n\t\t\t\tconst iframeElement = widgetElement.querySelector('iframe');\n\n\t\t\t\tif (iframeElement) {\n\t\t\t\t\tiframeElement.setAttribute('width', width);\n\t\t\t\t\tiframeElement.setAttribute('height', height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconst selectWidget = function(editor) {\n\t\tsetTimeout(() => {\n\t\t\tconst selection = editor.getSelection();\n\n\t\t\tif (selection) {\n\t\t\t\tconst wrapperElement = selection.root.find(\n\t\t\t\t\t'[data-cke-widget-wrapper]'\n\t\t\t\t);\n\n\t\t\t\tif (wrapperElement) {\n\t\t\t\t\tconst elementList = wrapperElement.$;\n\t\t\t\t\tif (elementList.length > 0) {\n\t\t\t\t\t\tconst lastElement = new CKEDITOR.dom.element(\n\t\t\t\t\t\t\telementList[elementList.length - 1]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst imageElement = lastElement.findOne('img');\n\t\t\t\t\t\tconst widgetElement = lastElement.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement && widgetElement) {\n\t\t\t\t\t\t\tconst range = editor.createRange();\n\n\t\t\t\t\t\t\trange.setStart(widgetElement, 0);\n\t\t\t\t\t\t\trange.setEnd(imageElement, 1);\n\n\t\t\t\t\t\t\tselection.selectRanges([range]);\n\t\t\t\t\t\t\tselection.selectElement(lastElement);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, 0);\n\t};\n\n\tlet currentAlignment = null;\n\tlet currentElement = null;\n\tlet resizer = null;\n\n\t/**\n\t * CKEditor plugin which adds the infrastructure to embed urls as media objects\n\t *\n\t * This plugin adds an `embedUrl` command that can be used to easily embed a URL and transform it\n\t * to an embedded content.\n\t *\n\t * @class CKEDITOR.plugins.embedurl\n\t */\n\n\tCKEDITOR.plugins.add('embedurl', {\n\t\trequires: 'widget',\n\n\t\tinit: editor => {\n\t\t\tconst LFR_EMBED_WIDGET_TPL = new CKEDITOR.template(\n\t\t\t\teditor.config.embedWidgetTpl ||\n\t\t\t\t\tCKEDITOR.DEFAULT_LFR_EMBED_WIDGET_TPL\n\t\t\t);\n\n\t\t\tlet providers = editor.config.embedProviders || [];\n\n\t\t\tproviders = providers.map(provider => {\n\t\t\t\treturn {\n\t\t\t\t\tid: provider.id,\n\t\t\t\t\ttpl: new CKEDITOR.template(\n\t\t\t\t\t\t`<div data-embed-id=\"{embedId}\">${provider.tpl}</div>`\n\t\t\t\t\t),\n\t\t\t\t\ttype: provider.type,\n\t\t\t\t\turlSchemes: provider.urlSchemes.map(\n\t\t\t\t\t\tscheme => new RegExp(scheme)\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst generateEmbedContent = (url, content) => {\n\t\t\t\treturn LFR_EMBED_WIDGET_TPL.output({\n\t\t\t\t\tcontent,\n\t\t\t\t\thelpMessage: AlloyEditor.Strings.videoPlaybackDisabled,\n\t\t\t\t\thelpMessageIcon: Liferay.Util.getLexiconIconTpl(\n\t\t\t\t\t\t'info-circle'\n\t\t\t\t\t),\n\t\t\t\t\turl,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst defaultEmbedWidgetUpcastFn = (element, data) => {\n\t\t\t\tlet upcastWidget = false;\n\n\t\t\t\tif (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-url']\n\t\t\t\t) {\n\t\t\t\t\tdata.url = element.attributes['data-embed-url'];\n\n\t\t\t\t\tupcastWidget = true;\n\t\t\t\t} else if (\n\t\t\t\t\telement.name === 'div' &&\n\t\t\t\t\telement.attributes['data-embed-id']\n\t\t\t\t) {\n\t\t\t\t\tconst iframe = element.children[0];\n\n\t\t\t\t\tdata.url = iframe.attributes.src;\n\n\t\t\t\t\tdelete element.attributes.style;\n\n\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\tdata.url,\n\t\t\t\t\t\telement.getOuterHtml()\n\t\t\t\t\t);\n\n\t\t\t\t\tconst widgetFragment = new CKEDITOR.htmlParser.fragment.fromHtml(\n\t\t\t\t\t\tembedContent\n\t\t\t\t\t);\n\n\t\t\t\t\tupcastWidget = widgetFragment.children[0];\n\n\t\t\t\t\tupcastWidget.attributes['data-styles'] =\n\t\t\t\t\t\telement.attributes['data-styles'];\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive');\n\t\t\t\t\tupcastWidget.removeClass('embed-responsive-16by9');\n\n\t\t\t\t\telement.replaceWith(upcastWidget);\n\t\t\t\t}\n\n\t\t\t\treturn upcastWidget;\n\t\t\t};\n\n\t\t\tconst showError = errorMsg => {\n\t\t\t\teditor.fire('error', errorMsg);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\teditor.getSelection().removeAllRanges();\n\n\t\t\t\t\teditor.focus();\n\n\t\t\t\t\tresizer.hide();\n\t\t\t\t}, 0);\n\t\t\t};\n\n\t\t\teditor.addCommand('embedUrl', {\n\t\t\t\texec: (editor, data) => {\n\t\t\t\t\tconst type = data.type;\n\t\t\t\t\tconst url = data.url;\n\t\t\t\t\tlet content;\n\n\t\t\t\t\tif (REGEX_HTTP.test(url)) {\n\t\t\t\t\t\tconst validProvider = providers\n\t\t\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\t\t\treturn type ? provider.type === type : true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.some(provider => {\n\t\t\t\t\t\t\t\tconst scheme = provider.urlSchemes.find(\n\t\t\t\t\t\t\t\t\tscheme => scheme.test(url)\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (scheme) {\n\t\t\t\t\t\t\t\t\tconst embedId = scheme.exec(url)[1];\n\n\t\t\t\t\t\t\t\t\tcontent = provider.tpl.output({\n\t\t\t\t\t\t\t\t\t\tembedId,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn scheme;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (validProvider) {\n\t\t\t\t\t\t\teditor._selectEmbedWidget = url;\n\n\t\t\t\t\t\t\tconst embedContent = generateEmbedContent(\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertHtml(embedContent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowError(AlloyEditor.Strings.platformNotSupported);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowError(AlloyEditor.Strings.enterValidUrl);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\teditor.widgets.add('embedurl', {\n\t\t\t\tdraggable: false,\n\t\t\t\tmask: true,\n\t\t\t\trequiredContent: 'div[data-embed-url]',\n\n\t\t\t\tdata(event) {\n\t\t\t\t\tconst instance = this;\n\n\t\t\t\t\t// Sync dimensions and alignment with editor wrapper\n\n\t\t\t\t\tlet styles = null;\n\n\t\t\t\t\tconst stylesJSON = instance.element.getAttribute(\n\t\t\t\t\t\t'data-styles'\n\t\t\t\t\t);\n\n\t\t\t\t\tif (stylesJSON) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstyles = JSON.parse(stylesJSON);\n\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\tstyles = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!styles) {\n\t\t\t\t\t\tconst iframe = instance.wrapper.findOne('iframe');\n\n\t\t\t\t\t\tconst bounds = instance.wrapper.$.getBoundingClientRect();\n\t\t\t\t\t\tconst width = iframe.getAttribute('width');\n\n\t\t\t\t\t\tconst pwidth =\n\t\t\t\t\t\t\twidth >= bounds.width\n\t\t\t\t\t\t\t\t? 100\n\t\t\t\t\t\t\t\t: Math.round((width / bounds.width) * 100);\n\n\t\t\t\t\t\tstyles = {\n\t\t\t\t\t\t\twidth: `${pwidth}%`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tinstance.wrapper.setAttribute(\n\t\t\t\t\t\t'style',\n\t\t\t\t\t\tCKEDITOR.tools.writeCssText(styles)\n\t\t\t\t\t);\n\n\t\t\t\t\tif (editor._selectEmbedWidget === event.data.url) {\n\t\t\t\t\t\tselectWidget(editor);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tdowncast(widget) {\n\t\t\t\t\tconst embedContent = widget.children[0];\n\n\t\t\t\t\tembedContent.attributes.class =\n\t\t\t\t\t\t'embed-responsive embed-responsive-16by9';\n\n\t\t\t\t\tembedContent.attributes['data-styles'] = JSON.stringify(\n\t\t\t\t\t\tCKEDITOR.tools.parseCssText(\n\t\t\t\t\t\t\twidget.parent.attributes.style\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tembedContent.attributes.style =\n\t\t\t\t\t\twidget.parent.attributes.style;\n\n\t\t\t\t\treturn embedContent;\n\t\t\t\t},\n\n\t\t\t\tupcast(element, data) {\n\t\t\t\t\tconst embedWidgetUpcastFn =\n\t\t\t\t\t\teditor.config.embedWidgetUpcastFn ||\n\t\t\t\t\t\tdefaultEmbedWidgetUpcastFn;\n\n\t\t\t\t\treturn embedWidgetUpcastFn(element, data);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\twindow.addEventListener(\n\t\t\t\t'resize',\n\t\t\t\t() => {\n\t\t\t\t\tresizer.hide();\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\teditor.on('selectionChange', _event => {\n\t\t\t\tconst selection = editor.getSelection();\n\n\t\t\t\tif (selection) {\n\t\t\t\t\tconst element = selection.getSelectedElement();\n\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst widgetElement = element.findOne(\n\t\t\t\t\t\t\t'[data-widget=\"embedurl\"]'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (widgetElement) {\n\t\t\t\t\t\t\tconst scrollPosition = new CKEDITOR.dom.window(\n\t\t\t\t\t\t\t\twindow\n\t\t\t\t\t\t\t).getScrollPosition();\n\n\t\t\t\t\t\t\tconst region = element.getClientRect();\n\n\t\t\t\t\t\t\tregion.direction = CKEDITOR.SELECTION_BOTTOM_TO_TOP;\n\t\t\t\t\t\t\tregion.left -= scrollPosition.x;\n\t\t\t\t\t\t\tregion.top += scrollPosition.y;\n\n\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\tselectionData: {\n\t\t\t\t\t\t\t\t\telement: widgetElement,\n\t\t\t\t\t\t\t\t\tregion,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst imageElement = element.findOne(\n\t\t\t\t\t\t\t'img.cke_widget_mask'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresizer.hide();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\teditor.on('destroy', () => {\n\t\t\t\tconst resizeElement = document.getElementById('ckimgrsz');\n\n\t\t\t\tif (resizeElement) {\n\t\t\t\t\tresizeElement.remove();\n\t\t\t\t}\n\n\t\t\t\tdocument.removeEventListener('mousedown', mouseDownListener);\n\t\t\t});\n\n\t\t\teditor.on('blur', () => {\n\t\t\t\tresizer.hide();\n\t\t\t});\n\n\t\t\teditor.filter.addElementCallback(element => {\n\t\t\t\tif ('data-embed-url' in element.attributes) {\n\t\t\t\t\treturn CKEDITOR.FILTER_SKIP_TREE;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst mouseDownListener = event => {\n\t\t\t\tconst result = getSelectedElement(editor);\n\n\t\t\t\tcurrentAlignment = result.alignment;\n\t\t\t\tcurrentElement = result.element;\n\n\t\t\t\tif (resizer.isHandle(event.target)) {\n\t\t\t\t\tresizer.initDrag(event);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tresizer = new Resizer(editor, {\n\t\t\t\tonComplete(element, width, height) {\n\t\t\t\t\tresizeElement(element, width, height);\n\n\t\t\t\t\tif (currentAlignment && currentElement) {\n\t\t\t\t\t\tsetEmbedAlignment(currentElement, currentAlignment);\n\t\t\t\t\t}\n\t\t\t\t\tselectWidget(editor);\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tdocument.addEventListener('mousedown', mouseDownListener, false);\n\t\t},\n\n\t\tafterInit: editor => {\n\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\tconst command = editor.getCommand('justify' + alignValue);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectedElement = editor\n\t\t\t\t\t\t\t.getSelection()\n\t\t\t\t\t\t\t.getSelectedElement();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectedElement &&\n\t\t\t\t\t\t\tselectedElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst selectedEmbed = selectedElement.findOne(\n\t\t\t\t\t\t\t\t'[data-widget=\"embedurl\"] [data-embed-id]'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (selectedEmbed) {\n\t\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (embedAlignment === alignValue) {\n\t\t\t\t\t\t\t\t\tremoveEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetEmbedAlignment(\n\t\t\t\t\t\t\t\t\t\tselectedElement,\n\t\t\t\t\t\t\t\t\t\talignValue\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentElement = selectedElement;\n\t\t\t\t\t\t\t\tcurrentAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst imageElement = selectedElement.findOne(\n\t\t\t\t\t\t\t\t\t'img'\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (imageElement) {\n\t\t\t\t\t\t\t\t\tresizer.show(imageElement.$);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\t\tconst elementPath = new CKEDITOR.dom.elementPath(\n\t\t\t\t\t\t\t\t\tselectedElement\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tALIGN_VALUES.forEach(alignValue => {\n\t\t\t\t\t\t\t\t\tconst command = editor.getCommand(\n\t\t\t\t\t\t\t\t\t\t'justify' + alignValue\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (command) {\n\t\t\t\t\t\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', event => {\n\t\t\t\t\t\tconst lastElement = event.data.path.lastElement;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlastElement &&\n\t\t\t\t\t\t\tlastElement.getAttribute(\n\t\t\t\t\t\t\t\t'data-cke-widget-wrapper'\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\tlastElement.findOne('[data-widget] [data-embed-id]')\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst embedAlignment = getEmbedAlignment(\n\t\t\t\t\t\t\t\tlastElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.sender.setState(\n\t\t\t\t\t\t\t\tembedAlignment === alignValue\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n\nexport default CKEDITOR.plugins.get('embedurl');\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport DragEvent from './DragEvent.es';\n\nconst IMAGE_HANDLES = ['tl', 'tr', 'bl', 'br'];\n\nconst POSITION_ELEMENT_FN = {\n\tbl(handle, left, top, box) {\n\t\tpositionElement(handle, -3 + left, box.height - 4 + top);\n\t},\n\tbr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, box.height - 4 + top);\n\t},\n\trm(handle, left, top, box) {\n\t\tpositionElement(\n\t\t\thandle,\n\t\t\tbox.width - 4 + left,\n\t\t\tMath.round(box.height / 2) - 3 + top\n\t\t);\n\t},\n\ttl(handle, left, top, _box) {\n\t\tpositionElement(handle, left - 3, top - 3);\n\t},\n\ttr(handle, left, top, box) {\n\t\tpositionElement(handle, box.width - 4 + left, -3 + top);\n\t},\n};\n\nconst positionElement = (el, left, top) => {\n\tel.style.left = `${left}px`;\n\tel.style.top = `${top}px`;\n};\n\nconst getBoundingBox = (window, el) => {\n\tconst rect = el.getBoundingClientRect();\n\n\treturn {\n\t\theight: rect.height,\n\t\tleft: rect.left + window.pageXOffset,\n\t\ttop: rect.top + window.pageYOffset,\n\t\twidth: rect.width,\n\t};\n};\n\nclass Resizer {\n\tconstructor(editor, cfg = {}) {\n\t\tthis.cfg = cfg;\n\t\tthis.editor = editor;\n\n\t\tthis.document = editor.document ? editor.document.$ : document;\n\t\tthis.window = editor.window ? editor.window.$ : window;\n\n\t\tthis.box = null;\n\t\tthis.container = null;\n\t\tthis.handles = {};\n\t\tthis.preview = null;\n\t\tthis.previewBox = null;\n\t\tthis.result = null;\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.container = this.document.createElement('div');\n\t\tthis.container.id = 'ckimgrsz';\n\n\t\tthis.preview = this.document.createElement('span');\n\n\t\tthis.container.appendChild(this.preview);\n\n\t\tthis.handles = {};\n\n\t\tIMAGE_HANDLES.forEach(handleName => {\n\t\t\tthis.handles[handleName] = this.createHandle(handleName);\n\t\t});\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.container.appendChild(this.handles[keys[i]]);\n\t\t}\n\t}\n\n\tcreateHandle(name) {\n\t\tconst el = this.document.createElement('i');\n\n\t\tel.classList.add(name);\n\n\t\treturn el;\n\t}\n\n\tisHandle(el) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tlet result = false;\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tif (this.handles[keys[i]] === el) {\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tshow(el) {\n\t\tconst uiNode = this.editor.config.uiNode || document.body;\n\n\t\tthis.el = el;\n\n\t\tthis.box = getBoundingBox(this.window, this.el);\n\n\t\tpositionElement(\n\t\t\tthis.container,\n\t\t\tthis.box.left,\n\t\t\tthis.box.top + uiNode.scrollTop\n\t\t);\n\n\t\tuiNode.appendChild(this.container);\n\n\t\tthis.el.classList.add('ckimgrsz');\n\n\t\tthis.showHandles();\n\t}\n\n\thide() {\n\t\tconst elements = this.document.getElementsByClassName('ckimgrsz');\n\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\telements[i].classList.remove('ckimgrsz');\n\t\t}\n\n\t\tthis.hideHandles();\n\n\t\tif (this.container.parentNode) {\n\t\t\tthis.container.parentNode.removeChild(this.container);\n\t\t}\n\t}\n\n\tinitDrag(event) {\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst drag = new DragEvent(this.window, this.document);\n\n\t\tdrag.onStart = () => {\n\t\t\tthis.showPreview();\n\n\t\t\tthis.isDragging = true;\n\n\t\t\tthis.editor.getSelection().lock();\n\t\t};\n\n\t\tdrag.onDrag = () => {\n\t\t\tthis.calculateSize(drag);\n\n\t\t\tconst editorBounds = this.editor.element.$.getBoundingClientRect();\n\n\t\t\tif (this.previewBox.width >= editorBounds.width) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.updatePreview();\n\n\t\t\tconst box = this.previewBox;\n\n\t\t\tthis.updateHandles(box, box.left, box.top);\n\t\t};\n\n\t\tdrag.onRelease = () => {\n\t\t\tthis.hidePreview();\n\n\t\t\tthis.isDragging = false;\n\n\t\t\tthis.hide();\n\n\t\t\tthis.editor.getSelection().unlock();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.onComplete = () => {\n\t\t\tthis.resizeComplete();\n\n\t\t\tthis.editor.fire('saveSnapshot');\n\t\t};\n\n\t\tdrag.start(event);\n\t}\n\n\tupdateHandles(box, left = 0, top = 0) {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tPOSITION_ELEMENT_FN[keys[i]](this.handles[keys[i]], left, top, box);\n\t\t}\n\t}\n\n\tshowHandles() {\n\t\tthis.updateHandles(this.box);\n\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'block';\n\t\t}\n\t}\n\n\thideHandles() {\n\t\tconst keys = Object.keys(this.handles);\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tthis.handles[keys[i]].style.display = 'none';\n\t\t}\n\t}\n\n\tshowPreview() {\n\t\tthis.calculateSize();\n\n\t\tthis.updatePreview();\n\n\t\tthis.preview.style.display = 'block';\n\t}\n\n\tupdatePreview() {\n\t\tpositionElement(\n\t\t\tthis.preview,\n\t\t\tthis.previewBox.left,\n\t\t\tthis.previewBox.top\n\t\t);\n\n\t\tthis.preview.style.height = `${this.previewBox.height}px`;\n\t\tthis.preview.style.width = `${this.previewBox.width}px`;\n\t}\n\n\thidePreview() {\n\t\tconst box = getBoundingBox(this.window, this.preview);\n\n\t\tthis.result = {\n\t\t\theight: box.height,\n\t\t\twidth: box.width,\n\t\t};\n\n\t\tthis.preview.style.display = 'none';\n\t}\n\n\tcalculateSize(data) {\n\t\tthis.previewBox = {\n\t\t\theight: this.box.height,\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\twidth: this.box.width,\n\t\t};\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst className = data.target.className;\n\n\t\tif (className.indexOf('r') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width + data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('b') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height + data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.width = Math.max(32, this.box.width - data.delta.x);\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.height = Math.max(\n\t\t\t\t32,\n\t\t\t\tthis.box.height - data.delta.y\n\t\t\t);\n\t\t}\n\n\t\tif (className.indexOf('m') < 0 && !data.keys.shift) {\n\t\t\tconst ratio = this.box.width / this.box.height;\n\n\t\t\tif (this.previewBox.width / this.previewBox.height > ratio) {\n\t\t\t\tthis.previewBox.height = Math.round(\n\t\t\t\t\tthis.previewBox.width / ratio\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.previewBox.width = Math.round(\n\t\t\t\t\tthis.previewBox.height * ratio\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (className.indexOf('l') >= 0) {\n\t\t\tthis.previewBox.left = this.box.width - this.previewBox.width;\n\t\t}\n\n\t\tif (className.indexOf('t') >= 0) {\n\t\t\tthis.previewBox.top = this.box.height - this.previewBox.height;\n\t\t}\n\t}\n\n\tresizeComplete() {\n\t\tthis.cfg.onComplete(this.el, this.result.width, this.result.height);\n\t}\n}\n\nexport {Resizer};\nexport default Resizer;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nclass DragEvent {\n\tconstructor(window, document) {\n\t\tthis.document = document;\n\t\tthis.window = window;\n\n\t\tthis.events = {\n\t\t\tkeydown: this.keydown.bind(this),\n\t\t\tmousemove: this.mousemove.bind(this),\n\t\t\tmouseup: this.mouseup.bind(this),\n\t\t};\n\t}\n\n\tstart(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.target = event.target;\n\n\t\tthis.className = this.target.className;\n\n\t\tthis.startPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.update(event);\n\n\t\tthis.document.addEventListener('keydown', this.events.keydown, false);\n\t\tthis.document.addEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.addEventListener('mouseup', this.events.mouseup, false);\n\n\t\tthis.document.body.classList.add(`dragging-${this.className}`);\n\n\t\tif (typeof this.onStart === 'function') {\n\t\t\tthis.onStart();\n\t\t}\n\t}\n\n\tupdate(event) {\n\t\tthis.currentPos = {\n\t\t\tx: event.clientX,\n\t\t\ty: event.clientY,\n\t\t};\n\n\t\tthis.delta = {\n\t\t\tx: event.clientX - this.startPos.x,\n\t\t\ty: event.clientY - this.startPos.y,\n\t\t};\n\n\t\tthis.keys = {\n\t\t\talt: event.altKey,\n\t\t\tctrl: event.ctrlKey,\n\t\t\tshift: event.shiftKey,\n\t\t};\n\t}\n\n\tmousemove(event) {\n\t\tthis.update(event);\n\n\t\tif (typeof this.onDrag === 'function') {\n\t\t\tthis.onDrag();\n\t\t}\n\n\t\tif (event.which === 0) {\n\t\t\tthis.mouseup(event);\n\t\t}\n\t}\n\n\tkeydown(event) {\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.release();\n\t\t}\n\t}\n\n\tmouseup(event) {\n\t\tthis.update(event);\n\n\t\tthis.release();\n\n\t\tif (typeof this.onComplete === 'function') {\n\t\t\tthis.onComplete();\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.document.body.classList.remove(`dragging-${this.className}`);\n\n\t\tthis.document.removeEventListener(\n\t\t\t'keydown',\n\t\t\tthis.events.keydown,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mousemove',\n\t\t\tthis.events.mousemove,\n\t\t\tfalse\n\t\t);\n\t\tthis.document.removeEventListener(\n\t\t\t'mouseup',\n\t\t\tthis.events.mouseup,\n\t\t\tfalse\n\t\t);\n\n\t\tif (typeof this.onRelease === 'function') {\n\t\t\tthis.onRelease();\n\t\t}\n\t}\n}\n\nexport {DragEvent};\nexport default DragEvent;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport SelectionTest from '../selections/selection-test';\n\nif (!CKEDITOR.plugins.get('ae_imagealignment')) {\n\t/**\n\t * Enum for supported image alignments\n\t * @type {Object}\n\t */\n\tconst IMAGE_ALIGNMENT = {\n\t\tCENTER: 'center',\n\t\tLEFT: 'left',\n\t\tRIGHT: 'right',\n\t};\n\n\t/**\n\t * Enum values for supported image alignments\n\t * @type {Array}\n\t */\n\tconst ALIGN_VALUES = [\n\t\tIMAGE_ALIGNMENT.LEFT,\n\t\tIMAGE_ALIGNMENT.RIGHT,\n\t\tIMAGE_ALIGNMENT.CENTER,\n\t];\n\n\t/**\n\t * Necessary styles for the left|center|right alignment\n\t * @type {Array.<Object>}\n\t */\n\tconst IMAGE_STYLE_ALIGNMENT = {\n\t\t[IMAGE_ALIGNMENT.LEFT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'left',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.CENTER]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-right',\n\t\t\t\tvalue: 'auto',\n\t\t\t},\n\t\t],\n\t\t[IMAGE_ALIGNMENT.RIGHT]: [\n\t\t\t{\n\t\t\t\tname: 'display',\n\t\t\t\tvalue: 'inline-block',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'float',\n\t\t\t\tvalue: 'right',\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'margin-left',\n\t\t\t\tvalue: '1.2rem',\n\t\t\t},\n\t\t],\n\t};\n\n\t/**\n\t * Retrieves the alignment value of an image.\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @return {String} The alignment value\n\t */\n\tconst getImageAlignment = function(image) {\n\t\tlet imageAlignment = image.getStyle('float');\n\n\t\tif (\n\t\t\t!imageAlignment ||\n\t\t\timageAlignment === 'inherit' ||\n\t\t\timageAlignment === 'none'\n\t\t) {\n\t\t\timageAlignment = image.getAttribute('align');\n\t\t}\n\n\t\tif (!imageAlignment) {\n\t\t\tlet centeredImage = IMAGE_STYLE_ALIGNMENT[\n\t\t\t\tIMAGE_ALIGNMENT.CENTER\n\t\t\t].every(style => {\n\t\t\t\tlet styleCheck = image.getStyle(style.name) === style.value;\n\n\t\t\t\tif (!styleCheck && style.vendorPrefixes) {\n\t\t\t\t\tstyleCheck = style.vendorPrefixes.some(vendorPrefix => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\timage.getStyle(vendorPrefix + style.name) ===\n\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn styleCheck;\n\t\t\t});\n\n\t\t\tif (!imageAlignment) {\n\t\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\t\tIMAGE_STYLE_ALIGNMENT[IMAGE_ALIGNMENT.CENTER].forEach(\n\t\t\t\t\t\tstyle => {\n\t\t\t\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\t\t\t\timage.setStyle(\n\t\t\t\t\t\t\t\t\t\tvendorPrefix + style.name,\n\t\t\t\t\t\t\t\t\t\tstyle.value\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tcenteredImage = true;\n\t\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timageAlignment = centeredImage ? IMAGE_ALIGNMENT.CENTER : null;\n\t\t}\n\n\t\tif (!CKEDITOR.env.edge && CKEDITOR.env.ie) {\n\t\t\tconst p = image.findOne('p');\n\t\t\tif (p) {\n\t\t\t\timageAlignment = p.getStyle('text-align');\n\t\t\t}\n\t\t}\n\n\t\treturn imageAlignment;\n\t};\n\n\t/**\n\t * Removes the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be removed\n\t */\n\tconst removeImageAlignment = function(image, imageAlignment) {\n\t\tif (\n\t\t\timageAlignment === IMAGE_ALIGNMENT.LEFT ||\n\t\t\timageAlignment === IMAGE_ALIGNMENT.RIGHT\n\t\t) {\n\t\t\tif (imageAlignment === getImageAlignment(image)) {\n\t\t\t\timage.removeAttribute('align');\n\t\t\t}\n\t\t} else if (imageAlignment === IMAGE_ALIGNMENT.CENTER) {\n\t\t\tconst imageContainer = image.$.parentNode;\n\n\t\t\tif (imageContainer.style.textAlign == IMAGE_ALIGNMENT.CENTER) {\n\t\t\t\timageContainer.style.textAlign = '';\n\t\t\t}\n\t\t}\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.removeStyle(style.name);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.removeStyle(vendorPrefix + style.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sets the alignment value of an image\n\t *\n\t * @param {CKEDITOR.dom.element} image The image element\n\t * @param {String} imageAlignment The image alignment value to be set\n\t */\n\tconst setImageAlignment = function(image, imageAlignment) {\n\t\tremoveImageAlignment(image, getImageAlignment(image));\n\n\t\tconst styles = IMAGE_STYLE_ALIGNMENT[imageAlignment];\n\n\t\tif (styles) {\n\t\t\tstyles.forEach(style => {\n\t\t\t\timage.setStyle(style.name, style.value);\n\n\t\t\t\tif (style.vendorPrefixes) {\n\t\t\t\t\tstyle.vendorPrefixes.forEach(vendorPrefix => {\n\t\t\t\t\t\timage.setStyle(vendorPrefix + style.name, style.value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * CKEditor plugin which modifies the justify commands to properly align images. This\n\t * plugin is an excerpt of CKEditor's original image one that can be found at\n\t * https://github.com/ckeditor/ckeditor-dev/blob/master/plugins/image/plugin.js\n\t *\n\t * @class CKEDITOR.plugins.ae_imagealignment\n\t */\n\tCKEDITOR.plugins.add('ae_imagealignment', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method afterInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tafterInit(editor) {\n\t\t\tconst self = this;\n\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.on('exec', event => {\n\t\t\t\t\t\tconst selectionData = editor.getSelectionData();\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tselectionData &&\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst image = selectionData.element;\n\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(image);\n\n\t\t\t\t\t\t\tif (imageAlignment === value) {\n\t\t\t\t\t\t\t\tremoveImageAlignment(image, value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetImageAlignment(image, value);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tevent.cancel();\n\n\t\t\t\t\t\t\tself.refreshCommands(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.elementPath(image)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcommand.on('refresh', function(event) {\n\t\t\t\t\t\tconst selectionData = {\n\t\t\t\t\t\t\telement: event.data.path.lastElement,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tSelectionTest.image({\n\t\t\t\t\t\t\t\tdata: {selectionData},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst imageAlignment = getImageAlignment(\n\t\t\t\t\t\t\t\tselectionData.element\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\timageAlignment === value\n\t\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tevent.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Forces a refresh of the modified justify commands. This is needed because the applied changes\n\t\t * do not modify the selection, so the refresh is never triggered and the UI does not update\n\t\t * properly until the next selectionChange event.\n\t\t *\n\t\t * @param {CKEDITOR.editor} editor The editor instance\n\t\t * @param {CKEDITOR.dom.elementPath} elementPath The path of the selected image\n\t\t */\n\t\trefreshCommands(editor, elementPath) {\n\t\t\tALIGN_VALUES.forEach(value => {\n\t\t\t\tconst command = editor.getCommand('justify' + value);\n\n\t\t\t\tif (command) {\n\t\t\t\t\tcommand.refresh(editor, elementPath);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_pasteimages')) {\n\t/**\n\t * CKEditor plugin which allows pasting images directly into the editable area. The image will be encoded\n\t * as Data URI. An event `beforeImageAdd` will be fired with the list of pasted images. If any of the listeners\n\t * returns `false` or cancels the event, the images won't be added to the content. Otherwise,\n\t * an event `imageAdd` will be fired with the inserted element into the editable area.\n\t *\n\t * @class CKEDITOR.plugins.ae_pasteimages\n\t */\n\n\t/**\n\t * Fired before adding images to the editor.\n\t * @event beforeImageAdd\n\t * @param {Array} imageFiles Array of image files\n\t */\n\n\t/**\n\t * Fired when an image is being added to the editor successfully.\n\t *\n\t * @event imageAdd\n\t * @param {CKEDITOR.dom.element} el The created image with src as Data URI\n\t * @param {File} file The image file\n\t */\n\n\tCKEDITOR.plugins.add('ae_pasteimages', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'paste' event on the editing area.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.once('contentDom', () => {\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable,\n\t\t\t\t\t'paste',\n\t\t\t\t\tthis._onPaste,\n\t\t\t\t\tthis,\n\t\t\t\t\t{\n\t\t\t\t\t\teditor,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * The function creates an img element with src the image data as Data URI.\n\t\t * Then, it fires an 'imageAdd' event via CKEditor's event system. The passed\n\t\t * params will be:\n\t\t * - `el` - the created img element\n\t\t * - `file` - the original pasted data\n\t\t *\n\t\t * @method _onPaste\n\t\t * @protected\n\t\t * @param {CKEDITOR.dom.event} event A `paste` event, as received natively from CKEditor\n\t\t */\n\t\t_onPaste(event) {\n\t\t\tif (event.data.$.clipboardData) {\n\t\t\t\tconst pastedData = event.data.$.clipboardData.items[0];\n\t\t\t\tconst editor = event.listenerData.editor;\n\n\t\t\t\tif (pastedData.type.indexOf('image') === 0) {\n\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\tconst imageFile = pastedData.getAsFile();\n\n\t\t\t\t\treader.onload = function(event) {\n\t\t\t\t\t\tconst result = editor.fire('beforeImageAdd', {\n\t\t\t\t\t\t\timageFiles: imageFile,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tconst el = CKEDITOR.dom.element.createFromHtml(\n\t\t\t\t\t\t\t\t'<img src=\"' + event.target.result + '\">'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\teditor.insertElement(el);\n\n\t\t\t\t\t\t\tconst imageData = {\n\t\t\t\t\t\t\t\tel,\n\t\t\t\t\t\t\t\tfile: imageFile,\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\teditor.fire('imageAdd', imageData);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treader.readAsDataURL(imageFile);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_placeholder')) {\n\t/**\n\t * CKEDITOR enterMode config set the behavior of paragraphs\n\t * When the content is empty CKEDITOR keeps the enterMode string\n\t * into the content\n\t * @property\n\t * @type {string}\n\t */\n\tconst brFiller = CKEDITOR.env.needsBrFiller ? '<br>' : '';\n\n\tconst enterModeEmptyValue = {\n\t\t1: ['<p>' + brFiller + '</p>'],\n\t\t2: ['', ' ', brFiller],\n\t\t3: ['<div>' + brFiller + '</div>'],\n\t};\n\n\t/**\n\t * CKEditor plugin which allows adding a placeholder to the editor. In this case, if there\n\t * is no content to the editor, there will be hint to the user.\n\t *\n\t * @class CKEDITOR.plugins.ae_placeholder\n\t */\n\n\t/**\n\t * Specifies the placeholder class which have to be aded to editor when editor is not focused.\n\t *\n\t * @attribute placeholderClass\n\t * @default ae_placeholder\n\t * @type String\n\t */\n\n\tCKEDITOR.plugins.add('ae_placeholder', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function registers a 'blur' and 'contentDom' event listeners.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\teditor.on('blur', this._checkEmptyData, this);\n\t\t\teditor.on('change', this._checkEmptyData, this);\n\t\t\teditor.on('focus', this._removePlaceholderClass, this);\n\t\t\teditor.once('contentDom', this._checkEmptyData, this);\n\t\t},\n\n\t\t/**\n\t\t * Removes any data from the content and adds a class,\n\t\t * specified by the \"placeholderClass\" config attribute.\n\t\t *\n\t\t * @protected\n\t\t * @method _checkEmptyData\n\t\t * @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n\t\t */\n\t\t_checkEmptyData(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editableNode = editor.editable();\n\n\t\t\tconst innerHtml = editableNode.$.innerHTML.trim();\n\n\t\t\tconst isEmpty = enterModeEmptyValue[editor.config.enterMode].some(\n\t\t\t\telement => {\n\t\t\t\t\treturn innerHtml === element;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (isEmpty) {\n\t\t\t\teditableNode.addClass(editor.config.placeholderClass);\n\t\t\t} else {\n\t\t\t\teditableNode.removeClass(editor.config.placeholderClass);\n\t\t\t}\n\t\t},\n\n\t\t/**\n             * Remove placeholder class when input is focused\n             *\n             * @protected\n             * @method _removePlaceholderClass\n             + @param {CKEDITOR.dom.event} editor event, fired from CKEditor\n             */\n\t\t_removePlaceholderClass(event) {\n\t\t\tconst editor = event.editor;\n\n\t\t\tconst editorNode = new CKEDITOR.dom.element(editor.element.$);\n\n\t\t\teditorNode.removeClass(editor.config.placeholderClass);\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nif (!CKEDITOR.plugins.get('ae_selectionkeystrokes')) {\n\t/**\n\t * CKEditor plugin that simulates editor interaction events based on manual keystrokes. This\n\t * can be used to trigger different reactions in the editor.\n\t *\n\t * @class CKEDITOR.plugins.ae_selectionkeystrokes\n\t */\n\tCKEDITOR.plugins.add('ae_selectionkeystrokes', {\n\t\trequires: 'ae_selectionregion',\n\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t * The function adds a command to the editor for every defined selectionKeystroke\n\t\t * in the configuration and maps it to the specified keystroke.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tinit(editor) {\n\t\t\tif (editor.config.selectionKeystrokes) {\n\t\t\t\teditor.config.selectionKeystrokes.forEach(\n\t\t\t\t\tselectionKeystroke => {\n\t\t\t\t\t\tconst command = new CKEDITOR.command(editor, {\n\t\t\t\t\t\t\texec(editor) {\n\t\t\t\t\t\t\t\teditor.fire('editorInteraction', {\n\t\t\t\t\t\t\t\t\tmanualSelection:\n\t\t\t\t\t\t\t\t\t\tselectionKeystroke.selection,\n\t\t\t\t\t\t\t\t\tnativeEvent: {},\n\t\t\t\t\t\t\t\t\tselectionData: editor.getSelectionData(),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst commandName =\n\t\t\t\t\t\t\t'selectionKeystroke' + selectionKeystroke.selection;\n\n\t\t\t\t\t\teditor.addCommand(commandName, command);\n\t\t\t\t\t\teditor.setKeystroke(\n\t\t\t\t\t\t\tselectionKeystroke.keys,\n\t\t\t\t\t\t\tcommandName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tableresize')) {\n\tconst pxUnit = CKEDITOR.tools.cssLength;\n\n\tfunction getWidth(el) {\n\t\treturn CKEDITOR.env.ie\n\t\t\t? el.$.clientWidth\n\t\t\t: parseInt(el.getComputedStyle('width'), 10);\n\t}\n\n\tfunction getBorderWidth(element, side) {\n\t\tlet computed = element.getComputedStyle('border-' + side + '-width');\n\n\t\tconst borderMap = {\n\t\t\tthin: '0px',\n\t\t\tmedium: '1px',\n\t\t\tthick: '2px',\n\t\t};\n\n\t\tif (computed.indexOf('px') < 0) {\n\t\t\t// look up keywords\n\t\t\tif (\n\t\t\t\tcomputed in borderMap &&\n\t\t\t\telement.getComputedStyle('border-style') != 'none'\n\t\t\t) {\n\t\t\t\tcomputed = borderMap[computed];\n\t\t\t} else {\n\t\t\t\tcomputed = 0;\n\t\t\t}\n\t\t}\n\n\t\treturn parseInt(computed, 10);\n\t}\n\n\t// Gets the table row that contains the most columns.\n\tfunction getMasterPillarRow(table) {\n\t\tconst $rows = table.$.rows;\n\n\t\tlet maxCells = 0;\n\n\t\tlet cellsCount;\n\n\t\tlet $elected;\n\n\t\tlet $tr;\n\n\t\tfor (let i = 0, len = $rows.length; i < len; i++) {\n\t\t\t$tr = $rows[i];\n\t\t\tcellsCount = $tr.cells.length;\n\n\t\t\tif (cellsCount > maxCells) {\n\t\t\t\tmaxCells = cellsCount;\n\t\t\t\t$elected = $tr;\n\t\t\t}\n\t\t}\n\n\t\treturn $elected;\n\t}\n\n\tfunction buildTableColumnPillars(table) {\n\t\tconst pillars = [];\n\n\t\tlet pillarIndex = -1;\n\n\t\tconst rtl = table.getComputedStyle('direction') === 'rtl';\n\n\t\t// Get the raw row element that cointains the most columns.\n\t\tconst $tr = getMasterPillarRow(table);\n\n\t\t// Get the tbody element and position, which will be used to set the\n\t\t// top and bottom boundaries.\n\t\tconst tbody = new CKEDITOR.dom.element(table.$.tBodies[0]);\n\n\t\tconst tbodyPosition = tbody.getDocumentPosition();\n\n\t\t// Loop thorugh all cells, building pillars after each one of them.\n\t\tfor (let i = 0, len = $tr.cells.length; i < len; i++) {\n\t\t\t// Both the current cell and the successive one will be used in the\n\t\t\t// pillar size calculation.\n\t\t\tconst td = new CKEDITOR.dom.element($tr.cells[i]);\n\n\t\t\tconst nextTd =\n\t\t\t\t$tr.cells[i + 1] && new CKEDITOR.dom.element($tr.cells[i + 1]);\n\n\t\t\tpillarIndex += td.$.colSpan || 1;\n\n\t\t\t// Calculate the pillar boundary positions.\n\t\t\tlet pillarLeft;\n\t\t\tlet pillarRight;\n\n\t\t\tlet x = td.getDocumentPosition().x;\n\n\t\t\t// Calculate positions based on the current cell.\n\t\t\tif (rtl) {\n\t\t\t\tpillarRight = x + getBorderWidth(td, 'left');\n\t\t\t} else {\n\t\t\t\tpillarLeft = x + td.$.offsetWidth - getBorderWidth(td, 'right');\n\t\t\t}\n\n\t\t\t// Calculate positions based on the next cell, if available.\n\t\t\tif (nextTd) {\n\t\t\t\tx = nextTd.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft =\n\t\t\t\t\t\tx +\n\t\t\t\t\t\tnextTd.$.offsetWidth -\n\t\t\t\t\t\tgetBorderWidth(nextTd, 'right');\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + getBorderWidth(nextTd, 'left');\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Otherwise calculate positions based on the table (for last cell).\n\t\t\telse {\n\t\t\t\tx = table.getDocumentPosition().x;\n\n\t\t\t\tif (rtl) {\n\t\t\t\t\tpillarLeft = x;\n\t\t\t\t} else {\n\t\t\t\t\tpillarRight = x + table.$.offsetWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pillarWidth = Math.max(pillarRight - pillarLeft, 4);\n\n\t\t\t// The pillar should reflects exactly the shape of the hovered\n\t\t\t// column border line.\n\t\t\tpillars.push({\n\t\t\t\ttable,\n\t\t\t\tindex: pillarIndex,\n\t\t\t\tx: pillarLeft,\n\t\t\t\ty: tbodyPosition.y,\n\t\t\t\twidth: pillarWidth,\n\t\t\t\theight: tbody.$.offsetHeight,\n\t\t\t\trtl,\n\t\t\t});\n\t\t}\n\n\t\treturn pillars;\n\t}\n\n\tfunction getPillarAtPosition(pillars, positionX) {\n\t\tfor (let i = 0, len = pillars.length; i < len; i++) {\n\t\t\tconst pillar = pillars[i];\n\n\t\t\tif (positionX >= pillar.x && positionX <= pillar.x + pillar.width) {\n\t\t\t\treturn pillar;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction cancel(evt) {\n\t\t(evt.data || evt).preventDefault();\n\t}\n\n\tfunction ColumnResizer(editor, pillar) {\n\t\tlet currentShift;\n\t\tlet leftShiftBoundary;\n\t\tlet leftSideCells;\n\t\tlet resizing;\n\t\tlet rightShiftBoundary;\n\t\tlet rightSideCells;\n\t\tlet startOffset;\n\n\t\tconst document = editor.document;\n\n\t\tconst resizer = CKEDITOR.dom.element.createFromHtml(\n\t\t\t'<div data-cke-temp=1 contenteditable=false unselectable=on ' +\n\t\t\t\t'style=\"position:absolute;cursor:col-resize;filter:alpha(opacity=0);opacity:0;' +\n\t\t\t\t'padding:0;background-color:#004;background-image:none;border:0px none;z-index:10\"></div>',\n\t\t\tdocument\n\t\t);\n\n\t\tconst isResizing = (this.isResizing = function() {\n\t\t\treturn resizing;\n\t\t});\n\n\t\tconst move = (this.move = function(posX) {\n\t\t\tlet resizerNewPosition =\n\t\t\t\tposX - Math.round(resizer.$.offsetWidth / 2);\n\n\t\t\tif (isResizing) {\n\t\t\t\tif (\n\t\t\t\t\tresizerNewPosition === leftShiftBoundary ||\n\t\t\t\t\tresizerNewPosition === rightShiftBoundary\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresizerNewPosition = Math.max(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\tleftShiftBoundary\n\t\t\t\t);\n\t\t\t\tresizerNewPosition = Math.min(\n\t\t\t\t\tresizerNewPosition,\n\t\t\t\t\trightShiftBoundary\n\t\t\t\t);\n\n\t\t\t\tcurrentShift = resizerNewPosition - startOffset;\n\t\t\t}\n\n\t\t\tresizer.setStyle('left', pxUnit(resizerNewPosition));\n\t\t});\n\n\t\tfunction detach() {\n\t\t\tresizer.removeListener('mouseup', onMouseUp);\n\t\t\tresizer.removeListener('mousedown', onMouseDown);\n\t\t\tresizer.removeListener('mousemove', onMouseMove);\n\t\t}\n\n\t\tfunction resizeStart() {\n\t\t\t// Before starting to resize, figure out which cells to change\n\t\t\t// and the boundaries of this resizing shift.\n\n\t\t\tconst columnIndex = pillar.index;\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(pillar.table);\n\n\t\t\tconst leftColumnCells = [];\n\n\t\t\tconst rightColumnCells = [];\n\n\t\t\tlet leftMinSize = Number.MAX_VALUE;\n\n\t\t\tlet rightMinSize = leftMinSize;\n\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tfor (let i = 0, len = map.length; i < len; i++) {\n\t\t\t\tconst row = map[i];\n\n\t\t\t\tlet leftCell = row[columnIndex + (rtl ? 1 : 0)];\n\n\t\t\t\tlet rightCell = row[columnIndex + (rtl ? 0 : 1)];\n\n\t\t\t\tleftCell = leftCell && new CKEDITOR.dom.element(leftCell);\n\t\t\t\trightCell = rightCell && new CKEDITOR.dom.element(rightCell);\n\n\t\t\t\tif (!leftCell || !rightCell || !leftCell.equals(rightCell)) {\n\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\tleftMinSize = Math.min(leftMinSize, getWidth(leftCell));\n\t\t\t\t\t}\n\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\trightMinSize = Math.min(\n\t\t\t\t\t\t\trightMinSize,\n\t\t\t\t\t\t\tgetWidth(rightCell)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tleftColumnCells.push(leftCell);\n\t\t\t\t\trightColumnCells.push(rightCell);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cache the list of cells to be resized.\n\t\t\tleftSideCells = leftColumnCells;\n\t\t\trightSideCells = rightColumnCells;\n\n\t\t\t// Cache the resize limit boundaries.\n\t\t\tleftShiftBoundary = pillar.x - leftMinSize;\n\t\t\trightShiftBoundary = pillar.x + rightMinSize;\n\n\t\t\tresizer.setOpacity(0.5);\n\t\t\tstartOffset = parseInt(resizer.getStyle('left'), 10);\n\t\t\tcurrentShift = 0;\n\t\t\tresizing = 1;\n\n\t\t\tresizer.on('mousemove', onMouseMove);\n\n\t\t\t// Prevent the native drag behavior otherwise 'mousemove' won't fire.\n\t\t\tdocument.on('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeEnd() {\n\t\t\tresizing = 0;\n\n\t\t\tresizer.setOpacity(0);\n\n\t\t\tif (currentShift) {\n\t\t\t\tresizeColumn();\n\t\t\t}\n\n\t\t\tconst table = pillar.table;\n\t\t\tsetTimeout(() => {\n\t\t\t\ttable.removeCustomData('_cke_table_pillars');\n\t\t\t}, 0);\n\n\t\t\tdocument.removeListener('dragstart', cancel);\n\t\t}\n\n\t\tfunction resizeColumn() {\n\t\t\tconst rtl = pillar.rtl;\n\n\t\t\tconst cellsCount = rtl\n\t\t\t\t? rightSideCells.length\n\t\t\t\t: leftSideCells.length;\n\n\t\t\t// Perform the actual resize to table cells, only for those by side of the pillar.\n\t\t\tfor (let i = 0; i < cellsCount; i++) {\n\t\t\t\tconst leftCell = leftSideCells[i];\n\n\t\t\t\tconst rightCell = rightSideCells[i];\n\n\t\t\t\tconst table = pillar.table;\n\n\t\t\t\t// Defer the resizing to avoid any interference among cells.\n\t\t\t\tCKEDITOR.tools.setTimeout(\n\t\t\t\t\t(\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftOldWidth,\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightOldWidth,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tsizeShift\n\t\t\t\t\t) => {\n\t\t\t\t\t\t// 1px is the minimum valid width (#11626).\n\t\t\t\t\t\tif (leftCell) {\n\t\t\t\t\t\t\tleftCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(leftOldWidth + sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rightCell) {\n\t\t\t\t\t\t\trightCell.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(Math.max(rightOldWidth - sizeShift, 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we're in the last cell, we need to resize the table as well\n\t\t\t\t\t\tif (tableWidth) {\n\t\t\t\t\t\t\ttable.setStyle(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\tpxUnit(tableWidth + sizeShift * (rtl ? -1 : 1))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t0,\n\t\t\t\t\tthis,\n\t\t\t\t\t[\n\t\t\t\t\t\tleftCell,\n\t\t\t\t\t\tleftCell && getWidth(leftCell),\n\t\t\t\t\t\trightCell,\n\t\t\t\t\t\trightCell && getWidth(rightCell),\n\t\t\t\t\t\t(!leftCell || !rightCell) &&\n\t\t\t\t\t\t\tgetWidth(table) +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'left') +\n\t\t\t\t\t\t\t\tgetBorderWidth(table, 'right'),\n\t\t\t\t\t\tcurrentShift,\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfunction onMouseDown(evt) {\n\t\t\tcancel(evt);\n\n\t\t\tresizeStart();\n\n\t\t\tdocument.on('mouseup', onMouseUp, this);\n\t\t}\n\n\t\tfunction onMouseUp(evt) {\n\t\t\tevt.removeListener();\n\n\t\t\tresizeEnd();\n\t\t}\n\n\t\tfunction onMouseMove(evt) {\n\t\t\tmove(evt.data.getPageOffset().x);\n\t\t}\n\n\t\t// Clean DOM when editor is destroyed.\n\t\teditor.on('destroy', () => {\n\t\t\tdetach();\n\n\t\t\tresizer.remove();\n\t\t});\n\n\t\t// Place the resizer after body to prevent it\n\t\t// from being editable.\n\t\tdocument.getDocumentElement().append(resizer);\n\n\t\tresizer.setStyles({\n\t\t\twidth: pxUnit(pillar.width),\n\t\t\theight: pxUnit(pillar.height),\n\t\t\tleft: pxUnit(pillar.x),\n\t\t\ttop: pxUnit(pillar.y),\n\t\t});\n\n\t\tresizer.on('mousedown', onMouseDown, this);\n\n\t\tdocument.getBody().setStyle('cursor', 'col-resize');\n\n\t\t// Display the resizer to receive events but don't show it,\n\t\t// only change the cursor to resizable shape.\n\t\tresizer.show();\n\n\t\tthis.destroy = function() {\n\t\t\tdetach();\n\n\t\t\tdocument.getBody().setStyle('cursor', 'auto');\n\n\t\t\tresizer.remove();\n\t\t};\n\t}\n\n\tfunction clearPillarsCache(evt) {\n\t\tconst target = evt.data.getTarget();\n\n\t\tif (evt.name === 'mouseout') {\n\t\t\t// Bypass interal mouse move.\n\t\t\tif (!target.is('table')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet dest = new CKEDITOR.dom.element(\n\t\t\t\tevt.data.$.relatedTarget || evt.data.$.toElement\n\t\t\t);\n\t\t\twhile (dest && dest.$ && !dest.equals(target) && !dest.is('body')) {\n\t\t\t\tdest = dest.getParent();\n\t\t\t}\n\t\t\tif (!dest || dest.equals(target)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\ttarget.getAscendant('table', 1).removeCustomData('_cke_table_pillars');\n\t\tevt.removeListener();\n\t}\n\n\tCKEDITOR.plugins.add('ae_tableresize', {\n\t\trequires: 'ae_tabletools',\n\n\t\tinit(editor) {\n\t\t\teditor.on('contentDom', () => {\n\t\t\t\tlet resizer;\n\n\t\t\t\tconst editable = editor.editable();\n\n\t\t\t\t// In Classic editor it is better to use document\n\t\t\t\t// instead of editable so event will work below body.\n\t\t\t\teditable.attachListener(\n\t\t\t\t\teditable.isInline() ? editable : editor.document,\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tevt => {\n\t\t\t\t\t\tevt = evt.data;\n\n\t\t\t\t\t\tconst target = evt.getTarget();\n\n\t\t\t\t\t\t// FF may return document and IE8 some UFO (object with no nodeType property...)\n\t\t\t\t\t\t// instead of an element (#11823).\n\t\t\t\t\t\tif (target.type !== CKEDITOR.NODE_ELEMENT) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pageX = evt.getPageOffset().x;\n\n\t\t\t\t\t\t// If we're already attached to a pillar, simply move the\n\t\t\t\t\t\t// resizer.\n\t\t\t\t\t\tif (resizer) {\n\t\t\t\t\t\t\tif (resizer.isResizing()) {\n\t\t\t\t\t\t\t\tresizer.move(pageX);\n\n\t\t\t\t\t\t\t\tcancel(evt);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresizer.destroy();\n\n\t\t\t\t\t\t\t\tresizer = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Considering table, tr, td, tbody but nothing else.\n\t\t\t\t\t\tlet pillars;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!target.is('table') &&\n\t\t\t\t\t\t\t!target.getAscendant('tbody', 1)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst table = target.getAscendant('table', 1);\n\n\t\t\t\t\t\t// Make sure the table we found is inside the container\n\t\t\t\t\t\t// (eg. we should not use tables the editor is embedded within)\n\t\t\t\t\t\tif (!editor.editable().contains(table)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!(pillars = table.getCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars'\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Cache table pillars calculation result.\n\t\t\t\t\t\t\ttable.setCustomData(\n\t\t\t\t\t\t\t\t'_cke_table_pillars',\n\t\t\t\t\t\t\t\t(pillars = buildTableColumnPillars(table))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\ttable.on('mouseout', clearPillarsCache);\n\t\t\t\t\t\t\ttable.on('mousedown', clearPillarsCache);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst pillar = getPillarAtPosition(pillars, pageX);\n\n\t\t\t\t\t\tif (pillar) {\n\t\t\t\t\t\t\tresizer = new ColumnResizer(editor, pillar);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/**\n * @license Copyright (c) 2003-2015, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or http://ckeditor.com/license\n */\n\nif (!CKEDITOR.plugins.get('ae_tabletools')) {\n\tconst cellNodeRegex = /^(?:td|th)$/;\n\n\tfunction getSelectedCells(selection) {\n\t\tconst ranges = selection.getRanges();\n\t\tconst retval = [];\n\t\tconst database = {};\n\n\t\tfunction moveOutOfCellGuard(node) {\n\t\t\t// Apply to the first cell only.\n\t\t\tif (retval.length > 0) return;\n\n\t\t\t// If we are exiting from the first </td>, then the td should definitely be\n\t\t\t// included.\n\t\t\tif (\n\t\t\t\tnode.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcellNodeRegex.test(node.getName()) &&\n\t\t\t\t!node.getCustomData('selected_cell')\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\tdatabase,\n\t\t\t\t\tnode,\n\t\t\t\t\t'selected_cell',\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\tretval.push(node);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < ranges.length; i++) {\n\t\t\tconst range = ranges[i];\n\n\t\t\tif (range.collapsed) {\n\t\t\t\t// Walker does not handle collapsed ranges yet - fall back to old API.\n\t\t\t\tconst startNode = range.getCommonAncestor();\n\t\t\t\tconst nearestCell =\n\t\t\t\t\tstartNode.getAscendant('td', true) ||\n\t\t\t\t\tstartNode.getAscendant('th', true);\n\t\t\t\tif (nearestCell) retval.push(nearestCell);\n\t\t\t} else {\n\t\t\t\tconst walker = new CKEDITOR.dom.walker(range);\n\t\t\t\tlet node;\n\t\t\t\twalker.guard = moveOutOfCellGuard;\n\n\t\t\t\twhile ((node = walker.next())) {\n\t\t\t\t\t// If may be possible for us to have a range like this:\n\t\t\t\t\t// <td>^1</td><td>^2</td>\n\t\t\t\t\t// The 2nd td shouldn't be included.\n\t\t\t\t\t//\n\t\t\t\t\t// So we have to take care to include a td we've entered only when we've\n\t\t\t\t\t// walked into its children.\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.type != CKEDITOR.NODE_ELEMENT ||\n\t\t\t\t\t\t!node.is(CKEDITOR.dtd.table)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst parent =\n\t\t\t\t\t\t\tnode.getAscendant('td', true) ||\n\t\t\t\t\t\t\tnode.getAscendant('th', true);\n\t\t\t\t\t\tif (parent && !parent.getCustomData('selected_cell')) {\n\t\t\t\t\t\t\tCKEDITOR.dom.element.setMarker(\n\t\t\t\t\t\t\t\tdatabase,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\t'selected_cell',\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tretval.push(parent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\treturn retval;\n\t}\n\n\tfunction getFocusElementAfterDelCells(cellsToDelete) {\n\t\tlet i = 0;\n\n\t\tconst last = cellsToDelete.length - 1;\n\n\t\tconst database = {};\n\n\t\tlet cell;\n\n\t\tlet focusedCell;\n\n\t\tlet tr;\n\n\t\twhile ((cell = cellsToDelete[i++]))\n\t\t\tCKEDITOR.dom.element.setMarker(database, cell, 'delete_cell', true);\n\n\t\t// 1.first we check left or right side focusable cell row by row;\n\t\ti = 0;\n\t\twhile ((cell = cellsToDelete[i++])) {\n\t\t\tif (\n\t\t\t\t((focusedCell = cell.getPrevious()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell')) ||\n\t\t\t\t((focusedCell = cell.getNext()) &&\n\t\t\t\t\t!focusedCell.getCustomData('delete_cell'))\n\t\t\t) {\n\t\t\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\t\t\t\treturn focusedCell;\n\t\t\t}\n\t\t}\n\n\t\tCKEDITOR.dom.element.clearAllMarkers(database);\n\n\t\t// 2. then we check the toppest row (outside the selection area square) focusable cell\n\t\ttr = cellsToDelete[0].getParent();\n\t\tif ((tr = tr.getPrevious())) return tr.getLast();\n\n\t\t// 3. last we check the lowerest  row focusable cell\n\t\ttr = cellsToDelete[last].getParent();\n\t\tif ((tr = tr.getNext())) return tr.getChild(0);\n\n\t\treturn null;\n\t}\n\n\tfunction insertRow(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst doc = firstCell.getDocument();\n\n\t\tconst startRow = cells[0].getParent();\n\n\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst endRowIndex =\n\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\tconst endRow = new CKEDITOR.dom.element(table.$.rows[endRowIndex]);\n\n\t\tconst rowIndex = insertBefore ? startRowIndex : endRowIndex;\n\n\t\tconst row = insertBefore ? startRow : endRow;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneRow = map[rowIndex];\n\n\t\tconst nextRow = insertBefore ? map[rowIndex - 1] : map[rowIndex + 1];\n\n\t\tconst width = map[0].length;\n\n\t\tconst newRow = doc.createElement('tr');\n\t\tfor (let i = 0; cloneRow[i] && i < width; i++) {\n\t\t\tlet cell;\n\t\t\t// Check whether there's a spanning row here, do not break it.\n\t\t\tif (\n\t\t\t\tcloneRow[i].rowSpan > 1 &&\n\t\t\t\tnextRow &&\n\t\t\t\tcloneRow[i] == nextRow[i]\n\t\t\t) {\n\t\t\t\tcell = cloneRow[i];\n\t\t\t\tcell.rowSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneRow[i]).clone();\n\t\t\t\tcell.removeAttribute('rowSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tnewRow.append(cell);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\ti += cell.colSpan - 1;\n\t\t}\n\n\t\tif (insertBefore) {\n\t\t\tnewRow.insertBefore(row);\n\t\t} else {\n\t\t\tnewRow.insertAfter(row);\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(newRow.$).getChild(\n\t\t\tcells[0] ? cells[0].$.cellIndex : 0\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction deleteRows(selectionOrRow) {\n\t\tif (selectionOrRow instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cells = getSelectedCells(selectionOrRow);\n\n\t\t\tconst firstCell = cells[0];\n\n\t\t\tconst table = firstCell.getAscendant('table');\n\n\t\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\t\tconst startRow = cells[0].getParent();\n\n\t\t\tconst startRowIndex = startRow.$.rowIndex;\n\n\t\t\tconst lastCell = cells[cells.length - 1];\n\n\t\t\tconst endRowIndex =\n\t\t\t\tlastCell.getParent().$.rowIndex + lastCell.$.rowSpan - 1;\n\n\t\t\tconst rowsToDelete = [];\n\n\t\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\t\tfor (let i = startRowIndex; i <= endRowIndex; i++) {\n\t\t\t\tconst mapRow = map[i];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[i]);\n\n\t\t\t\tfor (let j = 0; j < mapRow.length; j++) {\n\t\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[j]);\n\n\t\t\t\t\tconst cellRowIndex = cell.getParent().$.rowIndex;\n\n\t\t\t\t\tif (cell.$.rowSpan == 1) cell.remove();\n\t\t\t\t\t// Row spanned cell.\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Span row of the cell, reduce spanning.\n\t\t\t\t\t\tcell.$.rowSpan -= 1;\n\t\t\t\t\t\t// Root row of the cell, root cell to next row.\n\t\t\t\t\t\tif (cellRowIndex == i) {\n\t\t\t\t\t\t\tconst nextMapRow = map[i + 1];\n\t\t\t\t\t\t\tif (nextMapRow[j - 1]) {\n\t\t\t\t\t\t\t\tcell.insertAfter(\n\t\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(nextMapRow[j - 1])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnew CKEDITOR.dom.element(\n\t\t\t\t\t\t\t\t\ttable.$.rows[i + 1]\n\t\t\t\t\t\t\t\t).append(cell, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tj += cell.$.colSpan - 1;\n\t\t\t\t}\n\n\t\t\t\trowsToDelete.push(row);\n\t\t\t}\n\n\t\t\tconst rows = table.$.rows;\n\n\t\t\t// Where to put the cursor after rows been deleted?\n\t\t\t// 1. Into next sibling row if any;\n\t\t\t// 2. Into previous sibling row if any;\n\t\t\t// 3. Into table's parent element if it's the very last row.\n\t\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\t\trows[endRowIndex + 1] ||\n\t\t\t\t\t(startRowIndex > 0 ? rows[startRowIndex - 1] : null) ||\n\t\t\t\t\ttable.$.parentNode\n\t\t\t);\n\n\t\t\tfor (let i = rowsToDelete.length; i >= 0; i--)\n\t\t\t\tdeleteRows(rowsToDelete[i]);\n\n\t\t\treturn cursorPosition;\n\t\t} else if (selectionOrRow instanceof CKEDITOR.dom.element) {\n\t\t\tconst table = selectionOrRow.getAscendant('table');\n\n\t\t\tif (table.$.rows.length == 1) table.remove();\n\t\t\telse selectionOrRow.remove();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getCellColIndex(cell, isStart) {\n\t\tconst row = cell.getParent();\n\n\t\tconst rowCells = row.$.cells;\n\n\t\tlet colIndex = 0;\n\t\tfor (let i = 0; i < rowCells.length; i++) {\n\t\t\tconst mapCell = rowCells[i];\n\t\t\tcolIndex += isStart ? 1 : mapCell.colSpan;\n\t\t\tif (mapCell == cell.$) break;\n\t\t}\n\n\t\treturn colIndex - 1;\n\t}\n\n\tfunction getColumnsIndices(cells, isStart) {\n\t\tlet retval = isStart ? Infinity : 0;\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst colIndex = getCellColIndex(cells[i], isStart);\n\t\t\tif (isStart ? colIndex < retval : colIndex > retval)\n\t\t\t\tretval = colIndex;\n\t\t}\n\t\treturn retval;\n\t}\n\n\tfunction insertColumn(editor, insertBefore) {\n\t\tconst selection = editor.getSelection();\n\n\t\tconst cells = getSelectedCells(selection);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst startCol = getColumnsIndices(cells, 1);\n\n\t\tconst lastCol = getColumnsIndices(cells);\n\n\t\tconst colIndex = insertBefore ? startCol : lastCol;\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst cloneCol = [];\n\n\t\tconst nextCol = [];\n\n\t\tconst height = map.length;\n\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tcloneCol.push(map[i][colIndex]);\n\t\t\tconst nextCell = insertBefore\n\t\t\t\t? map[i][colIndex - 1]\n\t\t\t\t: map[i][colIndex + 1];\n\t\t\tnextCol.push(nextCell);\n\t\t}\n\n\t\tconst insertedCells = [];\n\t\tfor (let i = 0; i < height; i++) {\n\t\t\tlet cell;\n\n\t\t\tif (!cloneCol[i]) continue;\n\n\t\t\t// Check whether there's a spanning column here, do not break it.\n\t\t\tif (cloneCol[i].colSpan > 1 && nextCol[i] == cloneCol[i]) {\n\t\t\t\tcell = cloneCol[i];\n\t\t\t\tcell.colSpan += 1;\n\t\t\t} else {\n\t\t\t\tcell = new CKEDITOR.dom.element(cloneCol[i]).clone();\n\t\t\t\tcell.removeAttribute('colSpan');\n\t\t\t\tcell.appendBogus();\n\t\t\t\tcell[insertBefore ? 'insertBefore' : 'insertAfter'].call(\n\t\t\t\t\tcell,\n\t\t\t\t\tnew CKEDITOR.dom.element(cloneCol[i])\n\t\t\t\t);\n\t\t\t\tcell = cell.$;\n\t\t\t}\n\n\t\t\tinsertedCells[i] = cell;\n\n\t\t\ti += cell.rowSpan - 1;\n\t\t}\n\n\t\tconst cell = new CKEDITOR.dom.element(\n\t\t\tinsertedCells[firstCell.getParent().$.rowIndex]\n\t\t);\n\t\tselectElement(editor, cell);\n\t}\n\n\tfunction selectElement(editor, element) {\n\t\tconst range = editor.createRange();\n\n\t\trange.moveToPosition(element, CKEDITOR.POSITION_AFTER_START);\n\t\teditor.getSelection().selectRanges([range]);\n\t}\n\n\tfunction deleteColumns(selectionOrCell) {\n\t\tconst cells = getSelectedCells(selectionOrCell);\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst lastCell = cells[cells.length - 1];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tlet startColIndex;\n\n\t\tlet endColIndex;\n\n\t\tconst rowsToDelete = [];\n\n\t\tlet rows;\n\n\t\t// Figure out selected cells' column indices.\n\t\tfor (let i = 0, rows = map.length; i < rows; i++) {\n\t\t\t// eslint-disable-next-line sort-vars\n\t\t\tfor (let j = 0, cols = map[i].length; j < cols; j++) {\n\t\t\t\tif (map[i][j] == firstCell.$) startColIndex = j;\n\t\t\t\tif (map[i][j] == lastCell.$) endColIndex = j;\n\t\t\t}\n\t\t}\n\n\t\t// Delete cell or reduce cell spans by checking through the table map.\n\t\tfor (let i = startColIndex; i <= endColIndex; i++) {\n\t\t\tfor (let j = 0; j < map.length; j++) {\n\t\t\t\tconst mapRow = map[j];\n\n\t\t\t\tconst row = new CKEDITOR.dom.element(table.$.rows[j]);\n\n\t\t\t\tconst cell = new CKEDITOR.dom.element(mapRow[i]);\n\n\t\t\t\tif (cell.$) {\n\t\t\t\t\tif (cell.$.colSpan == 1) cell.remove();\n\t\t\t\t\t// Reduce the col spans.\n\t\t\t\t\telse cell.$.colSpan -= 1;\n\n\t\t\t\t\tj += cell.$.rowSpan - 1;\n\n\t\t\t\t\tif (!row.$.cells.length) rowsToDelete.push(row);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst firstRowCells = table.$.rows[0] && table.$.rows[0].cells;\n\n\t\t// Where to put the cursor after columns been deleted?\n\t\t// 1. Into next cell of the first row if any;\n\t\t// 2. Into previous cell of the first row if any;\n\t\t// 3. Into table's parent element;\n\t\tconst cursorPosition = new CKEDITOR.dom.element(\n\t\t\tfirstRowCells[startColIndex] ||\n\t\t\t\t(startColIndex\n\t\t\t\t\t? firstRowCells[startColIndex - 1]\n\t\t\t\t\t: table.$.parentNode)\n\t\t);\n\n\t\t// Delete table rows only if all columns are gone (do not remove empty row).\n\t\tif (rowsToDelete.length == rows) table.remove();\n\n\t\treturn cursorPosition;\n\t}\n\n\tfunction insertCell(selection, insertBefore) {\n\t\tconst startElement = selection.getStartElement();\n\t\tconst cell =\n\t\t\tstartElement.getAscendant('td', 1) ||\n\t\t\tstartElement.getAscendant('th', 1);\n\n\t\tif (!cell) return;\n\n\t\t// Create the new cell element to be added.\n\t\tconst newCell = cell.clone();\n\t\tnewCell.appendBogus();\n\n\t\tif (insertBefore) newCell.insertBefore(cell);\n\t\telse newCell.insertAfter(cell);\n\t}\n\n\tfunction deleteCells(selectionOrCell) {\n\t\tif (selectionOrCell instanceof CKEDITOR.dom.selection) {\n\t\t\tconst cellsToDelete = getSelectedCells(selectionOrCell);\n\t\t\tconst table =\n\t\t\t\tcellsToDelete[0] && cellsToDelete[0].getAscendant('table');\n\t\t\tconst cellToFocus = getFocusElementAfterDelCells(cellsToDelete);\n\n\t\t\tfor (let i = cellsToDelete.length - 1; i >= 0; i--)\n\t\t\t\tdeleteCells(cellsToDelete[i]);\n\n\t\t\tif (cellToFocus) placeCursorInCell(cellToFocus, true);\n\t\t\telse if (table) table.remove();\n\t\t} else if (selectionOrCell instanceof CKEDITOR.dom.element) {\n\t\t\tconst tr = selectionOrCell.getParent();\n\t\t\tif (tr.getChildCount() == 1) tr.remove();\n\t\t\telse selectionOrCell.remove();\n\t\t}\n\t}\n\n\t// Remove filler at end and empty spaces around the cell content.\n\tfunction trimCell(cell) {\n\t\tconst bogus = cell.getBogus();\n\t\tif (bogus) {\n\t\t\tbogus.remove();\n\t\t}\n\t\tcell.trim();\n\t}\n\n\tfunction placeCursorInCell(cell, placeAtEnd) {\n\t\tconst docInner = cell.getDocument();\n\n\t\tconst docOuter = CKEDITOR.document;\n\n\t\t// Fixing \"Unspecified error\" thrown in IE10 by resetting\n\t\t// selection the dirty and shameful way (#10308).\n\t\t// We can not apply this hack to IE8 because\n\t\t// it causes error (#11058).\n\t\tif (CKEDITOR.env.ie && CKEDITOR.env.version == 10) {\n\t\t\tdocOuter.focus();\n\t\t\tdocInner.focus();\n\t\t}\n\n\t\tconst range = new CKEDITOR.dom.range(docInner);\n\t\tif (\n\t\t\t!range['moveToElementEdit' + (placeAtEnd ? 'End' : 'Start')](cell)\n\t\t) {\n\t\t\trange.selectNodeContents(cell);\n\t\t\trange.collapse(placeAtEnd ? false : true);\n\t\t}\n\t\trange.select(true);\n\t}\n\n\tfunction cellInRow(tableMap, rowIndex, cell) {\n\t\tconst oRow = tableMap[rowIndex];\n\t\tif (typeof cell == 'undefined') return oRow;\n\n\t\tfor (let c = 0; oRow && c < oRow.length; c++) {\n\t\t\tif (cell.is && oRow[c] == cell.$) return c;\n\t\t\telse if (c == cell) return new CKEDITOR.dom.element(oRow[c]);\n\t\t}\n\t\treturn cell.is ? -1 : null;\n\t}\n\n\tfunction cellInCol(tableMap, colIndex) {\n\t\tconst oCol = [];\n\t\tfor (let r = 0; r < tableMap.length; r++) {\n\t\t\tconst row = tableMap[r];\n\t\t\toCol.push(row[colIndex]);\n\n\t\t\t// Avoid adding duplicate cells.\n\t\t\tif (row[colIndex].rowSpan > 1) r += row[colIndex].rowSpan - 1;\n\t\t}\n\t\treturn oCol;\n\t}\n\n\tfunction mergeCells(selection, mergeDirection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\n\t\t// Invalid merge request if:\n\t\t// 1. In batch mode despite that less than two selected.\n\t\t// 2. In solo mode while not exactly only one selected.\n\t\t// 3. Cells distributed in different table groups (e.g. from both thead and tbody).\n\t\tlet commonAncestor;\n\t\tif (\n\t\t\t(mergeDirection ? cells.length != 1 : cells.length < 2) ||\n\t\t\t((commonAncestor = selection.getCommonAncestor()) &&\n\t\t\t\tcommonAncestor.type == CKEDITOR.NODE_ELEMENT &&\n\t\t\t\tcommonAncestor.is('table'))\n\t\t)\n\t\t\treturn false;\n\n\t\tlet cell;\n\n\t\tconst firstCell = cells[0];\n\n\t\tconst table = firstCell.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst mapHeight = map.length;\n\n\t\tconst mapWidth = map[0].length;\n\n\t\tconst startRow = firstCell.getParent().$.rowIndex;\n\n\t\tconst startColumn = cellInRow(map, startRow, firstCell);\n\n\t\tif (mergeDirection) {\n\t\t\tlet targetCell;\n\t\t\ttry {\n\t\t\t\tconst rowspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('rowspan'), 10) || 1;\n\t\t\t\tconst colspan =\n\t\t\t\t\tparseInt(firstCell.getAttribute('colspan'), 10) || 1;\n\n\t\t\t\ttargetCell =\n\t\t\t\t\tmap[\n\t\t\t\t\t\tmergeDirection == 'up'\n\t\t\t\t\t\t\t? startRow - rowspan\n\t\t\t\t\t\t\t: mergeDirection == 'down'\n\t\t\t\t\t\t\t? startRow + rowspan\n\t\t\t\t\t\t\t: startRow\n\t\t\t\t\t][\n\t\t\t\t\t\tmergeDirection == 'left'\n\t\t\t\t\t\t\t? startColumn - colspan\n\t\t\t\t\t\t\t: mergeDirection == 'right'\n\t\t\t\t\t\t\t? startColumn + colspan\n\t\t\t\t\t\t\t: startColumn\n\t\t\t\t\t];\n\t\t\t} catch (er) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// 1. No cell could be merged.\n\t\t\t// 2. Same cell actually.\n\t\t\tif (!targetCell || firstCell.$ == targetCell) return false;\n\n\t\t\t// Sort in map order regardless of the DOM sequence.\n\t\t\tcells[\n\t\t\t\tmergeDirection == 'up' || mergeDirection == 'left'\n\t\t\t\t\t? 'unshift'\n\t\t\t\t\t: 'push'\n\t\t\t](new CKEDITOR.dom.element(targetCell));\n\t\t}\n\n\t\t// Start from here are merging way ignorance (merge up/right, batch merge).\n\t\tconst doc = firstCell.getDocument();\n\n\t\tlet lastRowIndex = startRow;\n\n\t\tlet totalRowSpan = 0;\n\n\t\tlet totalColSpan = 0;\n\n\t\t// Use a documentFragment as buffer when appending cell contents.\n\n\t\tconst frag = !isDetect && new CKEDITOR.dom.documentFragment(doc);\n\n\t\tlet dimension = 0;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tcell = cells[i];\n\n\t\t\tconst tr = cell.getParent();\n\n\t\t\tconst cellFirstChild = cell.getFirst();\n\n\t\t\tconst colSpan = cell.$.colSpan;\n\n\t\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\t\t// Accumulated the actual places taken by all selected cells.\n\t\t\tdimension += colSpan * rowSpan;\n\t\t\t// Accumulated the maximum virtual spans from column and row.\n\t\t\ttotalColSpan = Math.max(\n\t\t\t\ttotalColSpan,\n\t\t\t\tcolIndex - startColumn + colSpan\n\t\t\t);\n\t\t\ttotalRowSpan = Math.max(\n\t\t\t\ttotalRowSpan,\n\t\t\t\trowIndex - startRow + rowSpan\n\t\t\t);\n\n\t\t\tif (!isDetect) {\n\t\t\t\t// Trim all cell fillers and check to remove empty cells.\n\t\t\t\tif ((trimCell(cell), cell.getChildren().count())) {\n\t\t\t\t\t// Merge vertically cells as two separated paragraphs.\n\t\t\t\t\tif (\n\t\t\t\t\t\trowIndex != lastRowIndex &&\n\t\t\t\t\t\tcellFirstChild &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary &&\n\t\t\t\t\t\t\tcellFirstChild.isBlockBoundary({br: 1})\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst last = frag.getLast(\n\t\t\t\t\t\t\tCKEDITOR.dom.walker.whitespaces(true)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (last && !(last.is && last.is('br')))\n\t\t\t\t\t\t\tfrag.append('br');\n\t\t\t\t\t}\n\n\t\t\t\t\tcell.moveChildren(frag);\n\t\t\t\t}\n\t\t\t\tif (i) {\n\t\t\t\t\tcell.remove();\n\t\t\t\t} else {\n\t\t\t\t\tcell.setHtml('');\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastRowIndex = rowIndex;\n\t\t}\n\n\t\tif (!isDetect) {\n\t\t\tfrag.moveChildren(firstCell);\n\n\t\t\tfirstCell.appendBogus();\n\n\t\t\tif (totalColSpan >= mapWidth) firstCell.removeAttribute('rowSpan');\n\t\t\telse firstCell.$.rowSpan = totalRowSpan;\n\n\t\t\tif (totalRowSpan >= mapHeight) firstCell.removeAttribute('colSpan');\n\t\t\telse firstCell.$.colSpan = totalColSpan;\n\n\t\t\t// Swip empty <tr> left at the end of table due to the merging.\n\t\t\tconst trs = new CKEDITOR.dom.nodeList(table.$.rows);\n\n\t\t\tlet count = trs.count();\n\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\n\t\t\t\tconst tailTr = trs.getItem(i);\n\t\t\t\tif (!tailTr.$.cells.length) {\n\t\t\t\t\ttailTr.remove();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn firstCell;\n\t\t}\n\t\t// Be able to merge cells only if actual dimension of selected\n\t\t// cells equals to the caculated rectangle.\n\t\telse {\n\t\t\treturn totalRowSpan * totalColSpan == dimension;\n\t\t}\n\t}\n\n\tfunction verticalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst rowSpan = cell.$.rowSpan;\n\n\t\tlet newCell;\n\n\t\tlet newRowSpan;\n\n\t\tlet newCellRowSpan;\n\n\t\tlet newRowIndex;\n\n\t\tif (rowSpan > 1) {\n\t\t\tnewRowSpan = Math.ceil(rowSpan / 2);\n\t\t\tnewCellRowSpan = Math.floor(rowSpan / 2);\n\t\t\tnewRowIndex = rowIndex + newRowSpan;\n\t\t\tconst newCellTr = new CKEDITOR.dom.element(\n\t\t\t\ttable.$.rows[newRowIndex]\n\t\t\t);\n\n\t\t\tconst newCellRow = cellInRow(map, newRowIndex);\n\n\t\t\tlet candidateCell;\n\n\t\t\tnewCell = cell.clone();\n\n\t\t\t// Figure out where to insert the new cell by checking the vitual row.\n\t\t\tfor (let c = 0; c < newCellRow.length; c++) {\n\t\t\t\tcandidateCell = newCellRow[c];\n\t\t\t\t// Catch first cell actually following the column.\n\t\t\t\tif (candidateCell.parentNode == newCellTr.$ && c > colIndex) {\n\t\t\t\t\tnewCell.insertBefore(\n\t\t\t\t\t\tnew CKEDITOR.dom.element(candidateCell)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcandidateCell = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The destination row is empty, append at will.\n\t\t\tif (!candidateCell) newCellTr.append(newCell);\n\t\t} else {\n\t\t\tnewCellRowSpan = newRowSpan = 1;\n\n\t\t\tconst newCellTr = tr.clone();\n\t\t\tnewCellTr.insertAfter(tr);\n\t\t\tnewCellTr.append((newCell = cell.clone()));\n\n\t\t\tconst cellsInSameRow = cellInRow(map, rowIndex);\n\t\t\tfor (let i = 0; i < cellsInSameRow.length; i++)\n\t\t\t\tcellsInSameRow[i].rowSpan++;\n\t\t}\n\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.rowSpan = newRowSpan;\n\t\tnewCell.$.rowSpan = newCellRowSpan;\n\t\tif (newRowSpan == 1) cell.removeAttribute('rowSpan');\n\t\tif (newCellRowSpan == 1) newCell.removeAttribute('rowSpan');\n\n\t\treturn newCell;\n\t}\n\n\tfunction horizontalSplitCell(selection, isDetect) {\n\t\tconst cells = getSelectedCells(selection);\n\t\tif (cells.length > 1) return false;\n\t\telse if (isDetect) return true;\n\n\t\tconst cell = cells[0];\n\n\t\tconst tr = cell.getParent();\n\n\t\tconst table = tr.getAscendant('table');\n\n\t\tconst map = CKEDITOR.tools.buildTableMap(table);\n\n\t\tconst rowIndex = tr.$.rowIndex;\n\n\t\tconst colIndex = cellInRow(map, rowIndex, cell);\n\n\t\tconst colSpan = cell.$.colSpan;\n\n\t\tlet newColSpan;\n\n\t\tlet newCellColSpan;\n\n\t\tif (colSpan > 1) {\n\t\t\tnewColSpan = Math.ceil(colSpan / 2);\n\t\t\tnewCellColSpan = Math.floor(colSpan / 2);\n\t\t} else {\n\t\t\tnewCellColSpan = newColSpan = 1;\n\t\t\tconst cellsInSameCol = cellInCol(map, colIndex);\n\t\t\tfor (let i = 0; i < cellsInSameCol.length; i++)\n\t\t\t\tcellsInSameCol[i].colSpan++;\n\t\t}\n\t\tconst newCell = cell.clone();\n\t\tnewCell.insertAfter(cell);\n\t\tnewCell.appendBogus();\n\n\t\tcell.$.colSpan = newColSpan;\n\t\tnewCell.$.colSpan = newCellColSpan;\n\t\tif (newColSpan == 1) cell.removeAttribute('colSpan');\n\t\tif (newCellColSpan == 1) newCell.removeAttribute('colSpan');\n\n\t\treturn newCell;\n\t}\n\n\tCKEDITOR.plugins.add('ae_tabletools', {\n\t\tinit(editor) {\n\t\t\tfunction createDef(def) {\n\t\t\t\treturn CKEDITOR.tools.extend(def || {}, {\n\t\t\t\t\tcontextSensitive: 1,\n\t\t\t\t\trefresh(editor, path) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\tpath.contains({td: 1, th: 1}, 1)\n\t\t\t\t\t\t\t\t? CKEDITOR.TRISTATE_OFF\n\t\t\t\t\t\t\t\t: CKEDITOR.TRISTATE_DISABLED\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tfunction addCmd(name, def) {\n\t\t\t\tlet cmd = editor.getCommand(name);\n\n\t\t\t\tif (cmd) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcmd = editor.addCommand(name, def);\n\t\t\t\teditor.addFeature(cmd);\n\t\t\t}\n\n\t\t\taddCmd(\n\t\t\t\t'rowDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tplaceCursorInCell(deleteRows(selection));\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'rowInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertRow(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tconst element = deleteColumns(selection);\n\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\tplaceCursorInCell(element, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'columnInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tinsertColumn(editor);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellDelete',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tdeleteCells(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMerge',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan,rowspan]',\n\t\t\t\t\trequiredContent: 'td[colspan,rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection()),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeRight',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'right'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellMergeDown',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tmergeCells(editor.getSelection(), 'down'),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellVerticalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[rowspan]',\n\t\t\t\t\trequiredContent: 'td[rowspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\tverticalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellHorizontalSplit',\n\t\t\t\tcreateDef({\n\t\t\t\t\tallowedContent: 'td[colspan]',\n\t\t\t\t\trequiredContent: 'td[colspan]',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tplaceCursorInCell(\n\t\t\t\t\t\t\thorizontalSplitCell(editor.getSelection())\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertBefore',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection, true);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\n\t\t\taddCmd(\n\t\t\t\t'cellInsertAfter',\n\t\t\t\tcreateDef({\n\t\t\t\t\trequiredContent: 'table',\n\t\t\t\t\texec(editor) {\n\t\t\t\t\t\tconst selection = editor.getSelection();\n\t\t\t\t\t\tinsertCell(selection);\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\n\t\tgetSelectedCells,\n\t});\n}\n\n/**\n * Create a two-dimension array that reflects the actual layout of table cells,\n * with cell spans, with mappings to the original td elements.\n *\n * @param {CKEDITOR.dom.element} table\n * @member CKEDITOR.tools\n */\nCKEDITOR.tools.buildTableMap = function(table) {\n\tconst aRows = table.$.rows;\n\n\t// Row and Column counters.\n\tlet r = -1;\n\n\tconst aMap = [];\n\n\tfor (let i = 0; i < aRows.length; i++) {\n\t\tr++;\n\t\tif (!aMap[r]) {\n\t\t\taMap[r] = [];\n\t\t}\n\n\t\tlet c = -1;\n\n\t\tfor (let j = 0; j < aRows[i].cells.length; j++) {\n\t\t\tconst oCell = aRows[i].cells[j];\n\n\t\t\tc++;\n\t\t\twhile (aMap[r][c]) c++;\n\n\t\t\tconst iColSpan = isNaN(oCell.colSpan) ? 1 : oCell.colSpan;\n\t\t\tconst iRowSpan = isNaN(oCell.rowSpan) ? 1 : oCell.rowSpan;\n\n\t\t\tfor (let rs = 0; rs < iRowSpan; rs++) {\n\t\t\t\tif (!aMap[r + rs]) aMap[r + rs] = [];\n\n\t\t\t\tfor (let cs = 0; cs < iColSpan; cs++) {\n\t\t\t\t\taMap[r + rs][c + cs] = aRows[i].cells[j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc += iColSpan - 1;\n\t\t}\n\t}\n\treturn aMap;\n};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport './button.jsx';\n\nimport './menu-button.jsx';\n\nimport './menu.jsx';\n\nimport './panel-menu-button.jsx';\n\nimport './richcombo.jsx';\n\nimport './uibridge';\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_buttonbridge')) {\n\tconst BUTTON_DEFS = {};\n\n\t/**\n\t * Generates a ButtonBridge React class for a given button definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateButtonBridge\n\t * @param {String} buttonName The button's name\n\t * @param {Object} buttonDefinition The button's definition\n\t * @return {Object} The generated or already existing React Button Class\n\t */\n\n\tfunction generateButtonBridge(buttonName, buttonDefinition, editor) {\n\t\tlet ButtonBridge = AlloyEditor.Buttons[buttonName];\n\n\t\tBUTTON_DEFS[editor.name] = BUTTON_DEFS[editor.name] || {};\n\t\tBUTTON_DEFS[editor.name][buttonName] =\n\t\t\tBUTTON_DEFS[editor.name][buttonName] || buttonDefinition;\n\n\t\tif (!ButtonBridge) {\n\t\t\tButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = buttonName;\n\n\t\t\t\tstatic key = buttonName;\n\n\t\t\t\t// API not yet implemented inside the button\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst buttonDisplayName =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].name ||\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command ||\n\t\t\t\t\t\tbuttonName;\n\n\t\t\t\t\tconst buttonLabel =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].label;\n\n\t\t\t\t\tconst buttonType = 'button-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconClassName = 'ae-icon-' + buttonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tbuttonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-label={buttonLabel}\n\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\tdata-type={buttonType}\n\t\t\t\t\t\t\tonClick={this._handleClick}\n\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\ttitle={buttonLabel}>\n\t\t\t\t\t\t\t<span className={iconClassName} style={iconStyle} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_handleClick = () => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst buttonCommand =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].command;\n\n\t\t\t\t\tconst buttonOnClick =\n\t\t\t\t\t\tBUTTON_DEFS[editor.name][buttonName].onClick;\n\n\t\t\t\t\tif (buttonOnClick) {\n\t\t\t\t\t\tbuttonOnClick.call(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditor.execCommand(buttonCommand);\n\t\t\t\t\t}\n\n\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[buttonName] = ButtonBridge;\n\t\t}\n\n\t\treturn ButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('button')) {\n\t\tCKEDITOR.UI_BUTTON = 'button';\n\n\t\tCKEDITOR.plugins.add('button', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Button plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_BUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_buttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_buttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addButton = function(buttonName, buttonDefinition) {\n\t\t\t\tthis.add(buttonName, CKEDITOR.UI_BUTTON, buttonDefinition);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_BUTTON, {\n\t\t\t\tadd: generateButtonBridge,\n\t\t\t\tcreate(buttonDefinition) {\n\t\t\t\t\tconst buttonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst ButtonBridge = generateButtonBridge(\n\t\t\t\t\t\tbuttonName,\n\t\t\t\t\t\tbuttonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new ButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubuttonbridge')) {\n\tconst MENUBUTTON_DEFS = {};\n\n\t/**\n\t * Generates a MenuButtonBridge React class for a given menuButton definition if it has not been\n\t * already created based on the button name and definition.\n\t *\n\t * @private\n\t * @method generateMenuButtonBridge\n\t * @param {String} menuButtonName The menuButton's name\n\t * @param {Object} menuButtonDefinition The menuButton's definition\n\t * @return {Object} The generated or already existing React MenuButton Class\n\t */\n\tfunction generateMenuButtonBridge(\n\t\tmenuButtonName,\n\t\tmenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet MenuButtonBridge = AlloyEditor.Buttons[menuButtonName];\n\n\t\tMENUBUTTON_DEFS[editor.name] = MENUBUTTON_DEFS[editor.name] || {};\n\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] =\n\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName] ||\n\t\t\tmenuButtonDefinition;\n\n\t\tif (!MenuButtonBridge) {\n\t\t\tMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = menuButtonName;\n\n\t\t\t\tstatic key = menuButtonName;\n\n\t\t\t\t// API not yet implemented inside the menubutton\n\t\t\t\t// bridge. By mocking the unsupported method, we prevent\n\t\t\t\t// plugins from crashing if they make use of it.\n\t\t\t\ttoFeature() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].name ||\n\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName].command ||\n\t\t\t\t\t\tmenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tMENUBUTTON_DEFS[editor.name][menuButtonName]\n\t\t\t\t\t\t\t\t\t\t.label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getMenuItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getMenuItems() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\t\t\t\t\tconst items = menuButtonDefinition.onMenu();\n\t\t\t\t\tconst menuItems = Object.keys(items).map(key => {\n\t\t\t\t\t\tconst menuItem = editor.getMenuItem(key);\n\n\t\t\t\t\t\tif (!menuItem) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst menuItemDefinition =\n\t\t\t\t\t\t\tmenuItem.definition || menuItem;\n\t\t\t\t\t\tconst menuItemState = items[key];\n\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(menuItemState === CKEDITOR.TRISTATE_ON\n\t\t\t\t\t\t\t\t? 'active'\n\t\t\t\t\t\t\t\t: '');\n\t\t\t\t\t\tconst disabled =\n\t\t\t\t\t\t\tmenuItemState === CKEDITOR.TRISTATE_DISABLED;\n\t\t\t\t\t\tconst onClick = function() {\n\t\t\t\t\t\t\tif (menuItemDefinition.command) {\n\t\t\t\t\t\t\t\teditor.execCommand(menuItemDefinition.command);\n\t\t\t\t\t\t\t} else if (menuItemDefinition.onClick) {\n\t\t\t\t\t\t\t\tmenuItemDefinition.onClick.apply(\n\t\t\t\t\t\t\t\t\tmenuItemDefinition\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={menuItem.name} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t\tonClick={onClick}>\n\t\t\t\t\t\t\t\t\t{menuItemDefinition.label}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn menuItems;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[menuButtonName] = MenuButtonBridge;\n\t\t}\n\n\t\treturn MenuButtonBridge;\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('menubutton')) {\n\t\tCKEDITOR.UI_MENU_BUTTON = 'menubutton';\n\n\t\tCKEDITOR.plugins.add('menubutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor MenuButton plugin. It takes over the\n\t * responsibility of registering and creating menuButtons via:\n\t * - editor.ui.addMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_MENUBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @requires CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubuttonbridge', {\n\t\trequires: ['ae_uibridge', 'ae_menubridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_MENUBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addMenuButton = function(\n\t\t\t\tmenuButtonName,\n\t\t\t\tmenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tmenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_MENUBUTTON,\n\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_MENUBUTTON, {\n\t\t\t\tadd: generateMenuButtonBridge,\n\t\t\t\tcreate(menuButtonDefinition) {\n\t\t\t\t\tconst menuButtonName =\n\t\t\t\t\t\t'buttonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst MenuButtonBridge = generateMenuButtonBridge(\n\t\t\t\t\t\tmenuButtonName,\n\t\t\t\t\t\tmenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new MenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_menubridge')) {\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor Menu plugin. It takes over the\n\t * responsibility of adding, removing and retrieving menu groups and items\n\t * - editor.addMenuGroup(name, order)\n\t * - editor.addMenuItem(name, definition)\n\t * - editor.addMenuItems(definitions)\n\t * - editor.getMenuItem(name)\n\t * - editor.removeMenuItem(name)\n\t *\n\t * @class CKEDITOR.plugins.ae_menubridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_menubridge', {\n\t\t/**\n\t\t * Set the add handler for UI_BUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present.\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\t// Do nothing if the real menu plugin is present\n\t\t\tif (CKEDITOR.plugins.get('menu')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst groups = [];\n\t\t\tconst groupsOrder = (editor._.menuGroups = {});\n\t\t\tconst menuItems = (editor._.menuItems = {});\n\n\t\t\tfor (let i = 0; i < groups.length; i++) {\n\t\t\t\tgroupsOrder[groups[i]] = i + 1;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Registers an item group to the editor context menu in order to make it\n\t\t\t * possible to associate it with menu items later.\n\t\t\t *\n\t\t\t * @method addMenuGroup\n\t\t\t * @param {String} name Specify a group name.\n\t\t\t * @param {Number} [order=100] Define the display sequence of this group\n\t\t\t * inside the menu. A smaller value gets displayed first.\n\t\t\t */\n\t\t\teditor.addMenuGroup = function(name, order) {\n\t\t\t\tgroupsOrder[name] = order || 100;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds an item from the specified definition to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItem\n\t\t\t * @param {String} name The menu item name.\n\t\t\t * @param {Object} definition The menu item definition.\n\t\t\t */\n\t\t\teditor.addMenuItem = function(name, definition) {\n\t\t\t\tif (groupsOrder[definition.group]) {\n\t\t\t\t\tmenuItems[name] = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tdefinition,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Adds one or more items from the specified definition object to the editor context menu.\n\t\t\t *\n\t\t\t * @method addMenuItems\n\t\t\t * @param {Object} definitions Object where keys are used as itemName and corresponding values as definition for a {@link #addMenuItem} call.\n\t\t\t */\n\t\t\teditor.addMenuItems = function(definitions) {\n\t\t\t\tfor (const itemName in definitions) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\tdefinitions,\n\t\t\t\t\t\t\titemName\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.addMenuItem(itemName, definitions[itemName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Retrieves a particular menu item definition from the editor context menu.\n\t\t\t *\n\t\t\t * @method getMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t * @return {Object}\n\t\t\t */\n\t\t\teditor.getMenuItem = function(name) {\n\t\t\t\treturn menuItems[name];\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Removes a particular menu item added before from the editor context menu.\n\t\t\t *\n\t\t\t * @method  removeMenuItem\n\t\t\t * @param {String} name The name of the desired menu item.\n\t\t\t */\n\t\t\teditor.removeMenuItem = function(name) {\n\t\t\t\tdelete menuItems[name];\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_panelmenubuttonbridge')) {\n\tconst PANEL_MENU_DEFS = {};\n\n\t/**\n\t * Generates a PanelMenuButtonBridge React class for a given panelmenubutton definition if it has not been\n\t * already created based on the panelmenubutton name and definition.\n\t *\n\t * @private\n\t * @method generatePanelMenuButtonBridge\n\t * @param {String} panelMenuButtonName The panel button name\n\t * @param {Object} panelMenuButtonDefinition The panel button definition\n\t * @return {Object} The generated or already existing React PanelMenuButton Class\n\t */\n\tconst generatePanelMenuButtonBridge = function(\n\t\tpanelMenuButtonName,\n\t\tpanelMenuButtonDefinition,\n\t\teditor\n\t) {\n\t\tlet PanelMenuButtonBridge = AlloyEditor.Buttons[panelMenuButtonName];\n\n\t\tPANEL_MENU_DEFS[editor.name] = PANEL_MENU_DEFS[editor.name] || {};\n\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] =\n\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName] ||\n\t\t\tpanelMenuButtonDefinition;\n\n\t\tif (!PanelMenuButtonBridge) {\n\t\t\tPanelMenuButtonBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = panelMenuButtonName;\n\n\t\t\t\tstatic key = panelMenuButtonName;\n\n\t\t\t\t// API not yet implemented inside the panel menu button bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcreatePanel() {}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonDisplayName =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.name ||\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.command ||\n\t\t\t\t\t\tpanelMenuButtonName;\n\n\t\t\t\t\tconst buttonClassName = 'ae-button ae-button-bridge';\n\n\t\t\t\t\tconst iconClassName =\n\t\t\t\t\t\t'ae-icon-' + panelMenuButtonDisplayName;\n\n\t\t\t\t\tconst iconStyle = {};\n\n\t\t\t\t\tconst cssStyle = CKEDITOR.skin.getIconStyle(\n\t\t\t\t\t\tpanelMenuButtonDisplayName\n\t\t\t\t\t);\n\n\t\t\t\t\tif (cssStyle) {\n\t\t\t\t\t\tconst cssStyleParts = cssStyle.split(';');\n\n\t\t\t\t\t\ticonStyle.backgroundImage = cssStyleParts[0].substring(\n\t\t\t\t\t\t\tcssStyleParts[0].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundPosition = cssStyleParts[1].substring(\n\t\t\t\t\t\t\tcssStyleParts[1].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticonStyle.backgroundSize = cssStyleParts[2].substring(\n\t\t\t\t\t\t\tcssStyleParts[2].indexOf(':') + 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet panel;\n\n\t\t\t\t\tif (this.props.expanded) {\n\t\t\t\t\t\tpanel = this._getPanel();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tclassName={buttonClassName}\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][\n\t\t\t\t\t\t\t\t\t\tpanelMenuButtonName\n\t\t\t\t\t\t\t\t\t].label\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={iconClassName}\n\t\t\t\t\t\t\t\t\tstyle={iconStyle}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{panel}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_getPanel() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst panelMenuButtonOnBlock =\n\t\t\t\t\t\tPANEL_MENU_DEFS[editor.name][panelMenuButtonName]\n\t\t\t\t\t\t\t.onBlock;\n\n\t\t\t\t\tconst panel = {\n\t\t\t\t\t\thide: this.props.toggleDropdown,\n\t\t\t\t\t\tshow: this.props.toggleDropdown,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst blockElement = new CKEDITOR.dom.element('div');\n\n\t\t\t\t\tconst block = {\n\t\t\t\t\t\telement: blockElement,\n\t\t\t\t\t\tkeys: {},\n\t\t\t\t\t};\n\n\t\t\t\t\t/* istanbul ignore else */\n\t\t\t\t\tif (panelMenuButtonOnBlock) {\n\t\t\t\t\t\tpanelMenuButtonOnBlock.call(this, panel, block);\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO\n\t\t\t\t\t// Use block.keys to configure the panel keyboard navigation\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ButtonDropdown onDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={blockElement.getAttribute('class')}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t__html: blockElement.getHtml(),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[panelMenuButtonName] = PanelMenuButtonBridge;\n\t\t}\n\n\t\treturn PanelMenuButtonBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelmenubutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelmenubutton';\n\n\t\tCKEDITOR.plugins.add('panelmenubutton', {});\n\t}\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('panelbutton')) {\n\t\tCKEDITOR.UI_PANELBUTTON = 'panelbutton';\n\n\t\tCKEDITOR.plugins.add('panelbutton', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor PanelButton plugin. It takes over the\n\t * responsibility of registering and creating buttons via:\n\t * - editor.ui.addPanelMenuButton(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_PANELBUTTON, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_panelmenubuttonbridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_panelmenubuttonbridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_PANELBUTTON to our own. We do this in the init phase to override\n\t\t * the one in the native plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addPanelMenuButton = function(\n\t\t\t\tpanelMenuButtonName,\n\t\t\t\tpanelMenuButtonDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\tCKEDITOR.UI_PANELBUTTON,\n\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_PANELBUTTON, {\n\t\t\t\tadd: generatePanelMenuButtonBridge,\n\t\t\t\tcreate(panelMenuButtonDefinition) {\n\t\t\t\t\tconst panelMenuButtonName =\n\t\t\t\t\t\t'panelMenuButtonBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst PanelMenuButtonBridge = generatePanelMenuButtonBridge(\n\t\t\t\t\t\tpanelMenuButtonName,\n\t\t\t\t\t\tpanelMenuButtonDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new PanelMenuButtonBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport React from 'react';\n\nimport EditorContext from '../../adapter/editor-context';\nimport ButtonDropdown from '../buttons/button-dropdown.jsx';\nimport ButtonIcon from '../buttons/button-icon.jsx';\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_richcombobridge')) {\n\tconst RICH_COMBO_DEFS = {};\n\n\t/**\n\t * Generates a RichComboBridge React class for a given richcombo definition if it has not been\n\t * already created based on the richcombo name and definition.\n\t *\n\t * @method generateRichComboBridge\n\t * @private\n\t * @param {String} richComboName The rich combo name\n\t * @param {Object} richComboDefinition The rich combo definition\n\t * @return {Object} The generated or already existing React RichCombo Class\n\t */\n\tconst generateRichComboBridge = function(\n\t\trichComboName,\n\t\trichComboDefinition,\n\t\teditor\n\t) {\n\t\tlet RichComboBridge = AlloyEditor.Buttons[richComboName];\n\n\t\tRICH_COMBO_DEFS[editor.name] = RICH_COMBO_DEFS[editor.name] || {};\n\t\tRICH_COMBO_DEFS[editor.name][richComboName] =\n\t\t\tRICH_COMBO_DEFS[editor.name][richComboName] || richComboDefinition;\n\t\tRICH_COMBO_DEFS[editor.name][richComboName].currentValue = undefined;\n\n\t\tif (!RichComboBridge) {\n\t\t\tRichComboBridge = class extends React.Component {\n\t\t\t\tstatic contextType = EditorContext;\n\n\t\t\t\tstatic displayName = richComboName;\n\n\t\t\t\tstatic key = richComboName;\n\n\t\t\t\tconstructor(props) {\n\t\t\t\t\tsuper(props);\n\t\t\t\t\tthis.state = {\n\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t\t.currentValue,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// API not yet implemented inside the richcombo bridge. By mocking the unsupported methods, we\n\t\t\t\t// prevent plugins from crashing if they make use of them.\n\t\t\t\tcommit() {}\n\t\t\t\tcreatePanel() {}\n\t\t\t\tdisable() {}\n\t\t\t\tenable() {}\n\t\t\t\tgetState() {}\n\t\t\t\thideGroup() {}\n\t\t\t\thideItem() {}\n\t\t\t\tmark() {}\n\t\t\t\tshowAll() {}\n\t\t\t\tstartGroup() {}\n\t\t\t\tunmarkAll() {}\n\n\t\t\t\tadd(value, preview, title) {\n\t\t\t\t\tthis._items.push({\n\t\t\t\t\t\tpreview,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcomponentWillMount() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tthis._items = [];\n\n\t\t\t\t\tthis.setValue = this._setValue;\n\n\t\t\t\t\tif (editorCombo.init) {\n\t\t\t\t\t\teditorCombo.init.call(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (editorCombo.onRender) {\n\t\t\t\t\t\teditorCombo.onRender.call(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcomponentWillUnmount() {\n\t\t\t\t\tthis._cacheValue(this.state.value);\n\n\t\t\t\t\tthis.setValue = this._cacheValue;\n\t\t\t\t}\n\n\t\t\t\tgetValue() {\n\t\t\t\t\treturn this.state.value;\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst richComboLabel =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName]\n\t\t\t\t\t\t\t.currentValue || richComboDefinition.label;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ae-container-dropdown ae-has-dropdown\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\taria-expanded={this.props.expanded}\n\t\t\t\t\t\t\t\taria-label={richComboLabel}\n\t\t\t\t\t\t\t\tclassName=\"ae-toolbar-element\"\n\t\t\t\t\t\t\t\tonClick={this.props.toggleDropdown}\n\t\t\t\t\t\t\t\trole=\"combobox\"\n\t\t\t\t\t\t\t\ttabIndex={this.props.tabIndex}\n\t\t\t\t\t\t\t\ttitle={richComboLabel}>\n\t\t\t\t\t\t\t\t<div className=\"ae-container\">\n\t\t\t\t\t\t\t\t\t<span className=\"ae-container-dropdown-selected-item\">\n\t\t\t\t\t\t\t\t\t\t{richComboLabel}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<ButtonIcon symbol=\"caret-bottom\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{this.props.expanded && (\n\t\t\t\t\t\t\t\t<ButtonDropdown\n\t\t\t\t\t\t\t\t\tonDismiss={this.props.toggleDropdown}>\n\t\t\t\t\t\t\t\t\t{this._getItems()}\n\t\t\t\t\t\t\t\t</ButtonDropdown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t_cacheValue(value) {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\trichComboName\n\t\t\t\t\t].currentValue = value;\n\t\t\t\t}\n\n\t\t\t\t_getItems() {\n\t\t\t\t\tconst richCombo = this;\n\n\t\t\t\t\tconst items = this._items.map(item => {\n\t\t\t\t\t\tconst className =\n\t\t\t\t\t\t\t'ae-toolbar-element ' +\n\t\t\t\t\t\t\t(item.value === this.state.value ? 'active' : '');\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={item.title} role=\"option\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t__html: item.preview,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdata-value={item.value}\n\t\t\t\t\t\t\t\t\tonClick={richCombo._onClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn items;\n\t\t\t\t}\n\n\t\t\t\t_onClick = event => {\n\t\t\t\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\t\t\t\tconst editorCombo =\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][richComboName];\n\n\t\t\t\t\tif (editorCombo.onClick) {\n\t\t\t\t\t\tconst newValue = event.currentTarget.getAttribute(\n\t\t\t\t\t\t\t'data-value'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\teditorCombo.onClick.call(this, newValue);\n\n\t\t\t\t\t\tRICH_COMBO_DEFS[editor.name][\n\t\t\t\t\t\t\trichComboName\n\t\t\t\t\t\t].currentValue = newValue;\n\n\t\t\t\t\t\teditor.fire('actionPerformed', this);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t_setValue(value) {\n\t\t\t\t\tthis._cacheValue(value);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tAlloyEditor.Buttons[richComboName] = RichComboBridge;\n\t\t}\n\n\t\treturn RichComboBridge;\n\t};\n\n\t/* istanbul ignore else */\n\tif (!CKEDITOR.plugins.get('richcombo')) {\n\t\tCKEDITOR.UI_RICHCOMBO = 'richcombo';\n\n\t\tCKEDITOR.plugins.add('richcombo', {});\n\t}\n\n\t/**\n\t * CKEditor plugin that bridges the support offered by CKEditor RichCombo plugin. It takes over the\n\t * responsibility of registering and creating rich combo elements via:\n\t * - editor.ui.addRichCombo(name, definition)\n\t * - editor.ui.add(name, CKEDITOR.UI_RICHCOMBO, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_richcombobridge\n\t * @requires CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_richcombobridge', {\n\t\trequires: ['ae_uibridge'],\n\n\t\t/**\n\t\t * Set the add handler for UI_RICHCOMBO to our own. We do this in the init phase to override\n\t\t * the one in the original plugin in case it's present\n\t\t *\n\t\t * @method init\n\t\t * @param {Object} editor The CKEditor instance being initialized\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\teditor.ui.addRichCombo = function(\n\t\t\t\trichComboName,\n\t\t\t\trichComboDefinition\n\t\t\t) {\n\t\t\t\tthis.add(\n\t\t\t\t\trichComboName,\n\t\t\t\t\tCKEDITOR.UI_RICHCOMBO,\n\t\t\t\t\trichComboDefinition\n\t\t\t\t);\n\t\t\t};\n\n\t\t\teditor.ui.addHandler(CKEDITOR.UI_RICHCOMBO, {\n\t\t\t\tadd: generateRichComboBridge,\n\t\t\t\tcreate(richComboDefinition) {\n\t\t\t\t\tconst richComboName =\n\t\t\t\t\t\t'richComboBridge' + ((Math.random() * 1e9) >>> 0);\n\t\t\t\t\tconst RichComboBridge = generateRichComboBridge(\n\t\t\t\t\t\trichComboName,\n\t\t\t\t\t\trichComboDefinition\n\t\t\t\t\t);\n\n\t\t\t\t\treturn new RichComboBridge();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\n/* istanbul ignore if */\nif (!CKEDITOR.plugins.get('ae_uibridge')) {\n\t/**\n\t * CKEditor plugin that extends CKEDITOR.ui.add function so an add handler can be specified\n\t * on top of the original ones. It bridges the calls to add components via:\n\t * - editor.ui.add(name, type, definition)\n\t *\n\t * @class CKEDITOR.plugins.ae_uibridge\n\t * @constructor\n\t */\n\tCKEDITOR.plugins.add('ae_uibridge', {\n\t\t/**\n\t\t * Initialization of the plugin, part of CKEditor plugin lifecycle.\n\t\t *\n\t\t * @method beforeInit\n\t\t * @param {Object} editor The current editor instance\n\t\t */\n\t\tbeforeInit(editor) {\n\t\t\tconst originalUIAddFn = editor.ui.add;\n\n\t\t\teditor.ui.add = function(name, type, definition) {\n\t\t\t\toriginalUIAddFn.call(this, name, type, definition);\n\n\t\t\t\tconst typeHandler = this._.handlers[type];\n\n\t\t\t\tif (typeHandler && typeHandler.add) {\n\t\t\t\t\ttypeHandler.add(name, definition, editor);\n\t\t\t\t\tAlloyEditor.registerBridgeButton(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\teditor.__processingPlugin__.plugin.name\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t});\n}\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport removeImageCommand from './remove-image';\n\nexport {removeImageCommand};\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nconst removeImageCommand = {\n\texec: editor => {\n\t\tconst selection = editor.getSelection();\n\n\t\tif (selection) {\n\t\t\tconst ranges = selection.getRanges();\n\t\t\tconst startContainer = ranges[0].startContainer;\n\n\t\t\tconst nextRange = new CKEDITOR.dom.range(startContainer);\n\t\t\tnextRange.setStart(startContainer, 0);\n\t\t\tnextRange.setEnd(startContainer, 0);\n\n\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\tif (selectedElement && selectedElement.getName() === 'img') {\n\t\t\t\tconst native = selection.getNative();\n\t\t\t\tif (native) {\n\t\t\t\t\tnative.removeAllRanges();\n\t\t\t\t}\n\n\t\t\t\tselection.selectRanges([nextRange]);\n\n\t\t\t\tselectedElement.remove();\n\t\t\t}\n\t\t}\n\t},\n};\n\nexport default removeImageCommand;\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport EditorContext from '../adapter/editor-context';\nimport WidgetExclusive from './base/widget-exclusive';\nimport WidgetFocusManager from './base/widget-focus-manager';\n\n/**\n * The main editor UI class manages a hierarchy of widgets (toolbars and buttons).\n *\n * @class UI\n * @uses WidgetExclusive\n * @uses WidgetFocusManager\n */\nclass UI extends React.Component {\n\tstatic contextType = EditorContext;\n\n\t/**\n\t * Lifecycle. Returns the default values of the properties used in the widget.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method getDefaultProps\n\t * @return {Object} The default properties.\n\t */\n\tstatic defaultProps = {\n\t\tcircular: true,\n\t\tdescendants: '[class^=ae-toolbar-]',\n\t\teventsDelay: 0,\n\t\tkeys: {\n\t\t\tnext: 9,\n\t\t},\n\t};\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Localized messages for live aria updates. Should include the following messages:\n\t\t * - noToolbar: Notification for no available toolbar in the editor.\n\t\t * - oneToolbar: Notification for just one available toolbar in the editor.\n\t\t * - manyToolbars: Notification for more than one available toolbar in the editor.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} ariaUpdates\n\t\t */\n\t\tariaUpdates: PropTypes.object,\n\n\t\t/**\n\t\t * The delay (ms), after which key or mouse events will be processed.\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Number} eventsDelay\n\t\t */\n\t\teventsDelay: PropTypes.number,\n\n\t\t/**\n\t\t * The toolbars configuration for this editor instance\n\t\t *\n\t\t * @instance\n\t\t * @memberof UI\n\t\t * @property {Object} toolbars\n\t\t */\n\t\ttoolbars: PropTypes.object.isRequired,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\thidden: false,\n\t\t};\n\t}\n\n\t/**\n\t * Lifecycle. Invoked once, only on the client, immediately after the initial rendering occurs.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidMount\n\t */\n\tcomponentDidMount() {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.on('editorInteraction', this._onEditorInteraction, this);\n\t\teditor.on('actionPerformed', this._onActionPerformed, this);\n\t\teditor.on('key', this._onEditorKey, this);\n\n\t\t// Set up events for hiding the UI when user stops interacting with the editor.\n\t\t// This may happen when he just clicks outside of the editor. However,\n\t\t// this does not include a situation when he clicks on some button, part of\n\t\t// editor's UI.\n\n\t\t// It is not easy to debounce _setUIHidden on mousedown, because if we\n\t\t// debounce it, when the handler is being invoked, the target might be no more part\n\t\t// of the editor's UI - onActionPerformed causes re-render.\n\t\tthis._mousedownListener = event => {\n\t\t\tthis._setUIHidden(event.target);\n\t\t};\n\n\t\tthis._keyDownListener = CKEDITOR.tools.debounce(\n\t\t\t_event => {\n\t\t\t\tthis._setUIHidden(document.activeElement);\n\t\t\t},\n\t\t\tthis.props.eventsDelay,\n\t\t\tthis\n\t\t);\n\n\t\tdocument.addEventListener('mousedown', this._mousedownListener);\n\t\tdocument.addEventListener('keydown', this._keyDownListener);\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately after the component's updates are flushed to the DOM.\n\t * Fires `ariaUpdate` event passing ARIA related messages.\n\t * Fires `editorUpdate` event passing the previous and current properties and state.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentDidUpdate\n\t */\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\tif (domNode) {\n\t\t\teditor.fire('ariaUpdate', {\n\t\t\t\tmessage: this._getAvailableToolbarsMessage(domNode),\n\t\t\t});\n\t\t}\n\n\t\teditor.fire('editorUpdate', {\n\t\t\tprevProps,\n\t\t\tprevState,\n\t\t\tprops: this.props,\n\t\t\tstate: this.state,\n\t\t});\n\t}\n\n\t_getAriaUpdateTemplate(ariaUpdate) {\n\t\tif (!this._ariaUpdateTemplates) {\n\t\t\tthis._ariaUpdateTemplates = {};\n\t\t}\n\n\t\tif (!this._ariaUpdateTemplates[ariaUpdate]) {\n\t\t\tthis._ariaUpdateTemplates[ariaUpdate] = new CKEDITOR.template(\n\t\t\t\tthis._getAriaUpdates()[ariaUpdate]\n\t\t\t);\n\t\t}\n\n\t\treturn this._ariaUpdateTemplates[ariaUpdate];\n\t}\n\n\t/**\n\t * Returns the templates for ARIA messages.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _getAriaUpdates\n\t * @return {Object} ARIA relates messages. Default:\n\t * {\n\t *      noToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t *      oneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t *      manyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars\n\t *  }\n\t */\n\t_getAriaUpdates() {\n\t\treturn (\n\t\t\tthis.props.ariaUpdates || {\n\t\t\t\tnoToolbar: AlloyEditor.Strings.ariaUpdateNoToolbar,\n\t\t\t\toneToolbar: AlloyEditor.Strings.ariaUpdateOneToolbar,\n\t\t\t\tmanyToolbars: AlloyEditor.Strings.ariaUpdateManyToolbars,\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns an ARIA message which represents the number of currently available toolbars.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method _getAvailableToolbarsMessage\n\t * @protected\n\t * @param {CKEDITOR.dom.element} domNode The DOM node from which the available toolbars will be retrieved.\n\t * @return {String} The ARIA message for the number of available toolbars\n\t */\n\t_getAvailableToolbarsMessage(domNode) {\n\t\tconst toolbarsNodeList = domNode.querySelectorAll('[role=\"toolbar\"]');\n\n\t\tif (!toolbarsNodeList.length) {\n\t\t\treturn this._getAriaUpdates().noToolbar;\n\t\t} else {\n\t\t\tconst toolbarNames = Array.prototype.slice\n\t\t\t\t.call(toolbarsNodeList)\n\t\t\t\t.map(toolbar => {\n\t\t\t\t\treturn toolbar.getAttribute('aria-label');\n\t\t\t\t});\n\n\t\t\tconst ariaUpdate =\n\t\t\t\ttoolbarNames.length === 1 ? 'oneToolbar' : 'manyToolbars';\n\n\t\t\treturn this._getAriaUpdateTemplate(ariaUpdate).output({\n\t\t\t\ttoolbars: toolbarNames\n\t\t\t\t\t.join(',')\n\t\t\t\t\t.replace(/,([^,]*)$/, ' and ' + '$1'),\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Invoked immediately before a component is unmounted from the DOM.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method componentWillUnmount\n\t */\n\tcomponentWillUnmount() {\n\t\tif (this._mousedownListener) {\n\t\t\tdocument.removeEventListener('mousedown', this._mousedownListener);\n\t\t}\n\n\t\tif (this._keyDownListener) {\n\t\t\tthis._keyDownListener.detach();\n\t\t\tdocument.removeEventListener('keydown', this._keyDownListener);\n\t\t}\n\t}\n\n\t/**\n\t * Lifecycle. Renders the UI of the editor. This may include several toolbars and buttons.\n\t * The editor's UI also takes care of rendering the items in exclusive mode.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @method render\n\t * @return {Object} The content which should be rendered.\n\t */\n\trender() {\n\t\tif (this.state.hidden) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet toolbars = Object.keys(this.props.toolbars).map(toolbar => {\n\t\t\treturn AlloyEditor.Toolbars[toolbar] || window[toolbar];\n\t\t});\n\n\t\ttoolbars = this.filterExclusive(toolbars).map(toolbar => {\n\t\t\tconst props = this.mergeExclusiveProps(\n\t\t\t\t{\n\t\t\t\t\tconfig: this.props.toolbars[toolbar.key],\n\t\t\t\t\teditor: this.context.editor,\n\t\t\t\t\teditorEvent: this.state.editorEvent,\n\t\t\t\t\tkey: toolbar.key,\n\t\t\t\t\tonDismiss: this._onDismissToolbarFocus,\n\t\t\t\t\tselectionData: this.state.selectionData,\n\t\t\t\t},\n\t\t\t\ttoolbar.key\n\t\t\t);\n\n\t\t\treturn React.createElement(toolbar, props);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"ae-toolbars\" onKeyDown={this.handleKey}>\n\t\t\t\t{toolbars}\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/**\n\t * Listener to the editor's `actionPerformed` event. Sets state and redraws the UI of the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onActionPerformed\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onActionPerformed(_event) {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\n\t\tthis.setState({\n\t\t\titemExclusive: null,\n\t\t\tselectionData: editor.getSelectionData(),\n\t\t});\n\t}\n\n\t/**\n\t * Executed when a dismiss key is pressed over a toolbar to return the focus to the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onDismissToolbarFocus\n\t */\n\t_onDismissToolbarFocus = () => {\n\t\tconst editor = this.context.editor.get('nativeEditor');\n\n\t\teditor.focus();\n\t};\n\n\t/**\n\t * Listener to the editor's `userInteraction` event. Retrieves the data about the user selection and\n\t * provides it via component's state property.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorInteraction\n\t * @param {SynteticEvent} event The provided event\n\t */\n\t_onEditorInteraction(event) {\n\t\tthis.setState({\n\t\t\teditorEvent: event,\n\t\t\thidden: false,\n\t\t\titemExclusive: null,\n\t\t\tselectionData: event.data.selectionData,\n\t\t});\n\t}\n\n\t/**\n\t * Focuses on the active toolbar when the combination ALT+F10 is pressed inside the editor.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _onEditorKey\n\t */\n\t_onEditorKey(event) {\n\t\tconst nativeEvent = event.data.domEvent.$;\n\n\t\tif (nativeEvent.altKey && nativeEvent.keyCode === 121) {\n\t\t\tthis.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the target with which the user interacted is part of editor's UI or it is\n\t * the editable area. If none of these, sets the state of editor's UI to be hidden.\n\t *\n\t * @instance\n\t * @memberof UI\n\t * @protected\n\t * @method _setUIHidden\n\t * @param {DOMElement} target The DOM element with which user interacted lastly.\n\t */\n\t_setUIHidden(target) {\n\t\tconst domNode = ReactDOM.findDOMNode(this);\n\n\t\tif (domNode) {\n\t\t\tconst editable = this.context.editor.get('nativeEditor').editable();\n\t\t\tconst parentNode = target.parentNode;\n\t\t\tconst targetNode = new CKEDITOR.dom.node(target);\n\n\t\t\tif (!editable) {\n\t\t\t\tthis.setState({\n\t\t\t\t\thidden: true,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet res =\n\t\t\t\t\teditable.$ === target ||\n\t\t\t\t\teditable.contains(targetNode) ||\n\t\t\t\t\tnew CKEDITOR.dom.element(domNode).contains(targetNode);\n\n\t\t\t\tif (parentNode) {\n\t\t\t\t\tres = res || parentNode.id === 'ckimgrsz';\n\t\t\t\t}\n\n\t\t\t\tif (!res) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Fired when component updates and when it is rendered in the DOM.\n * The payload consists from a `message` property containing the ARIA message.\n *\n * @event ariaUpdate\n */\n\n/**\n * Fired when component updates. The payload consists from an object with the following\n * properties:\n * - prevProps - The previous properties of the component\n * - prevState - The previous state of the component\n * - props - The current properties of the component\n * - state - The current state of the component\n *\n * @event ariaUpdate\n */\n\nexport default WidgetExclusive(WidgetFocusManager(UI));\n","/**\n * SPDX-FileCopyrightText: © 2014 Liferay, Inc. <https://liferay.com>\n * SPDX-License-Identifier: LGPL-3.0-or-later\n */\n\nimport Attribute from './attribute';\nimport Lang from './lang';\nimport extend from './oop';\n\n/**\n * Quick and dirty impl of Base class.\n *\n * @class Base\n * @constructor\n */\nfunction Base(config) {\n\tBase.superclass.constructor.call(this, config);\n\n\tthis.init(config);\n}\n\nextend(Base, Attribute, {\n\t/**\n\t * Calls the `initializer` method of each class which extends Base starting from the parent to the child.\n\t * Will pass the configuration object to each initializer method.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method init\n\t * @param {Object} config Configuration object\n\t */\n\tinit(config) {\n\t\tthis._callChain('initializer', config);\n\t},\n\n\t/**\n\t * Calls the `destructor` method of each class which extends Base starting from the parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method destroy\n\t */\n\tdestroy() {\n\t\tthis._callChain('destructor');\n\t},\n\n\t/**\n\t * Calls a method of each class, which is being present in the hierarchy starting from parent to the child.\n\t *\n\t * @instance\n\t * @memberof Base\n\t * @method _callChain\n\t * @param {Object|Array} args The arguments with which the method should be invoked\n\t * @param {String} wat  The method, which should be invoked\n\t * @protected\n\t */\n\t_callChain(wat, args) {\n\t\tlet arr = [];\n\n\t\tlet ctor = this.constructor;\n\n\t\twhile (ctor) {\n\t\t\tif (Lang.isFunction(ctor.prototype[wat])) {\n\t\t\t\tarr.push(ctor.prototype[wat]);\n\t\t\t}\n\n\t\t\tctor = ctor.superclass ? ctor.superclass.constructor : null;\n\t\t}\n\n\t\tarr = arr.reverse();\n\n\t\targs = Lang.isArray(args) ? args : [args];\n\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tconst item = arr[i];\n\n\t\t\titem.apply(this, args);\n\t\t}\n\t},\n});\n\nexport default Base;\n"],"sourceRoot":""}