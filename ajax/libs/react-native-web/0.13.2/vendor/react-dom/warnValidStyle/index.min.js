var emptyFunction=require("fbjs/lib/emptyFunction"),warnValidStyle=emptyFunction;if("production"!==process.env.NODE_ENV){var getComponentName=function(e){if("function"==typeof e.getName)return e.getName();if("number"==typeof e.tag){var n=e.type;if("string"==typeof n)return n;if("function"==typeof n)return n.displayName||n.name}return null},camelizeStyleName=require("fbjs/lib/camelizeStyleName"),warning=require("fbjs/lib/warning"),badVendoredStyleNamePattern=/^(?:webkit|moz|o)[A-Z]/,badStyleValueWithSemicolonPattern=/;\s*$/,warnedStyleNames={},warnedStyleValues={},warnedForNaNValue=!1,warnedForInfinityValue=!1,warnHyphenatedStyleName=function(e,n){warnedStyleNames.hasOwnProperty(e)&&warnedStyleNames[e]||(warnedStyleNames[e]=!0,warning(!1,"Unsupported style property %s. Did you mean %s?%s",e,camelizeStyleName(e),checkRenderMessage(n)))},warnBadVendoredStyleName=function(e,n){warnedStyleNames.hasOwnProperty(e)&&warnedStyleNames[e]||(warnedStyleNames[e]=!0,warning(!1,"Unsupported vendor-prefixed style property %s. Did you mean %s?%s",e,e.charAt(0).toUpperCase()+e.slice(1),checkRenderMessage(n)))},warnStyleValueWithSemicolon=function(e,n,a){warnedStyleValues.hasOwnProperty(n)&&warnedStyleValues[n]||(warnedStyleValues[n]=!0,warning(!1,'Style property values shouldn\'t contain a semicolon.%s Try "%s: %s" instead.',checkRenderMessage(a),e,n.replace(badStyleValueWithSemicolonPattern,"")))},warnStyleValueIsNaN=function(e,n,a){warnedForNaNValue||(warnedForNaNValue=!0,warning(!1,"`NaN` is an invalid value for the `%s` css style property.%s",e,checkRenderMessage(a)))},warnStyleValueIsInfinity=function(e,n,a){warnedForInfinityValue||(warnedForInfinityValue=!0,warning(!1,"`Infinity` is an invalid value for the `%s` css style property.%s",e,checkRenderMessage(a)))},checkRenderMessage=function(e){var n;return null!=e&&(n=getComponentName(e)),n?"\n\nCheck the render method of `"+n+"`.":""};warnValidStyle=function(e,n,a){e.indexOf("-")>-1?warnHyphenatedStyleName(e,void 0):badVendoredStyleNamePattern.test(e)?warnBadVendoredStyleName(e,void 0):badStyleValueWithSemicolonPattern.test(n)&&warnStyleValueWithSemicolon(e,n,void 0),"number"==typeof n&&(isNaN(n)?warnStyleValueIsNaN(e,n,void 0):isFinite(n)||warnStyleValueIsInfinity(e,n,void 0))}}export default warnValidStyle;