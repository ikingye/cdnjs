"use strict";exports.__esModule=!0,exports.computeWindowedRenderLimits=computeWindowedRenderLimits,exports.elementsThatOverlapOffsets=elementsThatOverlapOffsets,exports.newRangeCount=newRangeCount,exports.default=void 0;var _invariant=_interopRequireDefault(require("fbjs/lib/invariant"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function elementsThatOverlapOffsets(e,t,n){for(var a=[],r=0,i=0;i<t;i++)for(var s=n(i),l=s.offset+s.length,f=0;f<e.length;f++)if(null==a[f]&&l>=e[f]&&(a[f]=i,r++,f===e.length-1))return(0,_invariant.default)(r===e.length,"bad offsets input, should be in increasing order: %s",JSON.stringify(e)),a;return a}function newRangeCount(e,t){return t.last-t.first+1-Math.max(0,1+Math.min(t.last,e.last)-Math.max(t.first,e.first))}function computeWindowedRenderLimits(e,t,n,a){var r=e.data,i=e.getItemCount,s=e.maxToRenderPerBatch,l=e.windowSize,f=i(r);if(0===f)return t;var o=a.offset,u=a.velocity,d=a.visibleLength,m=Math.max(0,o),h=m+d,v=(l-1)*d,p=1<u?"after":u<-1?"before":"none",c=Math.max(0,m-.5*v),w=Math.max(0,h+.5*v);if(n(f-1).offset<c)return{first:Math.max(0,f-1-s),last:f-1};for(var g=elementsThatOverlapOffsets([c,m,h,w],e.getItemCount(e.data),n),x=g[0],O=g[1],R=g[2],x=null==x?0:x,M=null==(M=g[3])?f-1:M,b={first:O=null==O?Math.max(0,x):O,last:R=null==R?Math.min(M,O+s-1):R},C=newRangeCount(t,b);!(O<=x&&M<=R);){var _=s<=C,L=O<=t.first||O>t.last,T=x<O&&(!_||!L),W=R>=t.last||R<t.first,z=R<M&&(!_||!W);if(_&&!T&&!z)break;!T||"after"==p&&z&&W||(L&&C++,O--),!z||"before"==p&&T&&L||(W&&C++,R++)}if(!(O<=R&&0<=O&&R<f&&x<=O&&R<=M&&O<=b.first&&b.last<=R))throw new Error("Bad window calculation "+JSON.stringify({first:O,last:R,itemCount:f,overscanFirst:x,overscanLast:M,visible:b}));return{first:O,last:R}}var VirtualizeUtils={computeWindowedRenderLimits:computeWindowedRenderLimits,elementsThatOverlapOffsets:elementsThatOverlapOffsets,newRangeCount:newRangeCount},_default=VirtualizeUtils;exports.default=VirtualizeUtils;