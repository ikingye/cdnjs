import{canUseDOM}from"fbjs/lib/ExecutionEnvironment";import useLayoutEffect from"./useLayoutEffect";import UIManager from"../exports/UIManager";var DOM_LAYOUT_HANDLER_NAME="__reactLayoutHandler",didWarn=!1,resizeObserver=null;function getResizeObserver(){return canUseDOM&&void 0!==window.ResizeObserver?null==resizeObserver&&(resizeObserver=new window.ResizeObserver(function(e){e.forEach(function(e){var r=e.target,t=r[DOM_LAYOUT_HANDLER_NAME];"function"==typeof t&&UIManager.measure(r,function(r,n,o,i,s,u){var a={nativeEvent:{layout:{x:r,y:n,width:o,height:i,left:s,top:u}},timeStamp:Date.now()};Object.defineProperty(a.nativeEvent,"target",{enumerable:!0,get:function(){return e.target}}),t(a)})})})):didWarn||"production"!==process.env.NODE_ENV&&"test"!==process.env.NODE_ENV&&(console.warn("onLayout relies on ResizeObserver which is not supported by your browser. Please include a polyfill, e.g., https://github.com/que-etc/resize-observer-polyfill."),didWarn=!0),resizeObserver}export default function useElementLayout(e,r){var t=getResizeObserver();useLayoutEffect(function(){var n=e.current;return null!=n&&null!=t&&"function"==typeof r&&(t.observe(n),n[DOM_LAYOUT_HANDLER_NAME]=r),function(){null!=n&&null!=t&&(t.unobserve(n),delete n[DOM_LAYOUT_HANDLER_NAME])}},[e,r,t])};