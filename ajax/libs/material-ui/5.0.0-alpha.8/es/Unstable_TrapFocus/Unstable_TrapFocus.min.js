import*as React from"react";import PropTypes from"prop-types";import{exactProp,elementAcceptingRef}from"@material-ui/utils";import ownerDocument from"../utils/ownerDocument";import useForkRef from"../utils/useForkRef";function Unstable_TrapFocus(e){const{children:t,disableAutoFocus:r=!1,disableEnforceFocus:n=!1,disableRestoreFocus:c=!1,getDoc:o,isEnabled:u,open:s}=e,a=React.useRef(),i=React.useRef(null),l=React.useRef(null),f=React.useRef(),p=React.useRef(null),d=React.useRef(!1),R=React.useRef(null),m=useForkRef(t.ref,R),E=React.useRef();React.useEffect(()=>{E.current=s},[s]),E.current||!s||"undefined"==typeof window||r||(f.current=o().activeElement),React.useEffect(()=>{s&&R.current&&(d.current=!r)},[r,s]),React.useEffect(()=>{if(!s||!R.current)return;const e=ownerDocument(R.current);return R.current.contains(e.activeElement)||(R.current.hasAttribute("tabIndex")||("production"!==process.env.NODE_ENV&&console.error(["Material-UI: The modal content node does not accept focus.",'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n")),R.current.setAttribute("tabIndex",-1)),d.current&&R.current.focus()),()=>{c||(f.current&&f.current.focus&&(a.current=!0,f.current.focus()),f.current=null)}},[s]),React.useEffect(()=>{if(!s||!R.current)return;const e=ownerDocument(R.current),t=t=>{const{current:r}=R;if(null!==r)if(e.hasFocus()&&!n&&u()&&!a.current)if(r.contains(e.activeElement))d.current=!0;else{if(t&&p.current!==t.target||e.activeElement!==p.current)p.current=null;else if(null!==p.current)return;if(!d.current)return;r.focus()}else a.current=!1},r=t=>{!n&&u()&&9===t.keyCode&&e.activeElement===R.current&&(a.current=!0,t.shiftKey?l.current.focus():i.current.focus())};e.addEventListener("focusin",t),e.addEventListener("keydown",r,!0);const c=setInterval(()=>{"BODY"===e.activeElement.tagName&&t()},50);return()=>{clearInterval(c),e.removeEventListener("focusin",t),e.removeEventListener("keydown",r,!0)}},[r,n,c,u,s]);return React.createElement(React.Fragment,null,React.createElement("div",{tabIndex:0,ref:i,"data-test":"sentinelStart"}),React.cloneElement(t,{ref:m,onFocus:e=>{d.current||(f.current=e.relatedTarget),d.current=!0,p.current=e.target;const r=t.props.onFocus;r&&r(e)}}),React.createElement("div",{tabIndex:0,ref:l,"data-test":"sentinelEnd"}))}"production"!==process.env.NODE_ENV&&(Unstable_TrapFocus.propTypes={children:elementAcceptingRef,disableAutoFocus:PropTypes.bool,disableEnforceFocus:PropTypes.bool,disableRestoreFocus:PropTypes.bool,getDoc:PropTypes.func.isRequired,isEnabled:PropTypes.func.isRequired,open:PropTypes.bool.isRequired}),"production"!==process.env.NODE_ENV&&(Unstable_TrapFocus.propTypes=exactProp(Unstable_TrapFocus.propTypes));export default Unstable_TrapFocus;