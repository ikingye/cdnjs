{"version":3,"sources":["src/index.js"],"names":["EMPTY_OBJ","EMPTY_ARR","id","a","map","isArray","Array","enqueue","requestAnimationFrame","setTimeout","createClass","obj","out","tmp","k","length","shouldRestart","b","getKey","vdom","key","patchProperty","node","oldValue","newValue","listener","isSvg","setProperty","tag","slice","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","props","document","createTextNode","type","createElementNS","is","createElement","i","children","appendChild","maybeVNode","patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldProps","newProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","memo","propsChanged","text","recycleNode","nodeType","createVNode","nodeName","toLowerCase","call","childNodes","value","h","app","doing","state","view","subscriptions","subs","setState","newState","oldSubs","newSubs","dispatch","oldSub","newSub","push","patchSubs","render","middleware","action","fx","event","this","parentNode","init"],"mappings":"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","sourcesContent":["var SSR_NODE = 1\nvar TEXT_NODE = 3\nvar EMPTY_OBJ = {}\nvar EMPTY_ARR = []\nvar SVG_NS = \"http://www.w3.org/2000/svg\"\n\nvar id = (a) => a\nvar map = EMPTY_ARR.map\nvar isArray = Array.isArray\nvar enqueue =\n  typeof requestAnimationFrame !== \"undefined\"\n    ? requestAnimationFrame\n    : setTimeout\n\nvar createClass = (obj) => {\n  var out = \"\"\n\n  if (typeof obj === \"string\") return obj\n\n  if (isArray(obj)) {\n    for (var k = 0, tmp; k < obj.length; k++) {\n      if ((tmp = createClass(obj[k]))) {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (var k in obj) {\n      if (obj[k]) out += (out && \" \") + k\n    }\n  }\n\n  return out\n}\n\nvar shouldRestart = (a, b) => {\n  for (var k in { ...a, ...b }) {\n    if (typeof (isArray((b[k] = a[k])) ? b[k][0] : b[k]) === \"function\") {\n    } else if (a[k] !== b[k]) return true\n  }\n}\n\nvar patchSubs = (oldSubs, newSubs, dispatch) => {\n  for (\n    var subs = [], i = 0, oldSub, newSub;\n    i < oldSubs.length || i < newSubs.length;\n    i++\n  ) {\n    oldSub = oldSubs[i]\n    newSub = newSubs[i]\n\n    subs.push(\n      newSub && newSub !== true\n        ? !oldSub ||\n          newSub[0] !== oldSub[0] ||\n          shouldRestart(newSub[1], oldSub[1])\n          ? [\n              newSub[0],\n              newSub[1],\n              newSub[0](dispatch, newSub[1]),\n              oldSub && oldSub[2](),\n            ]\n          : oldSub\n        : oldSub && oldSub[2]()\n    )\n  }\n  return subs\n}\n\nvar getKey = (vdom) => (vdom == null ? vdom : vdom.key)\n\nvar patchProperty = (node, key, oldValue, newValue, listener, isSvg) => {\n  if (key === \"key\") {\n  } else if (key === \"style\") {\n    for (var k in { ...oldValue, ...newValue }) {\n      oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k]\n      if (k[0] === \"-\") {\n        node[key].setProperty(k, oldValue)\n      } else {\n        node[key][k] = oldValue\n      }\n    }\n  } else if (key[0] === \"o\" && key[1] === \"n\") {\n    if (!((node.tag || (node.tag = {}))[(key = key.slice(2))] = newValue)) {\n      node.removeEventListener(key, listener)\n    } else if (!oldValue) {\n      node.addEventListener(key, listener)\n    }\n  } else if (!isSvg && key !== \"list\" && key !== \"form\" && key in node) {\n    node[key] = newValue == null ? \"\" : newValue\n  } else if (\n    newValue == null ||\n    newValue === false ||\n    (key === \"class\" && !(newValue = createClass(newValue)))\n  ) {\n    node.removeAttribute(key)\n  } else {\n    node.setAttribute(key, newValue)\n  }\n}\n\nvar createNode = (vdom, listener, isSvg) => {\n  var props = vdom.props\n  var node =\n    vdom.tag === TEXT_NODE\n      ? document.createTextNode(vdom.type)\n      : (isSvg = isSvg || vdom.type === \"svg\")\n      ? document.createElementNS(SVG_NS, vdom.type, { is: props.is })\n      : document.createElement(vdom.type, { is: props.is })\n\n  for (var k in props) {\n    patchProperty(node, k, null, props[k], listener, isSvg)\n  }\n\n  for (var i = 0; i < vdom.children.length; i++) {\n    node.appendChild(\n      createNode(\n        (vdom.children[i] = maybeVNode(vdom.children[i])),\n        listener,\n        isSvg\n      )\n    )\n  }\n\n  return (vdom.node = node)\n}\n\nvar patch = (parent, node, oldVNode, newVNode, listener, isSvg) => {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.tag === TEXT_NODE &&\n    newVNode.tag === TEXT_NODE\n  ) {\n    if (oldVNode.type !== newVNode.type) node.nodeValue = newVNode.type\n  } else if (oldVNode == null || oldVNode.type !== newVNode.type) {\n    node = parent.insertBefore(\n      createNode((newVNode = maybeVNode(newVNode)), listener, isSvg),\n      node\n    )\n    if (oldVNode != null) {\n      parent.removeChild(oldVNode.node)\n    }\n  } else {\n    var tmpVKid\n    var oldVKid\n\n    var oldKey\n    var newKey\n\n    var oldProps = oldVNode.props\n    var newProps = newVNode.props\n\n    var oldVKids = oldVNode.children\n    var newVKids = newVNode.children\n\n    var oldHead = 0\n    var newHead = 0\n    var oldTail = oldVKids.length - 1\n    var newTail = newVKids.length - 1\n\n    isSvg = isSvg || newVNode.type === \"svg\"\n\n    for (var i in { ...oldProps, ...newProps }) {\n      if (\n        (i === \"value\" || i === \"selected\" || i === \"checked\"\n          ? node[i]\n          : oldProps[i]) !== newProps[i]\n      ) {\n        patchProperty(node, i, oldProps[i], newProps[i], listener, isSvg)\n      }\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead],\n        (newVKids[newHead] = maybeVNode(\n          newVKids[newHead++],\n          oldVKids[oldHead++]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail],\n        (newVKids[newTail] = maybeVNode(\n          newVKids[newTail--],\n          oldVKids[oldTail--]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(\n            (newVKids[newHead] = maybeVNode(newVKids[newHead++])),\n            listener,\n            isSvg\n          ),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        node.removeChild(oldVKids[oldHead++].node)\n      }\n    } else {\n      for (var keyed = {}, newKeyed = {}, i = oldHead; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(\n          (newVKids[newHead] = maybeVNode(newVKids[newHead], oldVKid))\n        )\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            node.removeChild(oldVKid.node)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.tag === SSR_NODE) {\n          if (oldKey == null) {\n            patch(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patch(\n              node,\n              oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patch(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n              newKeyed[newKey] = true\n            } else {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n          node.removeChild(oldVKid.node)\n        }\n      }\n\n      for (var i in keyed) {\n        if (newKeyed[i] == null) {\n          node.removeChild(keyed[i].node)\n        }\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nvar propsChanged = (a, b) => {\n  for (var k in a) if (a[k] !== b[k]) return true\n  for (var k in b) if (a[k] !== b[k]) return true\n}\n\nvar maybeVNode = (newVNode, oldVNode) =>\n  newVNode !== true && newVNode !== false && newVNode\n    ? typeof newVNode.tag === \"function\"\n      ? ((!oldVNode ||\n          oldVNode.memo == null ||\n          propsChanged(oldVNode.memo, newVNode.memo)) &&\n          ((oldVNode = newVNode.tag(newVNode.memo)).memo = newVNode.memo),\n        oldVNode)\n      : newVNode\n    : text(\"\")\n\nvar recycleNode = (node) =>\n  node.nodeType === TEXT_NODE\n    ? text(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJ,\n        map.call(node.childNodes, recycleNode),\n        node,\n        null,\n        SSR_NODE\n      )\n\nvar createVNode = (type, props, children, node, key, tag) => ({\n  type,\n  props,\n  children,\n  node,\n  key,\n  tag,\n})\n\nexport var memo = (tag, memo) => ({ tag, memo })\n\nexport var text = (value, node) =>\n  createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, null, TEXT_NODE)\n\nexport var h = (type, props, children) =>\n  createVNode(\n    type,\n    props,\n    isArray(children) ? children : children == null ? EMPTY_ARR : [children],\n    null,\n    props.key\n  )\n\nexport var app = (props) => {\n  var view = props.view\n  var node = props.node\n  var subscriptions = props.subscriptions\n  var vdom = node && recycleNode(node)\n  var subs = []\n  var doing\n  var state\n\n  var setState = (newState) => {\n    if (state !== newState) {\n      state = newState\n      if (subscriptions) {\n        subs = patchSubs(subs, subscriptions(state), dispatch)\n      }\n      if (view && !doing) enqueue(render, (doing = true))\n    }\n  }\n\n  var dispatch = (props.middleware || id)((action, props) =>\n    typeof action === \"function\"\n      ? dispatch(action(state, props))\n      : isArray(action)\n      ? typeof action[0] === \"function\"\n        ? dispatch(action[0], action[1])\n        : action\n            .slice(1)\n            .map(\n              (fx) => fx && fx !== true && fx[0](dispatch, fx[1]),\n              setState(action[0])\n            )\n      : setState(action)\n  )\n\n  var listener = function (event) {\n    dispatch(this.tag[event.type], event)\n  }\n\n  var render = () =>\n    (node = patch(\n      node.parentNode,\n      node,\n      vdom,\n      (vdom = view(state)),\n      listener,\n      (doing = false)\n    ))\n\n  dispatch(props.init)\n}\n"]}