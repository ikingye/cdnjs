"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Retina=void 0;const Utils_1=require("../Utils");class Retina{constructor(e){this.container=e}init(){const e=this.container,i=e.options;i.detectRetina?this.pixelRatio=Utils_1.Utils.isSsr()?1:window.devicePixelRatio:this.pixelRatio=1;const s=this.pixelRatio;if(e.canvas.element){const i=e.canvas.element;e.canvas.size.width=i.offsetWidth*s,e.canvas.size.height=i.offsetHeight*s}const t=i.particles;this.linksDistance=t.links.distance*s,this.linksWidth=t.links.width*s,this.moveSpeed=t.move.speed*s,this.sizeValue=t.size.value*s,this.sizeAnimationSpeed=t.size.animation.speed*s;const n=i.interactivity.modes;this.connectModeDistance=n.connect.distance*s,this.connectModeRadius=n.connect.radius*s,this.grabModeDistance=n.grab.distance*s,this.repulseModeDistance=n.repulse.distance*s,this.slowModeRadius=n.slow.radius*s,this.bubbleModeDistance=n.bubble.distance*s,n.bubble.size&&(this.bubbleModeSize=n.bubble.size*s)}initParticle(e){const i=e.particlesOptions,s=this.pixelRatio;e.linksDistance=i.links.distance*s,e.linksWidth=i.links.width*s,e.moveSpeed=i.move.speed*s,e.sizeValue=i.size.value*s,"boolean"!=typeof i.size.random&&(e.randomMinimumSize=i.size.random.minimumValue*s),e.sizeAnimationSpeed=i.size.animation.speed*s}}exports.Retina=Retina;