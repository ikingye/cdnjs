"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Infecter=void 0;const Utils_1=require("../../../../Utils");class Infecter{constructor(e){this.container=e}isEnabled(){return this.container.options.infection.enable}reset(){}interact(e,t){var i,n;if(e.updateInfection(t),void 0===e.infectionStage)return;const o=this.container,a=o.options.infection;if(!a.enable||a.stages.length<1)return;const c=a.stages[e.infectionStage],r=o.retina.pixelRatio,s=2*e.size.value+c.radius*r,f=e.getPosition(),l=null!==(i=c.infectedStage)&&void 0!==i?i:e.infectionStage,g=o.particles.quadTree.query(new Utils_1.Circle(f.x,f.y,s)).filter(t=>void 0===t.infectionStage||t.infectionStage!==e.infectionStage),d=c.rate,u=g.length;for(const t of g)if(Math.random()<d/u)if(void 0===t.infectionStage)t.startInfection(l);else if(t.infectionStage<e.infectionStage)t.updateInfectionStage(l);else if(t.infectionStage>e.infectionStage){const i=a.stages[t.infectionStage],o=null!==(n=null==i?void 0:i.infectedStage)&&void 0!==n?n:t.infectionStage;e.updateInfectionStage(o)}}}exports.Infecter=Infecter;