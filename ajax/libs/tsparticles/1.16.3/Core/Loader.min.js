"use strict";var __awaiter=this&&this.__awaiter||function(t,e,r,o){return new(r||(r=Promise))(function(s,a){function n(t){try{c(o.next(t))}catch(t){a(t)}}function i(t){try{c(o.throw(t))}catch(t){a(t)}}function c(t){var e;t.done?s(t.value):(e=t.value,e instanceof r?e:new r(function(t){t(e)})).then(n,i)}c((o=o.apply(t,e||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Loader=void 0;const Container_1=require("./Container"),Utils_1=require("../Utils"),tsParticlesDom=[];class Loader{static dom(){return tsParticlesDom}static domItem(t){const e=Loader.dom(),r=e[t];if(r&&!r.destroyed)return r;e.splice(t,1)}static loadFromArray(t,e,r){return __awaiter(this,void 0,void 0,function*(){return Loader.load(t,Utils_1.Utils.itemFromArray(e,r))})}static setFromArray(t,e,r,o){return __awaiter(this,void 0,void 0,function*(){return Loader.set(t,e,Utils_1.Utils.itemFromArray(r,o))})}static load(t,e){return __awaiter(this,void 0,void 0,function*(){const r=document.getElementById(t);if(r)return this.set(t,r,e)})}static set(t,e,r){return __awaiter(this,void 0,void 0,function*(){const o=Loader.dom(),s=o.findIndex(e=>e.id===t);if(s>=0){const t=this.domItem(s);t&&!t.destroyed&&(t.destroy(),o.splice(s,1))}let a,n;if("canvas"===e.tagName.toLowerCase())a=e,n=!1;else{const t=e.getElementsByTagName("canvas");t.length?((a=t[0]).className||(a.className=Utils_1.Constants.canvasClass),n=!1):(n=!0,(a=document.createElement("canvas")).className=Utils_1.Constants.canvasClass,a.style.width="100%",a.style.height="100%",e.appendChild(a))}const i=new Container_1.Container(t,r);return s>=0?o.splice(s,0,i):o.push(i),i.canvas.loadCanvas(a,n),yield i.start(),i})}static loadJSON(t,e){return __awaiter(this,void 0,void 0,function*(){const r=yield fetch(e);if(r.ok){const e=yield r.json();return e instanceof Array?Loader.loadFromArray(t,e):Loader.load(t,e)}this.fetchError(r.status)})}static setJSON(t,e,r){return __awaiter(this,void 0,void 0,function*(){const o=yield fetch(r);if(o.ok){const r=yield o.json();return r instanceof Array?Loader.setFromArray(t,e,r):Loader.set(t,e,r)}this.fetchError(o.status)})}static setOnClickHandler(t){const e=Loader.dom();if(0===e.length)throw new Error("Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()");for(const r of e){const e=r.interactivity.element;e&&e.addEventListener("click",t)}}static fetchError(t){console.error(`Error tsParticles - fetch status: ${t}`),console.error("Error tsParticles - File config not found")}}exports.Loader=Loader;