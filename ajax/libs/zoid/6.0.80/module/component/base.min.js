function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}import{ZalgoPromise}from"zalgo-promise/src";import{on}from"post-robot/src";import"cross-domain-utils/src";import{copyProp,eventEmitter,stringifyError,noop}from"../lib";function cleanup(n){var e=[],o=!1;return{set:function(e,r){return o?r:(n[e]=r,this.register(function(){delete n[e]}),r)},register:function(n,r){if("function"==typeof n&&(r=n,n="<anonymous-cleanup-handler>"),"function"!=typeof r)throw new TypeError("Expected to be passed function to clean.register");o?r():e.push({complete:!1,name:n,run:function(){this.complete||(this.complete=!0,r&&r())}})},hasTasks:function(){return Boolean(e.filter(function(n){return!n.complete}).length)},all:function(){var n=[];for(o=!0;e.length;)n.push(e.pop().run());return ZalgoPromise.all(n).then(function(){})},run:function(n){for(var o=[],r=0,t=null==e?0:e.length;r<t;r++){var i=e[r];i.name===n&&o.push(i.run())}return ZalgoPromise.all(o).then(noop)}}}export var BaseComponent=function(){function n(){_classCallCheck(this,n),this.clean=cleanup(this),this.event=eventEmitter()}return n.prototype.addProp=function(n,e,o){copyProp(n,this,e,o)},n.prototype.on=function(n,e){return this.event.on(n,e)},n.prototype.listeners=function(){throw new Error("Expected listeners to be implemented")},n.prototype.error=function(n){throw new Error("Expected error to be implemented - got "+stringifyError(n))},n.prototype.listen=function(n,e){var o=this;if(!n)throw this.component.createError("window to listen to not set");if(!e)throw new Error("Must pass domain to listen to");if(this.listeners)for(var r=this.listeners(),t=function(t,i,s){var c=i[t],l=c.replace(/^zoid_/,""),a=function(n){o.error(n)},p=on(c,{window:n,domain:e,errorHandler:a},function(n){var e=n.source,t=n.data;return o.component.log("listener_"+l),r[c].call(o,e,t)}),u=on(c,{window:n,errorHandler:a},function(n){var r=n.origin;o.component.logError("unexpected_listener_"+l,{origin:r,domain:e.toString()}),o.error(new Error("Unexpected "+l+" message from domain "+r+" -- expected message from "+e.toString()))});o.clean.register(function(){p.cancel(),u.cancel()})},i=0,s=Object.keys(r),c=null==s?0:s.length;i<c;i++)t(i,s)},n}();