import{ZalgoPromise}from"zalgo-promise/src";export function denodeify(r){return function(){var o=this,e=Array.prototype.slice.call(arguments);return e.length>=r.length?ZalgoPromise.resolve(r.apply(o,e)):new ZalgoPromise(function(n,t){e.push(function(r,o){if(r&&!(r instanceof Error))throw new Error("Passed non-Error object in callback: [ "+r+" ] -- callbacks should either be called with callback(new Error(...)) or callback(null, result).");return r?t(r):n(o)}),r.apply(o,e)})}};export function promisify(r){return function(){var o=this,e=arguments;return ZalgoPromise.try(function(){return r.apply(o,e)})}};export function delay(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return new ZalgoPromise(function(o){setTimeout(o,r)})};export function cycle(r){return ZalgoPromise.try(r).then(function(){return cycle(r)})};