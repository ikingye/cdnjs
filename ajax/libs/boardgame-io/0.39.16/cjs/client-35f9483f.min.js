"use strict";var Debug=require("./Debug-0ac3084e.js"),redux=require("redux"),turnOrder=require("./turn-order-d6c2e620.js"),reducer=require("./reducer-76d3a4df.js"),initialize=require("./initialize-18a8be06.js");function createDispatchers(e,t,i,s,r,a){return t.reduce((t,n)=>(t[n]=function(...t){let l=s;if(!a&&null==s){l=i.getState().ctx.currentPlayer}i.dispatch(turnOrder.ActionCreators[e](n,t,l,r))},t),{})}const createMoveDispatchers=createDispatchers.bind(null,"makeMove"),createEventDispatchers=createDispatchers.bind(null,"gameEvent"),createPluginDispatchers=createDispatchers.bind(null,"plugin");class _ClientImpl{constructor({game:e,debug:t,numPlayers:i,multiplayer:s,gameID:r,playerID:a,credentials:n,enhancer:l}){this.game=reducer.ProcessGameConfig(e),this.playerID=a,this.gameID=r,this.credentials=n,this.multiplayer=s,this.debug=t,this.gameStateOverride=null,this.subscribers={},this._running=!1,this.reducer=reducer.CreateGameReducer({game:this.game,isClient:void 0!==s}),this.initialState=null,s||(this.initialState=initialize.InitializeGame({game:this.game,numPlayers:i})),this.reset=(()=>{this.store.dispatch(turnOrder.reset(this.initialState))}),this.undo=(()=>{this.store.dispatch(turnOrder.undo(this.playerID,this.credentials))}),this.redo=(()=>{this.store.dispatch(turnOrder.redo(this.playerID,this.credentials))}),this.store=null,this.log=[];const h=e=>t=>i=>{const s=t(i),r=e.getState();switch(i.type){case turnOrder.MAKE_MOVE:case turnOrder.GAME_EVENT:{const e=r.deltalog;this.log=[...this.log,...e];break}case turnOrder.RESET:this.log=[];break;case turnOrder.UPDATE:{let e=-1;this.log.length>0&&(e=this.log[this.log.length-1]._stateID);let t=i.deltalog||[];t=t.filter(t=>t._stateID>e),this.log=[...this.log,...t];break}case turnOrder.SYNC:this.initialState=i.initialState,this.log=i.log||[]}return s},u=e=>t=>i=>{const s=e.getState(),r=t(i);return"clientOnly"in i||this.transport.onAction(s,i),r},c=()=>e=>t=>{const i=e(t);return this.notifySubscribers(),i};l=void 0!==l?redux.compose(redux.applyMiddleware(c,u,h),l):redux.applyMiddleware(c,u,h),this.store=redux.createStore(this.reducer,this.initialState,l),this.transport={isConnected:!0,onAction:()=>{},subscribe:()=>{},subscribeGameMetadata:()=>{},connect:()=>{},disconnect:()=>{},updateGameID:()=>{},updatePlayerID:()=>{}},s&&(this.transport=s({gameKey:e,game:this.game,store:this.store,gameID:r,playerID:a,gameName:this.game.name,numPlayers:i})),this.createDispatchers(),this.transport.subscribeGameMetadata(e=>{this.gameMetadata=e}),this._debugPanel=null}notifySubscribers(){Object.values(this.subscribers).forEach(e=>e(this.getState()))}overrideGameState(e){this.gameStateOverride=e,this.notifySubscribers()}start(){this.transport.connect(),this._running=!0;let e=null;if("production"!==process.env.NODE_ENV&&(e=Debug.Debug),this.debug&&!0!==this.debug&&this.debug.impl&&(e=this.debug.impl),null!==e&&!1!==this.debug&&null==this._debugPanel&&"undefined"!=typeof document){let t=document.body;this.debug&&!0!==this.debug&&void 0!==this.debug.target&&(t=this.debug.target),t&&(this._debugPanel=new e({target:t,props:{client:this}}))}}stop(){this.transport.disconnect(),this._running=!1,null!=this._debugPanel&&(this._debugPanel.$destroy(),this._debugPanel=null)}subscribe(e){const t=Object.keys(this.subscribers).length;return this.subscribers[t]=e,this.transport.subscribe(()=>this.notifySubscribers()),!this._running&&this.multiplayer||e(this.getState()),()=>{delete this.subscribers[t]}}getInitialState(){return this.initialState}getState(){let e=this.store.getState();if(null!==this.gameStateOverride&&(e=this.gameStateOverride),null===e)return e;let t=!0;const i=this.game.flow.isPlayerActive(e.G,e.ctx,this.playerID);return this.multiplayer&&!i&&(t=!1),this.multiplayer||null===this.playerID||void 0===this.playerID||i||(t=!1),void 0!==e.ctx.gameover&&(t=!1),{...e,G:this.game.playerView(e.G,e.ctx,this.playerID),log:this.log,isActive:t,isConnected:this.transport.isConnected}}createDispatchers(){this.moves=createMoveDispatchers(this.game.moveNames,this.store,this.playerID,this.credentials,this.multiplayer),this.events=createEventDispatchers(this.game.flow.enabledEventNames,this.store,this.playerID,this.credentials,this.multiplayer),this.plugins=createPluginDispatchers(this.game.pluginNames,this.store,this.playerID,this.credentials,this.multiplayer)}updatePlayerID(e){this.playerID=e,this.createDispatchers(),this.transport.updatePlayerID(e),this.notifySubscribers()}updateGameID(e){this.gameID=e,this.createDispatchers(),this.transport.updateGameID(e),this.notifySubscribers()}updateCredentials(e){this.credentials=e,this.createDispatchers(),this.notifySubscribers()}}function Client(e){return new _ClientImpl(e)}exports.Client=Client;