"use strict";var Debug=require("./Debug-02ceb617.js"),redux=require("redux"),turnOrder=require("./turn-order-7481bb3a.js"),reducer=require("./reducer-f0b0f23d.js"),initialize=require("./initialize-62a2cac2.js");function createDispatchers(t,e,i,s,r,a){return e.reduce((e,n)=>(e[n]=function(...e){let h=s;if(!a&&null==s){h=i.getState().ctx.currentPlayer}i.dispatch(turnOrder.ActionCreators[t](n,e,h,r))},e),{})}const createMoveDispatchers=createDispatchers.bind(null,"makeMove"),createEventDispatchers=createDispatchers.bind(null,"gameEvent"),createPluginDispatchers=createDispatchers.bind(null,"plugin");class _ClientImpl{constructor({game:t,debug:e,numPlayers:i,multiplayer:s,matchID:r,playerID:a,credentials:n,enhancer:h}){this.game=reducer.ProcessGameConfig(t),this.playerID=a,this.matchID=r,this.credentials=n,this.multiplayer=s,this.debug=e,this.gameStateOverride=null,this.subscribers={},this._running=!1,this.reducer=reducer.CreateGameReducer({game:this.game,isClient:void 0!==s}),this.initialState=null,s||(this.initialState=initialize.InitializeGame({game:this.game,numPlayers:i})),this.reset=(()=>{this.store.dispatch(turnOrder.reset(this.initialState))}),this.undo=(()=>{this.store.dispatch(turnOrder.undo(this.playerID,this.credentials))}),this.redo=(()=>{this.store.dispatch(turnOrder.redo(this.playerID,this.credentials))}),this.store=null,this.log=[];const l=t=>e=>i=>{const s=e(i),r=t.getState();switch(i.type){case turnOrder.MAKE_MOVE:case turnOrder.GAME_EVENT:{const t=r.deltalog;this.log=[...this.log,...t];break}case turnOrder.RESET:this.log=[];break;case turnOrder.UPDATE:{let t=-1;this.log.length>0&&(t=this.log[this.log.length-1]._stateID);let e=i.deltalog||[];e=e.filter(e=>e._stateID>t),this.log=[...this.log,...e];break}case turnOrder.SYNC:this.initialState=i.initialState,this.log=i.log||[]}return s},c=t=>e=>i=>{const s=t.getState(),r=e(i);return"clientOnly"in i||this.transport.onAction(s,i),r},u=()=>t=>e=>{const i=t(e);return this.notifySubscribers(),i};h=void 0!==h?redux.compose(redux.applyMiddleware(u,c,l),h):redux.applyMiddleware(u,c,l),this.store=redux.createStore(this.reducer,this.initialState,h),this.transport={isConnected:!0,onAction:()=>{},subscribe:()=>{},subscribeMatchData:()=>{},connect:()=>{},disconnect:()=>{},updateMatchID:()=>{},updatePlayerID:()=>{}},s&&(this.transport=s({gameKey:t,game:this.game,store:this.store,matchID:r,playerID:a,gameName:this.game.name,numPlayers:i})),this.createDispatchers(),this.transport.subscribeMatchData(t=>{this.matchData=t}),this._debugPanel=null}notifySubscribers(){Object.values(this.subscribers).forEach(t=>t(this.getState()))}overrideGameState(t){this.gameStateOverride=t,this.notifySubscribers()}start(){this.transport.connect(),this._running=!0;let t=null;if("production"!==process.env.NODE_ENV&&(t=Debug.Debug),this.debug&&!0!==this.debug&&this.debug.impl&&(t=this.debug.impl),null!==t&&!1!==this.debug&&null==this._debugPanel&&"undefined"!=typeof document){let e=document.body;this.debug&&!0!==this.debug&&void 0!==this.debug.target&&(e=this.debug.target),e&&(this._debugPanel=new t({target:e,props:{client:this}}))}}stop(){this.transport.disconnect(),this._running=!1,null!=this._debugPanel&&(this._debugPanel.$destroy(),this._debugPanel=null)}subscribe(t){const e=Object.keys(this.subscribers).length;return this.subscribers[e]=t,this.transport.subscribe(()=>this.notifySubscribers()),!this._running&&this.multiplayer||t(this.getState()),()=>{delete this.subscribers[e]}}getInitialState(){return this.initialState}getState(){let t=this.store.getState();if(null!==this.gameStateOverride&&(t=this.gameStateOverride),null===t)return t;let e=!0;const i=this.game.flow.isPlayerActive(t.G,t.ctx,this.playerID);return this.multiplayer&&!i&&(e=!1),this.multiplayer||null===this.playerID||void 0===this.playerID||i||(e=!1),void 0!==t.ctx.gameover&&(e=!1),{...t,G:this.game.playerView(t.G,t.ctx,this.playerID),log:this.log,isActive:e,isConnected:this.transport.isConnected}}createDispatchers(){this.moves=createMoveDispatchers(this.game.moveNames,this.store,this.playerID,this.credentials,this.multiplayer),this.events=createEventDispatchers(this.game.flow.enabledEventNames,this.store,this.playerID,this.credentials,this.multiplayer),this.plugins=createPluginDispatchers(this.game.pluginNames,this.store,this.playerID,this.credentials,this.multiplayer)}updatePlayerID(t){this.playerID=t,this.createDispatchers(),this.transport.updatePlayerID(t),this.notifySubscribers()}updateMatchID(t){this.matchID=t,this.createDispatchers(),this.transport.updateMatchID(t),this.notifySubscribers()}updateCredentials(t){this.credentials=t,this.createDispatchers(),this.notifySubscribers()}}function Client(t){return new _ClientImpl(t)}exports.Client=Client;