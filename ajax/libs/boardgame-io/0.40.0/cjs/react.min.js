"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0}),require("./Debug-02ceb617.js"),require("redux");var turnOrder=require("./turn-order-7481bb3a.js");require("immer"),require("./reducer-f0b0f23d.js"),require("flatted");var ai=require("./ai-cf4f037d.js");require("./initialize-62a2cac2.js");var client=require("./client-cd42af51.js"),client$1=require("./client-6504cb9e.js"),React=_interopDefault(require("react")),PropTypes=_interopDefault(require("prop-types")),Cookies=_interopDefault(require("react-cookies"));require("./base-bdd9c13b.js");var socketio=require("./socketio-35d83e23.js");function Client(e){var t;let{game:r,numPlayers:a,loading:n,board:i,multiplayer:s,enhancer:c,debug:o}=e;if(void 0===n){n=(()=>React.createElement("div",{className:"bgio-loading"},"connecting..."))}return(t=class extends React.Component{constructor(e){super(e),void 0===o&&(o=e.debug),this.client=client.Client({game:r,debug:o,numPlayers:a,multiplayer:s,matchID:e.matchID,playerID:e.playerID,credentials:e.credentials,enhancer:c})}componentDidMount(){this.unsubscribe=this.client.subscribe(()=>this.forceUpdate()),this.client.start()}componentWillUnmount(){this.client.stop(),this.unsubscribe()}componentDidUpdate(e){this.props.matchID!=e.matchID&&this.client.updateMatchID(this.props.matchID),this.props.playerID!=e.playerID&&this.client.updatePlayerID(this.props.playerID),this.props.credentials!=e.credentials&&this.client.updateCredentials(this.props.credentials)}render(){const e=this.client.getState();if(null===e)return React.createElement(n);let t=null;return i&&(t=React.createElement(i,{...e,...this.props,isMultiplayer:!!s,moves:this.client.moves,events:this.client.events,matchID:this.client.matchID,playerID:this.client.playerID,reset:this.client.reset,undo:this.client.undo,redo:this.client.redo,log:this.client.log,matchData:this.client.matchData})),React.createElement("div",{className:"bgio-client"},t)}}).propTypes={matchID:PropTypes.string,playerID:PropTypes.string,credentials:PropTypes.string,debug:PropTypes.any},t.defaultProps={matchID:"default",playerID:null,credentials:null,debug:!0},t}require("./master-d82e57b5.js"),require("socket.io-client");class _LobbyConnectionImpl{constructor({server:e,gameComponents:t,playerName:r,playerCredentials:a}){this.client=new client$1.LobbyClient({server:e}),this.gameComponents=t,this.playerName=r||"Visitor",this.playerCredentials=a,this.matches=[]}async refresh(){try{this.matches=[];const e=await this.client.listGames();for(const t of e){if(!this._getGameComponents(t))continue;const{matches:e}=await this.client.listMatches(t);this.matches=this.matches.concat(e)}}catch(e){throw new Error("failed to retrieve list of matches ("+e+")")}}_getMatchInstance(e){for(let t of this.matches)if(t.matchID===e)return t}_getGameComponents(e){for(let t of this.gameComponents)if(t.game.name===e)return t}_findPlayer(e){for(let t of this.matches)if(t.players.some(t=>t.name===e))return t}async join(e,t,r){try{let a=this._findPlayer(this.playerName);if(a)throw new Error("player has already joined "+a.matchID);if(!(a=this._getMatchInstance(t)))throw new Error("game instance "+t+" not found");const n=await this.client.joinMatch(e,t,{playerID:r,playerName:this.playerName});a.players[Number.parseInt(r)].name=this.playerName,this.playerCredentials=n.playerCredentials}catch(e){throw new Error("failed to join match "+t+" ("+e+")")}}async leave(e,t){try{let r=this._getMatchInstance(t);if(!r)throw new Error("match instance not found");for(const a of r.players)if(a.name===this.playerName)return await this.client.leaveMatch(e,t,{playerID:a.id.toString(),credentials:this.playerCredentials}),delete a.name,void delete this.playerCredentials;throw new Error("player not found in match")}catch(e){throw new Error("failed to leave match "+t+" ("+e+")")}}async disconnect(){let e=this._findPlayer(this.playerName);e&&await this.leave(e.gameName,e.matchID),this.matches=[],this.playerName="Visitor"}async create(e,t){try{const r=this._getGameComponents(e);if(!r)throw new Error("game not found");if(t<r.game.minPlayers||t>r.game.maxPlayers)throw new Error("invalid number of players "+t);await this.client.createMatch(e,{numPlayers:t})}catch(t){throw new Error("failed to create match for "+e+" ("+t+")")}}}function LobbyConnection(e){return new _LobbyConnectionImpl(e)}var LobbyLoginForm=function(e){turnOrder._inherits(r,e);var t=turnOrder._createSuper(r);function r(){var e;turnOrder._classCallCheck(this,r);for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i];return e=t.call.apply(t,[this].concat(n)),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"state",{playerName:e.props.playerName,nameErrorMsg:""}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"onClickEnter",function(){""!==e.state.playerName&&e.props.onEnter(e.state.playerName)}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"onKeyPress",function(t){"Enter"===t.key&&e.onClickEnter()}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"onChangePlayerName",function(t){var r=t.target.value.trim();e.setState({playerName:r,nameErrorMsg:r.length>0?"":"empty player name"})}),e}return turnOrder._createClass(r,[{key:"render",value:function(){return React.createElement("div",null,React.createElement("p",{className:"phase-title"},"Choose a player name:"),React.createElement("input",{type:"text",value:this.state.playerName,onChange:this.onChangePlayerName,onKeyPress:this.onKeyPress}),React.createElement("span",{className:"buttons"},React.createElement("button",{className:"buttons",onClick:this.onClickEnter},"Enter")),React.createElement("br",null),React.createElement("span",{className:"error-msg"},this.state.nameErrorMsg,React.createElement("br",null)))}}]),r}(React.Component);turnOrder._defineProperty(LobbyLoginForm,"propTypes",{playerName:PropTypes.string,onEnter:PropTypes.func.isRequired}),turnOrder._defineProperty(LobbyLoginForm,"defaultProps",{playerName:""});var LobbyMatchInstance=function(e){turnOrder._inherits(r,e);var t=turnOrder._createSuper(r);function r(){var e;turnOrder._classCallCheck(this,r);for(var a=arguments.length,n=new Array(a),i=0;i<a;i++)n[i]=arguments[i];return e=t.call.apply(t,[this].concat(n)),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createSeat",function(e){return e.name||"[free]"}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createButtonJoin",function(t,r){return React.createElement("button",{key:"button-join-"+t.matchID,onClick:function(){return e.props.onClickJoin(t.gameName,t.matchID,""+r)}},"Join")}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createButtonLeave",function(t){return React.createElement("button",{key:"button-leave-"+t.matchID,onClick:function(){return e.props.onClickLeave(t.gameName,t.matchID)}},"Leave")}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createButtonPlay",function(t,r){return React.createElement("button",{key:"button-play-"+t.matchID,onClick:function(){return e.props.onClickPlay(t.gameName,{matchID:t.matchID,playerID:""+r,numPlayers:t.players.length})}},"Play")}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createButtonSpectate",function(t){return React.createElement("button",{key:"button-spectate-"+t.matchID,onClick:function(){return e.props.onClickPlay(t.gameName,{matchID:t.matchID,numPlayers:t.players.length})}},"Spectate")}),turnOrder._defineProperty(turnOrder._assertThisInitialized(e),"_createInstanceButtons",function(t){var r=t.players.find(function(t){return t.name===e.props.playerName}),a=t.players.find(function(e){return!e.name});return r&&a?e._createButtonLeave(t):a?e._createButtonJoin(t,a.id):r?React.createElement("div",null,[e._createButtonPlay(t,r.id),e._createButtonLeave(t)]):e._createButtonSpectate(t)}),e}return turnOrder._createClass(r,[{key:"render",value:function(){var e=this.props.match,t="OPEN";return e.players.find(function(e){return!e.name})||(t="RUNNING"),React.createElement("tr",{key:"line-"+e.matchID},React.createElement("td",{key:"cell-name-"+e.matchID},e.gameName),React.createElement("td",{key:"cell-status-"+e.matchID},t),React.createElement("td",{key:"cell-seats-"+e.matchID},e.players.map(this._createSeat).join(", ")),React.createElement("td",{key:"cell-buttons-"+e.matchID},this._createInstanceButtons(e)))}}]),r}(React.Component);turnOrder._defineProperty(LobbyMatchInstance,"propTypes",{match:PropTypes.shape({gameName:PropTypes.string.isRequired,matchID:PropTypes.string.isRequired,players:PropTypes.array.isRequired}),playerName:PropTypes.string.isRequired,onClickJoin:PropTypes.func.isRequired,onClickLeave:PropTypes.func.isRequired,onClickPlay:PropTypes.func.isRequired});var LobbyCreateMatchForm=function(e){turnOrder._inherits(r,e);var t=turnOrder._createSuper(r);function r(e){var a;turnOrder._classCallCheck(this,r),a=t.call(this,e),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"state",{selectedGame:0,numPlayers:2}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_createGameNameOption",function(e,t){return React.createElement("option",{key:"name-option-"+t,value:t},e.game.name)}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_createNumPlayersOption",function(e){return React.createElement("option",{key:"num-option-"+e,value:e},e)}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_createNumPlayersRange",function(e){return turnOrder._toConsumableArray(new Array(e.maxPlayers+1).keys()).slice(e.minPlayers)}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"onChangeNumPlayers",function(e){a.setState({numPlayers:Number.parseInt(e.target.value)})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"onChangeSelectedGame",function(e){var t=Number.parseInt(e.target.value);a.setState({selectedGame:t,numPlayers:a.props.games[t].game.minPlayers})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"onClickCreate",function(){a.props.createMatch(a.props.games[a.state.selectedGame].game.name,a.state.numPlayers)});var n,i=turnOrder._createForOfIteratorHelper(e.games);try{for(i.s();!(n=i.n()).done;){var s=n.value.game;s.minPlayers||(s.minPlayers=1),s.maxPlayers||(s.maxPlayers=4),console.assert(s.maxPlayers>=s.minPlayers)}}catch(e){i.e(e)}finally{i.f()}return a.state={selectedGame:0,numPlayers:e.games[0].game.minPlayers},a}return turnOrder._createClass(r,[{key:"render",value:function(){var e=this;return React.createElement("div",null,React.createElement("select",{value:this.state.selectedGame,onChange:function(t){return e.onChangeSelectedGame(t)}},this.props.games.map(this._createGameNameOption)),React.createElement("span",null,"Players:"),React.createElement("select",{value:this.state.numPlayers,onChange:this.onChangeNumPlayers},this._createNumPlayersRange(this.props.games[this.state.selectedGame].game).map(this._createNumPlayersOption)),React.createElement("span",{className:"buttons"},React.createElement("button",{onClick:this.onClickCreate},"Create")))}}]),r}(React.Component);turnOrder._defineProperty(LobbyCreateMatchForm,"propTypes",{games:PropTypes.array.isRequired,createMatch:PropTypes.func.isRequired});var LobbyPhases={ENTER:"enter",PLAY:"play",LIST:"list"},Lobby=function(e){turnOrder._inherits(r,e);var t=turnOrder._createSuper(r);function r(e){var a;return turnOrder._classCallCheck(this,r),a=t.call(this,e),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"state",{phase:LobbyPhases.ENTER,playerName:"Visitor",runningMatch:null,errorMsg:"",credentialStore:{}}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_createConnection",function(e){var t=a.state.playerName;a.connection=LobbyConnection({server:e.lobbyServer,gameComponents:e.gameComponents,playerName:t,playerCredentials:a.state.credentialStore[t]})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_updateCredentials",function(e,t){a.setState(function(r){var a=Object.assign({},r.credentialStore);return a[[e]]=t,{credentialStore:a}})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_updateConnection",async function(){await a.connection.refresh(),a.forceUpdate()}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_enterLobby",function(e){a.setState({playerName:e,phase:LobbyPhases.LIST})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_exitLobby",async function(){await a.connection.disconnect(),a.setState({phase:LobbyPhases.ENTER,errorMsg:""})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_createMatch",async function(e,t){try{await a.connection.create(e,t),await a.connection.refresh(),a.setState({})}catch(e){a.setState({errorMsg:e.message})}}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_joinMatch",async function(e,t,r){try{await a.connection.join(e,t,r),await a.connection.refresh(),a._updateCredentials(a.connection.playerName,a.connection.playerCredentials)}catch(e){a.setState({errorMsg:e.message})}}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_leaveMatch",async function(e,t){try{await a.connection.leave(e,t),await a.connection.refresh(),a._updateCredentials(a.connection.playerName,a.connection.playerCredentials)}catch(e){a.setState({errorMsg:e.message})}}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_startMatch",function(e,t){var r=a.connection._getGameComponents(e);if(r){var n=void 0;if(t.numPlayers>1&&(n=a.props.gameServer?socketio.SocketIO({server:a.props.gameServer}):socketio.SocketIO()),1==t.numPlayers){for(var i=r.game.maxPlayers,s={},c=1;c<i;c++)s[c+""]=ai.MCTSBot;n=socketio.Local({bots:s})}var o={app:a.props.clientFactory({game:r.game,board:r.board,debug:a.props.debug,multiplayer:n}),matchID:t.matchID,playerID:t.numPlayers>1?t.playerID:"0",credentials:a.connection.playerCredentials};a.setState({phase:LobbyPhases.PLAY,runningMatch:o})}else a.setState({errorMsg:"game "+e+" not supported"})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_exitMatch",function(){a.setState({phase:LobbyPhases.LIST,runningMatch:null})}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"_getPhaseVisibility",function(e){return a.state.phase!==e?"hidden":"phase"}),turnOrder._defineProperty(turnOrder._assertThisInitialized(a),"renderMatches",function(e,t){return e.map(function(e){var r=e.matchID,n=e.gameName,i=e.players;return React.createElement(LobbyMatchInstance,{key:"instance-"+r,match:{matchID:r,gameName:n,players:Object.values(i)},playerName:t,onClickJoin:a._joinMatch,onClickLeave:a._leaveMatch,onClickPlay:a._startMatch})})}),a._createConnection(a.props),setInterval(a._updateConnection,a.props.refreshInterval),a}return turnOrder._createClass(r,[{key:"componentDidMount",value:function(){var e=Cookies.load("lobbyState")||{};e.phase&&e.phase===LobbyPhases.PLAY&&(e.phase=LobbyPhases.LIST),this.setState({phase:e.phase||LobbyPhases.ENTER,playerName:e.playerName||"Visitor",credentialStore:e.credentialStore||{}})}},{key:"componentDidUpdate",value:function(e,t){var r=this.state.playerName,a=this.state.credentialStore[r];if(t.phase!==this.state.phase||t.credentialStore[r]!==a||t.playerName!==r){this._createConnection(this.props),this._updateConnection();var n={phase:this.state.phase,playerName:r,credentialStore:this.state.credentialStore};Cookies.save("lobbyState",n,{path:"/"})}}},{key:"render",value:function(){var e=this.props,t=e.gameComponents,r=e.renderer,a=this.state,n=a.errorMsg,i=a.playerName,s=a.phase,c=a.runningMatch;return r?r({errorMsg:n,gameComponents:t,matches:this.connection.matches,phase:s,playerName:i,runningMatch:c,handleEnterLobby:this._enterLobby,handleExitLobby:this._exitLobby,handleCreateMatch:this._createMatch,handleJoinMatch:this._joinMatch,handleLeaveMatch:this._leaveMatch,handleExitMatch:this._exitMatch,handleRefreshMatches:this._updateConnection,handleStartMatch:this._startMatch}):React.createElement("div",{id:"lobby-view",style:{padding:50}},React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.ENTER)},React.createElement(LobbyLoginForm,{key:i,playerName:i,onEnter:this._enterLobby})),React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.LIST)},React.createElement("p",null,"Welcome, ",i),React.createElement("div",{className:"phase-title",id:"match-creation"},React.createElement("span",null,"Create a match:"),React.createElement(LobbyCreateMatchForm,{games:t,createMatch:this._createMatch})),React.createElement("p",{className:"phase-title"},"Join a match:"),React.createElement("div",{id:"instances"},React.createElement("table",null,React.createElement("tbody",null,this.renderMatches(this.connection.matches,i))),React.createElement("span",{className:"error-msg"},n,React.createElement("br",null))),React.createElement("p",{className:"phase-title"},"Matches that become empty are automatically deleted.")),React.createElement("div",{className:this._getPhaseVisibility(LobbyPhases.PLAY)},c&&React.createElement(c.app,{matchID:c.matchID,playerID:c.playerID,credentials:c.credentials}),React.createElement("div",{className:"buttons",id:"match-exit"},React.createElement("button",{onClick:this._exitMatch},"Exit match"))),React.createElement("div",{className:"buttons",id:"lobby-exit"},React.createElement("button",{onClick:this._exitLobby},"Exit lobby")))}}]),r}(React.Component);turnOrder._defineProperty(Lobby,"propTypes",{gameComponents:PropTypes.array.isRequired,lobbyServer:PropTypes.string,gameServer:PropTypes.string,debug:PropTypes.bool,clientFactory:PropTypes.func,refreshInterval:PropTypes.number}),turnOrder._defineProperty(Lobby,"defaultProps",{debug:!1,clientFactory:Client,refreshInterval:2e3}),exports.Client=Client,exports.Lobby=Lobby;