import{urlAlphabet}from"./url-alphabet/index.js";if("production"!==process.env.NODE_ENV){if("undefined"!=typeof navigator&&"ReactNative"===navigator.product&&"undefined"==typeof crypto)throw new Error("React Native does not have a built-in secure random generator. If you don’t need unpredictable IDs use `nanoid/non-secure`. For secure IDs, import `react-native-get-random-values` before Nano ID. If you use Expo, install `expo-random` and use `nanoid/async`.");if("undefined"!=typeof msCrypto&&"undefined"==typeof crypto)throw new Error("Add `if (!window.crypto) window.crypto = window.msCrypto` before Nano ID to fix IE 11 support");if("undefined"==typeof crypto)throw new Error("Your browser does not have secure random generator. If you don’t need unpredictable IDs, you can use nanoid/non-secure.")}let random=e=>crypto.getRandomValues(new Uint8Array(e)),customRandom=(e,o,n)=>{let t=(2<<Math.log(e.length-1)/Math.LN2)-1,r=-~(1.6*t*o/e.length);return()=>{let a="";for(;;){let d=n(r),u=r;for(;u--;)if((a+=e[d[u]&t]||"").length===+o)return a}}},customAlphabet=(e,o)=>customRandom(e,o,random),nanoid=(e=21)=>{let o="",n=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let t=63&n[e];o+=t<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t<63?"_":"-"}return o};export{nanoid,customAlphabet,customRandom,urlAlphabet,random};