!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var s in r)("object"==typeof exports?exports:e)[s]=r[s]}}("undefined"!=typeof self?self:this,(function(){return function(e){var t={};function r(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,s){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(r.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(s,n,function(t){return e[t]}.bind(null,n));return s},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";const s=function(e){if(!(e=Object.assign({wavBitDepth:16,numberOfChannels:1},e)).wavSampleRate)throw new Error("wavSampleRate value is required to record. NOTE: Audio is not resampled!");if(-1===[8,16,24,32].indexOf(e.wavBitDepth))throw new Error("Only 8, 16, 24 and 32 bits per sample are supported");this.numberOfChannels=e.numberOfChannels,this.bitDepth=e.wavBitDepth,this.sampleRate=e.wavSampleRate,this.recordedBuffers=[],this.bytesPerSample=this.bitDepth/8};if(s.prototype.record=function(e){for(var t=e[0].length,r=new Uint8Array(t*this.numberOfChannels*this.bytesPerSample),s=0;s<t;s++)for(var n=0;n<this.numberOfChannels;n++){var o=(s*this.numberOfChannels+n)*this.bytesPerSample,a=Math.max(-1,Math.min(1,e[n][s]));switch(this.bytesPerSample){case 4:a=2147483647.5*a-.5,r[o]=a,r[o+1]=a>>8,r[o+2]=a>>16,r[o+3]=a>>24;break;case 3:a=8388607.5*a-.5,r[o]=a,r[o+1]=a>>8,r[o+2]=a>>16;break;case 2:a=32767.5*a-.5,r[o]=a,r[o+1]=a>>8;break;case 1:r[o]=127.5*(a+1);break;default:throw new Error("Only 8, 16, 24 and 32 bits per sample are supported")}}this.recordedBuffers.push(r)},s.prototype.requestData=function(){var e=this.recordedBuffers[0].length,t=this.recordedBuffers.length*e,r=new Uint8Array(44+t),s=new DataView(r.buffer);s.setUint32(0,1380533830,!1),s.setUint32(4,36+t,!0),s.setUint32(8,1463899717,!1),s.setUint32(12,1718449184,!1),s.setUint32(16,16,!0),s.setUint16(20,1,!0),s.setUint16(22,this.numberOfChannels,!0),s.setUint32(24,this.sampleRate,!0),s.setUint32(28,this.sampleRate*this.bytesPerSample*this.numberOfChannels,!0),s.setUint16(32,this.bytesPerSample*this.numberOfChannels,!0),s.setUint16(34,this.bitDepth,!0),s.setUint32(36,1684108385,!1),s.setUint32(40,t,!0);for(var n=0;n<this.recordedBuffers.length;n++)r.set(this.recordedBuffers[n],n*e+44);return{message:"page",page:r}},"function"==typeof registerProcessor){class e extends AudioWorkletProcessor{constructor(){super(),this.continueProcess=!0,this.port.onmessage=({data:e})=>{switch(e.command){case"done":this.recorder&&(this.postPage(this.recorder.requestData()),this.port.postMessage({message:"done"}),delete this.recorder);break;case"close":this.continueProcess=!1;break;case"init":this.recorder=new s(e),this.port.postMessage({message:"ready"})}}}process(e){return this.recorder&&e[0]&&e[0].length&&this.recorder.record(e[0]),this.continueProcess}postPage(e){e&&this.port.postMessage(e,[e.page.buffer])}}registerProcessor("encoder-worklet",e)}else{var n;onmessage=({data:e})=>{switch(e.command){case"encode":n&&n.record(e.buffers);break;case"done":n&&((t=n.requestData())&&postMessage(t,[t.page.buffer]),postMessage({message:"done"}),n=null);break;case"close":close();break;case"init":n=new s(e),postMessage({message:"ready"})}var t}}(e=e||{}).exports=s}])}));