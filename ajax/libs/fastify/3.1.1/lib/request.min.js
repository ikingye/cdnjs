"use strict";const proxyAddr=require("proxy-addr"),{emitWarning:emitWarning}=require("./warnings");function Request(t,e,r,i,s,n){this.id=t,this.params=e,this.raw=r,this.query=i,this.headers=s,this.log=n,this.body=null}function getTrustProxyFn(t){if("function"==typeof t)return t;if(!0===t)return function(){return!0};if("number"==typeof t)return function(e,r){return r<t};if("string"==typeof t){const e=t.split(",").map(t=>t.trim());return proxyAddr.compile(e)}return proxyAddr.compile(t||[])}function buildRequest(t,e){return e?buildRequestWithTrustProxy(t,e):buildRegularRequest(t)}function buildRegularRequest(t){function e(t,e,r,i,s,n){this.id=t,this.params=e,this.raw=r,this.query=i,this.headers=s,this.log=n,this.body=null}return e.prototype=new t,e}function buildRequestWithTrustProxy(t,e){const r=buildRegularRequest(t),i=getTrustProxyFn(e);return Object.defineProperties(r.prototype,{ip:{get(){return proxyAddr(this.raw,i)}},ips:{get(){return proxyAddr.all(this.raw,i)}},hostname:{get(){return void 0!==this.ip&&this.headers["x-forwarded-host"]?this.headers["x-forwarded-host"]:this.headers.host||this.headers[":authority"]}}}),r}Object.defineProperties(Request.prototype,{req:{get(){return emitWarning("FSTDEP001"),this.raw}},url:{get(){return this.raw.url}},method:{get(){return this.raw.method}},connection:{get(){return this.raw.connection}},ip:{get(){return this.connection.remoteAddress}},hostname:{get(){return this.headers.host||this.headers[":authority"]}}}),module.exports=Request,module.exports.buildRequest=buildRequest;