import{Physics}from"./../Physics";import{BoundingBox}from"./BoundingBox";import{Logger}from"../Util/Log";var TreeNode=function(){function t(t){this.parent=t,this.parent=t||null,this.body=null,this.bounds=new BoundingBox,this.left=null,this.right=null,this.height=0}return t.prototype.isLeaf=function(){return!this.left&&!this.right},t}();export{TreeNode};var DynamicTree=function(){function t(t){void 0===t&&(t=new BoundingBox(-Number.MAX_VALUE,-Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)),this.worldBounds=t,this.root=null,this.nodes={}}return t.prototype._insert=function(t){if(null===this.root)return this.root=t,void(this.root.parent=null);for(var e=t.bounds,r=this.root;!r.isLeaf();){var i=r.left,n=r.right,o=r.bounds.getPerimeter(),h=r.bounds.combine(e).getPerimeter(),s=2*h,u=2*(h-o),a=0,d=e.combine(i.bounds),l=void 0;i.isLeaf()?a=d.getPerimeter()+u:(l=i.bounds.getPerimeter(),a=d.getPerimeter()-l+u);var g=0,f=e.combine(n.bounds);if(n.isLeaf()?g=f.getPerimeter()+u:(l=n.bounds.getPerimeter(),g=f.getPerimeter()-l+u),s<a&&s<g)break;r=a<g?i:n}var b=r.parent,c=new TreeNode(b);c.bounds=e.combine(r.bounds),c.height=r.height+1,null!==b?(b.left===r?b.left=c:b.right=c,c.left=r,c.right=t,r.parent=c,t.parent=c):(c.left=r,c.right=t,r.parent=c,t.parent=c,this.root=c);for(var p=t.parent;p;){if(!(p=this._balance(p)).left)throw new Error("Parent of current leaf cannot have a null left child"+p);if(!p.right)throw new Error("Parent of current leaf cannot have a null right child"+p);p.height=1+Math.max(p.left.height,p.right.height),p.bounds=p.left.bounds.combine(p.right.bounds),p=p.parent}},t.prototype._remove=function(t){if(t!==this.root){var e,r=t.parent,i=r.parent;if(e=r.left===t?r.right:r.left,i){i.left===r?i.left=e:i.right=e,e.parent=i;for(var n=i;n;)(n=this._balance(n)).bounds=n.left.bounds.combine(n.right.bounds),n.height=1+Math.max(n.left.height,n.right.height),n=n.parent}else this.root=e,e.parent=null}else this.root=null},t.prototype.trackBody=function(t){var e=new TreeNode;e.body=t,e.bounds=t.collider.bounds,e.bounds.left-=2,e.bounds.top-=2,e.bounds.right+=2,e.bounds.bottom+=2,this.nodes[t.id]=e,this._insert(e)},t.prototype.updateBody=function(t){var e=this.nodes[t.id];if(!e)return!1;var r=t.collider.bounds;if(!this.worldBounds.contains(r))return Logger.getInstance().warn("Collider with id "+t.id+" is outside the world bounds and will no longer be tracked for physics"),this.untrackBody(t),!1;if(e.bounds.contains(r))return!1;this._remove(e),r.left-=Physics.boundsPadding,r.top-=Physics.boundsPadding,r.right+=Physics.boundsPadding,r.bottom+=Physics.boundsPadding;var i=t.vel.x*Physics.dynamicTreeVelocityMultiplier,n=t.vel.y*Physics.dynamicTreeVelocityMultiplier;return i<0?r.left+=i:r.right+=i,n<0?r.top+=n:r.bottom+=n,e.bounds=r,this._insert(e),!0},t.prototype.untrackBody=function(t){var e=this.nodes[t.collider.id];e&&(this._remove(e),this.nodes[t.collider.id]=null,delete this.nodes[t.collider.id])},t.prototype._balance=function(t){if(null===t)throw new Error("Cannot balance at null node");if(t.isLeaf()||t.height<2)return t;var e=t.left,r=t.right,i=t,n=e,o=r,h=e.left,s=e.right,u=r.left,a=r.right,d=o.height-n.height;if(d>1)return o.left=i,o.parent=i.parent,i.parent=o,o.parent?o.parent.left===i?o.parent.left=o:o.parent.right=o:this.root=o,u.height>a.height?(o.right=u,i.right=a,a.parent=i,i.bounds=n.bounds.combine(a.bounds),o.bounds=i.bounds.combine(u.bounds),i.height=1+Math.max(n.height,a.height),o.height=1+Math.max(i.height,u.height)):(o.right=a,i.right=u,u.parent=i,i.bounds=n.bounds.combine(u.bounds),o.bounds=i.bounds.combine(a.bounds),i.height=1+Math.max(n.height,u.height),o.height=1+Math.max(i.height,a.height)),o;if(d<-1){if(n.left=i,n.parent=i.parent,i.parent=n,n.parent)if(n.parent.left===i)n.parent.left=n;else{if(n.parent.right!==i)throw"Error rotating Dynamic Tree";n.parent.right=n}else this.root=n;return h.height>s.height?(n.right=h,i.left=s,s.parent=i,i.bounds=o.bounds.combine(s.bounds),n.bounds=i.bounds.combine(h.bounds),i.height=1+Math.max(o.height,s.height),n.height=1+Math.max(i.height,h.height)):(n.right=s,i.left=h,h.parent=i,i.bounds=o.bounds.combine(h.bounds),n.bounds=i.bounds.combine(s.bounds),i.height=1+Math.max(o.height,h.height),n.height=1+Math.max(i.height,s.height)),n}return t},t.prototype.getHeight=function(){return null===this.root?0:this.root.height},t.prototype.query=function(t,e){var r=t.collider.bounds,i=function(n){if(n&&n.bounds.intersect(r)){if(!n.isLeaf()||n.body===t)return i(n.left)||i(n.right);if(e.call(t,n.body))return!0}return!1};i(this.root)},t.prototype.rayCastQuery=function(t,e,r){void 0===e&&(e=1/0);var i=function(n){if(n&&n.bounds.rayCast(t,e)){if(!n.isLeaf())return i(n.left)||i(n.right);if(r.call(t,n.body))return!0}return!1};i(this.root)},t.prototype.getNodes=function(){var t=function(e){return e?[e].concat(t(e.left),t(e.right)):[]};return t(this.root)},t.prototype.debugDraw=function(t){var e=function(r){r&&(r.isLeaf()?(t.lineWidth=1,t.strokeStyle="green"):(t.lineWidth=1,t.strokeStyle="white"),r.bounds.debugDraw(t),r.left&&e(r.left),r.right&&e(r.right))};e(this.root)},t}();export{DynamicTree};