var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,s=1,r=arguments.length;s<r;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},__spreadArrays=this&&this.__spreadArrays||function(){for(var e=0,t=0,s=arguments.length;t<s;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<s;t++)for(var a=arguments[t],n=0,l=a.length;n<l;n++,o++)r[o]=a[n];return r};import{Logger}from"./Log";import*as Util from"./Util";export var maxMessages=5;var obsoleteMessage={};export var resetObsoleteCounter=function(){for(var e in obsoleteMessage)obsoleteMessage[e]=0};var logMessage=function(e,t){obsoleteMessage[e]<maxMessages&&(Logger.getInstance().warn(e),console.trace&&t.showStackTrace&&console.trace()),obsoleteMessage[e]++};export function obsolete(e){return e=Util.extend({},{message:"This feature will be removed in future versions of Excalibur.",alternateMethod:null,showStackTrack:!1},e),function(t,s,r){if(r&&"function"!=typeof r.value&&"function"!=typeof r.get&&"function"!=typeof r.set)throw new SyntaxError("Only classes/functions/getters/setters can be marked as obsolete");var o=(t.name||"")+(t.name&&s?".":"")+(s||"")+" is marked obsolete: "+e.message+(e.alternateMethod?" Use "+e.alternateMethod+" instead":"");obsoleteMessage[o]||(obsoleteMessage[o]=0);var a=r?__assign({},r):t;if(!r){var n=function(){var t=Array.prototype.slice.call(arguments);return logMessage(o,e),new(a.bind.apply(a,__spreadArrays([void 0],t)))};return n.prototype=a.prototype,n}return r&&r.value?(a.value=function(){return logMessage(o,e),r.value.apply(this,arguments)},a):(r&&r.get&&(a.get=function(){return logMessage(o,e),r.get.apply(this,arguments)}),r&&r.set&&(a.set=function(){return logMessage(o,e),r.set.apply(this,arguments)}),a)}};