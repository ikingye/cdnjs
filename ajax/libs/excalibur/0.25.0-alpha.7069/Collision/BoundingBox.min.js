import{ConvexPolygon}from"./ConvexPolygon";import{Vector}from"../Algebra";import{Color}from"../Drawing/Color";import{Side}from"./Side";var BoundingBox=function(){function t(t,o,i,e){void 0===t&&(t=0),void 0===o&&(o=0),void 0===i&&(i=0),void 0===e&&(e=0),"object"==typeof t?(this.left=t.left,this.top=t.top,this.right=t.right,this.bottom=t.bottom):"number"==typeof t&&(this.left=t,this.top=o,this.right=i,this.bottom=e)}return t.getSideFromIntersection=function(t){return t&&t?Math.abs(t.x)>Math.abs(t.y)?t.x<0?Side.Right:Side.Left:t.y<0?Side.Bottom:Side.Top:Side.None},t.fromPoints=function(o){for(var i=1/0,e=1/0,r=-1/0,h=-1/0,n=0;n<o.length;n++)o[n].x<i&&(i=o[n].x),o[n].x>r&&(r=o[n].x),o[n].y<e&&(e=o[n].y),o[n].y>h&&(h=o[n].y);return new t(i,e,r,h)},t.fromDimension=function(o,i,e,r){return void 0===e&&(e=Vector.Half),void 0===r&&(r=Vector.Zero),new t(-o*e.x+r.x,-i*e.y+r.y,o-o*e.x+r.x,i-i*e.y+r.y)},Object.defineProperty(t.prototype,"width",{get:function(){return this.right-this.left},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.bottom-this.top},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"center",{get:function(){return new Vector((this.left+this.right)/2,(this.top+this.bottom)/2)},enumerable:!1,configurable:!0}),t.prototype.translate=function(o){return new t(this.left+o.x,this.top+o.y,this.right+o.x,this.bottom+o.y)},t.prototype.rotate=function(o,i){void 0===i&&(i=Vector.Zero);var e=this.getPoints().map(function(t){return t.rotate(o,i)});return t.fromPoints(e)},t.prototype.scale=function(o,i){void 0===i&&(i=Vector.Zero);var e=this.translate(i);return new t(e.left*o.x,e.top*o.y,e.right*o.x,e.bottom*o.y)},t.prototype.getPerimeter=function(){return 2*(this.width+this.height)},t.prototype.getPoints=function(){var t=[];return t.push(new Vector(this.left,this.top)),t.push(new Vector(this.right,this.top)),t.push(new Vector(this.right,this.bottom)),t.push(new Vector(this.left,this.bottom)),t},t.prototype.toPolygon=function(t){var o=null;return t&&t.body&&t.body.collider&&(o=t.body.collider),new ConvexPolygon({collider:o,points:this.getPoints(),offset:Vector.Zero})},t.prototype.rayCast=function(t,o){void 0===o&&(o=1/0);var i=-1/0,e=1/0,r=0===t.dir.x?Number.MAX_VALUE:1/t.dir.x,h=0===t.dir.y?Number.MAX_VALUE:1/t.dir.y,n=(this.left-t.pos.x)*r,s=(this.right-t.pos.x)*r;i=Math.min(n,s),e=Math.max(n,s);var p=(this.top-t.pos.y)*h,a=(this.bottom-t.pos.y)*h;return i=Math.max(i,Math.min(p,a)),(e=Math.min(e,Math.max(p,a)))>=Math.max(0,i)&&i<o},t.prototype.rayCastTime=function(t,o){void 0===o&&(o=1/0);var i=-1/0,e=1/0,r=0===t.dir.x?Number.MAX_VALUE:1/t.dir.x,h=0===t.dir.y?Number.MAX_VALUE:1/t.dir.y,n=(this.left-t.pos.x)*r,s=(this.right-t.pos.x)*r;i=Math.min(n,s),e=Math.max(n,s);var p=(this.top-t.pos.y)*h,a=(this.bottom-t.pos.y)*h;return i=Math.max(i,Math.min(p,a)),(e=Math.min(e,Math.max(p,a)))>=Math.max(0,i)&&i<o?i:-1},t.prototype.contains=function(o){return o instanceof Vector?this.left<=o.x&&this.top<=o.y&&this.bottom>=o.y&&this.right>=o.x:o instanceof t&&(this.left<o.left&&this.top<o.top&&o.bottom<this.bottom&&o.right<this.right)},t.prototype.combine=function(o){return new t(Math.min(this.left,o.left),Math.min(this.top,o.top),Math.max(this.right,o.right),Math.max(this.bottom,o.bottom))},Object.defineProperty(t.prototype,"dimensions",{get:function(){return new Vector(this.width,this.height)},enumerable:!1,configurable:!0}),t.prototype.intersect=function(t){var o=this.combine(t);if(o.width<t.width+this.width&&o.height<t.height+this.height&&!o.dimensions.equals(t.dimensions)&&!o.dimensions.equals(this.dimensions)){var i=0;i=this.right>=t.left&&this.right<=t.right?t.left-this.right:t.right-this.left;var e=0;return e=this.top<=t.bottom&&this.top>=t.top?t.bottom-this.top:t.top-this.bottom,Math.abs(i)<Math.abs(e)?new Vector(i,0):new Vector(0,e)}if(o.dimensions.equals(t.dimensions)||o.dimensions.equals(this.dimensions)){i=0;i=this.width-t.width>=0?this.right-t.right<=t.left-this.left?t.left-this.right:t.right-this.left:t.right-this.right<=this.left-t.left?this.left-t.right:this.right-t.left;e=0;return e=this.height-t.height>=0?this.bottom-t.bottom<=t.top-this.top?t.top-this.bottom:t.bottom-this.top:t.bottom-this.bottom<=this.top-t.top?this.top-t.bottom:this.bottom-t.top,Math.abs(i)<Math.abs(e)?new Vector(i,0):new Vector(0,e)}return null},t.prototype.intersectWithSide=function(o){var i=this.intersect(o);return t.getSideFromIntersection(i)},t.prototype.debugDraw=function(t,o){void 0===o&&(o=Color.Yellow),t.strokeStyle=o.toString(),t.strokeRect(this.left,this.top,this.width,this.height)},t}();export{BoundingBox};