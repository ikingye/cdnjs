var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var i,o=1,n=arguments.length;o<n;o++)for(var r in i=arguments[o])Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r]);return t}).apply(this,arguments)};import{Vector}from"../Algebra";var Polygon=function(){function t(t){this.lineWidth=5,this.filled=!1,this._points=[],this.anchor=Vector.Zero,this.offset=Vector.Zero,this.rotation=0,this.scale=Vector.One,this.opacity=1,this._points=t;var i=this._points.reduce(function(t,i){return Math.min(t,i.x)},0),o=this._points.reduce(function(t,i){return Math.max(t,i.x)},0);this.drawWidth=o-i;var n=this._points.reduce(function(t,i){return Math.min(t,i.y)},0),r=this._points.reduce(function(t,i){return Math.max(t,i.y)},0);this.drawHeight=r-n,this.height=this.drawHeight,this.width=this.drawWidth}return t.prototype.addEffect=function(){},t.prototype.removeEffect=function(){},t.prototype.clearEffects=function(){},t.prototype.reset=function(){},t.prototype.draw=function(t,i,o){t instanceof CanvasRenderingContext2D?this._drawWithOptions({ctx:t,x:i,y:o}):this._drawWithOptions(t)},t.prototype._drawWithOptions=function(t){var i,o,n,r,a,e,s,l,h=__assign(__assign({},t),{rotation:null!==(i=t.rotation)&&void 0!==i?i:this.rotation,drawWidth:null!==(o=t.drawWidth)&&void 0!==o?o:this.drawWidth,drawHeight:null!==(n=t.drawHeight)&&void 0!==n?n:this.drawHeight,flipHorizontal:null!==(r=t.flipHorizontal)&&void 0!==r?r:this.flipHorizontal,flipVertical:null!==(a=t.flipVertical)&&void 0!==a?a:this.flipVertical,anchor:null!==(e=t.anchor)&&void 0!==e?e:this.anchor,offset:null!==(s=t.offset)&&void 0!==s?s:this.offset,opacity:null!==(l=t.opacity)&&void 0!==l?l:this.opacity}),c=h.ctx,f=h.x,p=h.y,d=h.rotation,u=h.drawWidth,y=h.drawHeight,g=h.anchor,_=h.offset,v=h.opacity,w=h.flipHorizontal,x=h.flipVertical,W=u*g.x+_.x+f,H=y*g.y+_.y+p;c.save(),c.translate(W,H),c.scale(this.scale.x,this.scale.y),c.rotate(d),c.beginPath(),c.lineWidth=this.lineWidth;var m=this._points[0];c.moveTo(m.x,m.y);for(var V=0,b=this._points.length;V<b;V++)c.lineTo(this._points[V].x,this._points[V].y);c.lineTo(m.x,m.y),c.closePath(),this.filled&&(c.fillStyle=this.fillColor.toString(),c.fill()),c.strokeStyle=this.lineColor.toString(),w&&(c.translate(u,0),c.scale(-1,1)),x&&(c.translate(0,y),c.scale(1,-1));var O=c.globalAlpha;c.globalAlpha=null!=v?v:1,c.stroke(),c.globalAlpha=O,c.restore()},t}();export{Polygon};