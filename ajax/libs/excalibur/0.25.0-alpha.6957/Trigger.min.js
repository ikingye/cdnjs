var __extends=this&&this.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};return function(e,r){function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();import{Color}from"./Drawing/Color";import{ActionQueue}from"./Actions/Action";import{EventDispatcher}from"./EventDispatcher";import{Actor,isActor}from"./Actor";import{Vector}from"./Algebra";import{ExitTriggerEvent,EnterTriggerEvent}from"./Events";import*as Util from"./Util/Util";import{CollisionType}from"./Collision/CollisionType";var triggerDefaults={pos:Vector.Zero,width:10,height:10,visible:!1,action:function(){},filter:function(){return!0},repeat:-1},Trigger=function(t){function e(e){var r=t.call(this,e.pos.x,e.pos.y,e.width,e.height)||this;return r.action=function(){},r.filter=function(){return!0},r.repeat=-1,e=Util.extend({},triggerDefaults,e),r.filter=e.filter||r.filter,r.repeat=e.repeat||r.repeat,r.action=e.action||r.action,e.target&&(r.target=e.target),r.visible=e.visible,r.body.collider.type=CollisionType.Passive,r.eventDispatcher=new EventDispatcher(r),r.actionQueue=new ActionQueue(r),r.on("collisionstart",function(t){isActor(t.other)&&r.filter(t.other)&&(r.emit("enter",new EnterTriggerEvent(r,t.other)),r._dispatchAction(),0===r.repeat&&r.kill())}),r.on("collisionend",function(t){isActor(t.other)&&r.filter(t.other)&&r.emit("exit",new ExitTriggerEvent(r,t.other))}),r}return __extends(e,t),Object.defineProperty(e.prototype,"target",{get:function(){return this._target},set:function(t){this._target=t,this.filter=function(e){return e===t}},enumerable:!1,configurable:!0}),e.prototype._initialize=function(e){t.prototype._initialize.call(this,e)},e.prototype._dispatchAction=function(){this.action.call(this),this.repeat--},e.prototype.debugDraw=function(e){t.prototype.debugDraw.call(this,e),e.save(),e.translate(this.pos.x,this.pos.y);var r=this.body.collider.bounds,o=this.getWorldPos();r.left=r.left-o.x,r.right=r.right-o.x,r.top=r.top-o.y,r.bottom=r.bottom-o.y,e.fillStyle=Color.Violet.toString(),e.strokeStyle=Color.Violet.toString(),e.fillText("Trigger",10,10),r.debugDraw(e),e.restore()},e}(Actor);export{Trigger};