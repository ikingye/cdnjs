import{Injectable,ElementRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,NgModule}from"@angular/core";import{FormsModule}from"@angular/forms";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{Subject}from"rxjs";var TerminalService=function(){function e(){this.commandSource=new Subject,this.responseSource=new Subject,this.commandHandler=this.commandSource.asObservable(),this.responseHandler=this.responseSource.asObservable()}return e.prototype.sendCommand=function(e){e&&this.commandSource.next(e)},e.prototype.sendResponse=function(e){e&&this.responseSource.next(e)},e.decorators=[{type:Injectable}],e}(),Terminal=function(){function e(e,n){var t=this;this.el=e,this.terminalService=n,this.commands=[],this.subscription=n.responseHandler.subscribe(function(e){t.commands[t.commands.length-1].response=e,t.commandProcessed=!0})}return e.prototype.ngAfterViewInit=function(){this.container=DomHandler.find(this.el.nativeElement,".p-terminal")[0]},e.prototype.ngAfterViewChecked=function(){this.commandProcessed&&(this.container.scrollTop=this.container.scrollHeight,this.commandProcessed=!1)},Object.defineProperty(e.prototype,"response",{set:function(e){e&&(this.commands[this.commands.length-1].response=e,this.commandProcessed=!0)},enumerable:!1,configurable:!0}),e.prototype.handleCommand=function(e){13==e.keyCode&&(this.commands.push({text:this.command}),this.terminalService.sendCommand(this.command),this.command="")},e.prototype.focus=function(e){e.focus()},e.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},e.ctorParameters=function(){return[{type:ElementRef},{type:TerminalService}]},e.decorators=[{type:Component,args:[{selector:"p-terminal",template:'\n        <div [ngClass]="\'p-terminal p-component\'" [ngStyle]="style" [class]="styleClass" (click)="focus(in)">\n            <div *ngIf="welcomeMessage">{{welcomeMessage}}</div>\n            <div class="p-terminal-content">\n                <div *ngFor="let command of commands">\n                    <span class="p-terminal-prompt">{{prompt}}</span>\n                    <span class="p-terminal-command">{{command.text}}</span>\n                    <div class="p-terminal-response">{{command.response}}</div>\n                </div>\n            </div>\n            <div class="p-terminal-prompt-container">\n                <span class="p-terminal-content-prompt">{{prompt}}</span>\n                <input #in type="text" [(ngModel)]="command" class="p-terminal-input" autocomplete="off" (keydown)="handleCommand($event)" autofocus>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-terminal{height:18rem;overflow:auto}.p-terminal-prompt-container{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-terminal-input{-ms-flex:1 1 auto;flex:1 1 auto;border:0;background-color:transparent;color:inherit;padding:0;outline:0}.p-terminal-input::-ms-clear{display:none}"]}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:TerminalService}]},e.propDecorators={welcomeMessage:[{type:Input}],prompt:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],response:[{type:Input}]},e}(),TerminalModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule,FormsModule],exports:[Terminal],declarations:[Terminal]}]}],e}();export{Terminal,TerminalModule,TerminalService};