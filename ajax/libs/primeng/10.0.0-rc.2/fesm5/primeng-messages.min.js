import{EventEmitter,Optional,ElementRef,ChangeDetectorRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,ContentChildren,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{trigger,transition,style,animate}from"@angular/animations";import{MessageService,PrimeTemplate}from"primeng/api";import{RippleModule}from"primeng/ripple";var __read=this&&this.__read||function(e,t){var s="function"==typeof Symbol&&e[Symbol.iterator];if(!s)return e;var n,a,i=s.call(e),r=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)r.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(s=i.return)&&s.call(i)}finally{if(a)throw a.error}}return r},__spread=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(__read(arguments[t]));return e},Messages=function(){function e(e,t,s){this.messageService=e,this.el=t,this.cd=s,this.closable=!0,this.enableService=!0,this.escape=!0,this.showTransitionOptions="300ms ease-out",this.hideTransitionOptions="200ms cubic-bezier(0.86, 0, 0.07, 1)",this.valueChange=new EventEmitter}return e.prototype.ngAfterContentInit=function(){var e=this;this.templates.forEach(function(t){switch(t.getType()){case"content":default:e.contentTemplate=t.template}}),this.messageService&&this.enableService&&!this.contentTemplate&&(this.messageSubscription=this.messageService.messageObserver.subscribe(function(t){if(t){if(t instanceof Array){var s=t.filter(function(t){return e.key===t.key});e.value=e.value?__spread(e.value,s):__spread(s)}else e.key===t.key&&(e.value=e.value?__spread(e.value,[t]):[t]);e.cd.markForCheck()}}),this.clearSubscription=this.messageService.clearObserver.subscribe(function(t){t?e.key===t&&(e.value=null):e.value=null,e.cd.markForCheck()}))},e.prototype.hasMessages=function(){var e=this.el.nativeElement.parentElement;return!(!e||!e.offsetParent)&&(null!=this.contentTemplate||this.value&&this.value.length>0)},e.prototype.clear=function(){this.value=[],this.valueChange.emit(this.value)},e.prototype.removeMessage=function(e){this.value=this.value.filter(function(t,s){return s!==e})},Object.defineProperty(e.prototype,"icon",{get:function(){var e=this.severity||(this.hasMessages()?this.value[0].severity:null);if(this.hasMessages())switch(e){case"success":return"pi-check";case"info":return"pi-info-circle";case"error":return"pi-times";case"warn":return"pi-exclamation-triangle";default:return"pi-info-circle"}return null},enumerable:!1,configurable:!0}),e.prototype.ngOnDestroy=function(){this.messageSubscription&&this.messageSubscription.unsubscribe(),this.clearSubscription&&this.clearSubscription.unsubscribe()},e.ctorParameters=function(){return[{type:MessageService,decorators:[{type:Optional}]},{type:ElementRef},{type:ChangeDetectorRef}]},e.decorators=[{type:Component,args:[{selector:"p-messages",template:'\n        <div class="p-messages p-component" role="alert" [ngStyle]="style" [class]="styleClass">\n            <ng-container *ngIf="!contentTemplate; else staticMessage">\n                <div *ngFor="let msg of value; let i=index" [ngClass]="\'p-message p-message-\' + msg.severity" role="alert" \n                    [@messageAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}">\n                    <div class="p-message-wrapper">\n                        <span class="p-message-icon pi" [ngClass]="{\'pi-info-circle\': msg.severity === \'info\', \n                            \'pi-check\': msg.severity === \'success\',\n                            \'pi-exclamation-triangle\': msg.severity === \'warn\',\n                            \'pi-times-circle\': msg.severity === \'error\'}"></span>\n                        <ng-container *ngIf="!escape; else escapeOut">\n                            <span *ngIf="msg.summary" class="p-message-summary" [innerHTML]="msg.summary"></span>\n                            <span *ngIf="msg.detail" class="p-message-detail" [innerHTML]="msg.detail"></span>\n                        </ng-container>\n                        <ng-template #escapeOut>\n                            <span *ngIf="msg.summary" class="p-message-summary">{{msg.summary}}</span>\n                            <span *ngIf="msg.detail" class="p-message-detail">{{msg.detail}}</span>\n                        </ng-template>\n                        <button class="p-message-close p-link" (click)="removeMessage(i)" *ngIf="closable" type="button" pRipple>\n                            <i class="p-message-close-icon pi pi-times"></i>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #staticMessage>\n                <div [ngClass]="\'p-message p-message-\' + severity" role="alert">\n                    <div class="p-message-wrapper">\n                        <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n                    </div>\n                </div>\n            </ng-template>\n            </div>\n    ',animations:[trigger("messageAnimation",[transition(":enter",[style({opacity:0,transform:"translateY(-25%)"}),animate("{{showTransitionParams}}")]),transition(":leave",[animate("{{hideTransitionParams}}",style({height:0,margin:0,overflow:"hidden",opacity:0}))])])],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-message-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-message-close{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}"]}]}],e.ctorParameters=function(){return[{type:MessageService,decorators:[{type:Optional}]},{type:ElementRef},{type:ChangeDetectorRef}]},e.propDecorators={value:[{type:Input}],closable:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],enableService:[{type:Input}],key:[{type:Input}],escape:[{type:Input}],severity:[{type:Input}],showTransitionOptions:[{type:Input}],hideTransitionOptions:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],valueChange:[{type:Output}]},e}(),MessagesModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule,RippleModule],exports:[Messages],declarations:[Messages]}]}],e}();export{Messages,MessagesModule};