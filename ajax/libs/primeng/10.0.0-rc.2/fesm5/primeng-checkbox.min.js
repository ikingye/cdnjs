import{forwardRef,EventEmitter,ChangeDetectorRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,ViewChild,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __read=this&&this.__read||function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,c=n.call(e),l=[];try{for(;(void 0===t||t-- >0)&&!(o=c.next()).done;)l.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(n=c.return)&&n.call(c)}finally{if(i)throw i.error}}return l},__spread=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(__read(arguments[t]));return e},CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Checkbox}),multi:!0},Checkbox=function(){function e(e){this.cd=e,this.checkboxIcon="pi pi-check",this.onChange=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){},this.focused=!1,this.checked=!1}return e.prototype.onClick=function(e,t,n){e.preventDefault(),this.disabled||this.readonly||(this.checked=!this.checked,this.updateModel(e),n&&t.focus())},e.prototype.updateModel=function(e){this.binary?this.onModelChange(this.checked):(this.checked?this.addValue():this.removeValue(),this.onModelChange(this.model),this.formControl&&this.formControl.setValue(this.model)),this.onChange.emit({checked:this.checked,originalEvent:e})},e.prototype.handleChange=function(e){this.readonly||(this.checked=e.target.checked,this.updateModel(e))},e.prototype.isChecked=function(){return this.binary?this.model:this.model&&this.model.indexOf(this.value)>-1},e.prototype.removeValue=function(){var e=this;this.model=this.model.filter(function(t){return t!==e.value})},e.prototype.addValue=function(){this.model?this.model=__spread(this.model,[this.value]):this.model=[this.value]},e.prototype.onFocus=function(){this.focused=!0},e.prototype.onBlur=function(){this.focused=!1,this.onModelTouched()},e.prototype.focus=function(){this.inputViewChild.nativeElement.focus()},e.prototype.writeValue=function(e){this.model=e,this.checked=this.isChecked(),this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},e.decorators=[{type:Component,args:[{selector:"p-checkbox",template:'\n        <div [ngStyle]="style" [ngClass]="{\'p-checkbox p-component\': true, \'p-checkbox-checked\': checked, \'p-checkbox-disabled\': disabled, \'p-checkbox-focused\': focused}" [class]="styleClass">\n            <div class="p-hidden-accessible">\n                <input #cb type="checkbox" [attr.id]="inputId" [attr.name]="name" [readonly]="readonly" [value]="value" [checked]="checked" (focus)="onFocus()" (blur)="onBlur()"\n                (change)="handleChange($event)" [disabled]="disabled" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy" [attr.required]="required">\n            </div>\n            <div class="p-checkbox-box" (click)="onClick($event,cb,true)"\n                        [ngClass]="{\'p-highlight\': checked, \'p-disabled\': disabled, \'p-focus\': focused}" role="checkbox" [attr.aria-checked]="checked">\n                <span class="p-checkbox-icon" [ngClass]="checked ? checkboxIcon : null"></span>\n            </div>\n        </div>\n        <label (click)="onClick($event,cb,true)" [class]="labelStyleClass"\n                [ngClass]="{\'p-checkbox-label\': true, \'p-checkbox-label-active\':checked, \'p-disabled\':disabled, \'p-checkbox-label-focus\':focused}"\n                *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[CHECKBOX_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-checkbox{display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:bottom}.p-checkbox-box{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}p-checkbox{display:-ms-inline-flexbox;display:inline-flex;vertical-align:bottom;-ms-flex-align:center;align-items:center}.p-checkbox-label{line-height:1}"]}]}],e.ctorParameters=function(){return[{type:ChangeDetectorRef}]},e.propDecorators={value:[{type:Input}],name:[{type:Input}],disabled:[{type:Input}],binary:[{type:Input}],label:[{type:Input}],ariaLabelledBy:[{type:Input}],tabindex:[{type:Input}],inputId:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],labelStyleClass:[{type:Input}],formControl:[{type:Input}],checkboxIcon:[{type:Input}],readonly:[{type:Input}],required:[{type:Input}],inputViewChild:[{type:ViewChild,args:["cb"]}],onChange:[{type:Output}]},e}(),CheckboxModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Checkbox],declarations:[Checkbox]}]}],e}();export{CHECKBOX_VALUE_ACCESSOR,Checkbox,CheckboxModule};