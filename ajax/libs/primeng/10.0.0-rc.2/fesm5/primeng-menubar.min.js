import{Renderer2,ChangeDetectorRef,Component,ViewEncapsulation,Input,ElementRef,ChangeDetectionStrategy,ContentChildren,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{PrimeTemplate}from"primeng/api";import{RouterModule}from"@angular/router";import{RippleModule}from"primeng/ripple";var MenubarSub=function(){function e(e,t){this.renderer=e,this.cd=t,this.autoZIndex=!0,this.baseZIndex=0,this.menuHoverActive=!1}return Object.defineProperty(e.prototype,"parentActive",{get:function(){return this._parentActive},set:function(e){this.root||(this._parentActive=e,e||(this.activeItem=null))},enumerable:!1,configurable:!0}),e.prototype.onItemMenuClick=function(e,t,n){if(this.menuClick=!0,!this.autoDisplay){if(n.disabled)return;this.activeItem=this.activeMenu&&this.activeMenu.isEqualNode(t)?null:t;var i=t.children[0].nextElementSibling;if(i){var a=i.children[0];this.autoZIndex&&(a.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),this.root?(a.style.top=DomHandler.getOuterHeight(t.children[0])+"px",a.style.left="0px"):(a.style.top="0px",a.style.left=DomHandler.getOuterWidth(t.children[0])+"px")}this.menuHoverActive=!this.activeMenu||!this.activeMenu.isEqualNode(t),this.activeMenu=this.activeMenu&&this.activeMenu.isEqualNode(t)?null:t,this.bindEventListener()}},e.prototype.bindEventListener=function(){var e=this;this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",function(t){e.menuClick||(e.activeItem=null,e.menuHoverActive=!1,e.activeMenu=!1,e.cd.markForCheck()),e.menuClick=!1}))},e.prototype.onItemMouseEnter=function(e,t,n){if(this.autoDisplay||!this.autoDisplay&&this.root&&this.menuHoverActive){if(n.disabled)return;if(this.activeItem&&!this.activeItem.isEqualNode(t)||!this.activeItem){this.activeItem=t;var i=t.children[0].nextElementSibling;if(i){var a=i.children[0];a.style.zIndex=String(++DomHandler.zindex),this.root?(a.style.top=DomHandler.getOuterHeight(t.children[0])+"px",a.style.left="0px"):(a.style.top="0px",a.style.left=DomHandler.getOuterWidth(t.children[0])+"px")}this.activeMenu=t}}},e.prototype.itemClick=function(e,t){t.disabled?e.preventDefault():(t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),this.activeItem=null)},e.prototype.listClick=function(e){this.autoDisplay&&(this.activeItem=null)},e.prototype.ngOnDestroy=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},e.ctorParameters=function(){return[{type:Renderer2},{type:ChangeDetectorRef}]},e.decorators=[{type:Component,args:[{selector:"p-menubarSub",template:'\n        <ul [ngClass]="{\'p-submenu-list\': !root, \'p-menubar-root-list\': root}"\n            (click)="listClick($event)">\n            <ng-template ngFor let-child [ngForOf]="(root ? item : item.items)">\n                <li *ngIf="child.separator" class="p-menu-separator" [ngClass]="{\'p-hidden\': child.visible === false}">\n                <li *ngIf="!child.separator" #listItem [ngClass]="{\'p-menuitem\':true, \'p-menuitem-active\':listItem==activeItem, \'p-hidden\': child.visible === false}"\n                        (mouseenter)="onItemMouseEnter($event,listItem,child)" (click)="onItemMenuClick($event, listItem, child)">\n                    <a *ngIf="!child.routerLink" [attr.href]="child.url" [attr.data-automationid]="child.automationId" [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" (click)="itemClick($event, child)"\n                         [ngClass]="{\'p-menuitem-link\':true,\'p-disabled\':child.disabled}" [ngStyle]="child.style" [class]="child.styleClass" \n                         [attr.tabindex]="child.disabled ? null : \'0\'" [attr.aria-haspopup]="item.items != null" [attr.aria-expanded]="item === activeItem" pRipple>\n                        <span class="p-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="p-menuitem-text">{{child.label}}</span>\n                        <span class="p-submenu-icon pi" *ngIf="child.items" [ngClass]="{\'pi-angle-down\':root,\'pi-angle-right\':!root}"></span>\n                    </a>\n                    <a *ngIf="child.routerLink" [routerLink]="child.routerLink" [attr.data-automationid]="child.automationId" [queryParams]="child.queryParams" [routerLinkActive]="\'p-menuitem-link-active\'" [routerLinkActiveOptions]="child.routerLinkActiveOptions||{exact:false}"\n                        [attr.target]="child.target" [attr.title]="child.title" [attr.id]="child.id" [attr.tabindex]="child.disabled ? null : \'0\'" role="menuitem"\n                        (click)="itemClick($event, child)" [ngClass]="{\'p-menuitem-link\':true,\'p-disabled\':child.disabled}" [ngStyle]="child.style" [class]="child.styleClass"\n                        [fragment]="child.fragment" [queryParamsHandling]="child.queryParamsHandling" [preserveFragment]="child.preserveFragment" [skipLocationChange]="child.skipLocationChange" [replaceUrl]="child.replaceUrl" [state]="child.state" pRipple>\n                        <span class="p-menuitem-icon" *ngIf="child.icon" [ngClass]="child.icon"></span>\n                        <span class="p-menuitem-text">{{child.label}}</span>\n                        <span class="p-submenu-icon pi" *ngIf="child.items" [ngClass]="{\'pi-angle-down\':root,\'pi-angle-right\':!root}"></span>\n                    </a>\n                    <p-menubarSub [parentActive]="listItem==activeItem" [item]="child" *ngIf="child.items" [autoDisplay]="true"></p-menubarSub>\n                </li>\n            </ng-template>\n        </ul>\n    ',encapsulation:ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:Renderer2},{type:ChangeDetectorRef}]},e.propDecorators={item:[{type:Input}],root:[{type:Input}],autoDisplay:[{type:Input}],autoZIndex:[{type:Input}],baseZIndex:[{type:Input}],parentActive:[{type:Input}]},e}(),Menubar=function(){function e(e,t){this.el=e,this.renderer=t,this.autoZIndex=!0,this.baseZIndex=0}return Object.defineProperty(e.prototype,"autoDisplay",{get:function(){return this._autoDisplay},set:function(e){console.log("AutoDisplay property is deprecated and functionality is not available.")},enumerable:!1,configurable:!0}),e.prototype.ngAfterContentInit=function(){var e=this;this.templates.forEach(function(t){switch(t.getType()){case"start":e.startTemplate=t.template;break;case"end":e.endTemplate=t.template}})},e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2}]},e.decorators=[{type:Component,args:[{selector:"p-menubar",template:'\n        <div [ngClass]="{\'p-menubar p-component\':true}" [class]="styleClass" [ngStyle]="style">\n            <div class="p-menubar-start" *ngIf="startTemplate">\n                <ng-container *ngTemplateOutlet="startTemplate"></ng-container>\n            </div>\n            <p-menubarSub [item]="model" root="root" [baseZIndex]="baseZIndex" [autoZIndex]="autoZIndex"></p-menubarSub>\n            <div class="p-menubar-end" *ngIf="endTemplate; else legacy">\n                <ng-container *ngTemplateOutlet="endTemplate"></ng-container>\n            </div>\n            <ng-template #legacy>\n                <div class="p-menubar-end">\n                    <ng-content></ng-content>\n                </div>\n            </ng-template>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-menubar{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-menubar ul{margin:0;padding:0;list-style:none}.p-menubar .p-menuitem-link{cursor:pointer;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-menubar .p-menuitem-text{line-height:1}.p-menubar .p-menuitem{position:relative}.p-menubar-root-list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-menubar-root-list>li ul{display:none;z-index:1}.p-menubar-root-list>.p-menuitem-active>p-menubarsub>.p-submenu-list{display:block}.p-menubar .p-submenu-list{display:none;position:absolute;z-index:1}.p-menubar .p-submenu-list>.p-menuitem-active>p-menubarsub>.p-submenu-list{display:block;left:100%;top:0}.p-menubar .p-submenu-list .p-menuitem-link .p-submenu-icon{margin-left:auto}.p-menubar .p-menubar-custom,.p-menubar .p-menubar-end{margin-left:auto;-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center}.p-menubar-button{display:none;cursor:pointer;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}"]}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2}]},e.propDecorators={model:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],autoZIndex:[{type:Input}],baseZIndex:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],autoDisplay:[{type:Input}]},e}(),MenubarModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule,RouterModule,RippleModule],exports:[Menubar,RouterModule],declarations:[Menubar,MenubarSub]}]}],e}();export{Menubar,MenubarModule,MenubarSub};