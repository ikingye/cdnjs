import{forwardRef,EventEmitter,ChangeDetectorRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,Output,ContentChild,TemplateRef,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{ObjectUtils}from"primeng/utils";import{RippleModule}from"primeng/ripple";import{NG_VALUE_ACCESSOR}from"@angular/forms";var __read=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,i,l=n.call(t),r=[];try{for(;(void 0===e||e-- >0)&&!(o=l.next()).done;)r.push(o.value)}catch(t){i={error:t}}finally{try{o&&!o.done&&(n=l.return)&&n.call(l)}finally{if(i)throw i.error}}return r},__spread=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(__read(arguments[e]));return t},SELECTBUTTON_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return SelectButton}),multi:!0},SelectButton=function(){function t(t){this.cd=t,this.tabindex=0,this.onOptionClick=new EventEmitter,this.onChange=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return Object.defineProperty(t.prototype,"options",{get:function(){return this._options},set:function(t){},enumerable:!1,configurable:!0}),t.prototype.ngOnChanges=function(t){t.options&&(this._options=this.optionLabel?ObjectUtils.generateSelectItems(t.options.currentValue,this.optionLabel):t.options.currentValue)},t.prototype.writeValue=function(t){this.value=t,this.cd.markForCheck()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.onItemClick=function(t,e,n){if(!this.disabled&&!e.disabled){if(this.multiple){var o=this.findItemIndex(e);this.value=-1!=o?this.value.filter(function(t,e){return e!=o}):__spread(this.value||[],[e.value])}else this.value=e.value;this.onOptionClick.emit({originalEvent:t,option:e,index:n}),this.onModelChange(this.value),this.onChange.emit({originalEvent:t,value:this.value})}},t.prototype.onBlur=function(t){this.onModelTouched()},t.prototype.isSelected=function(t){return this.multiple?-1!=this.findItemIndex(t):ObjectUtils.equals(t.value,this.value,this.dataKey)},t.prototype.findItemIndex=function(t){var e=-1;if(this.value)for(var n=0;n<this.value.length;n++)if(this.value[n]==t.value){e=n;break}return e},t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.decorators=[{type:Component,args:[{selector:"p-selectButton",template:'\n        <div [ngClass]="\'p-selectbutton p-buttonset p-component\'" [ngStyle]="style" [class]="styleClass"  role="group">\n            <div *ngFor="let option of options; let i = index" #btn class="p-button p-component" [class]="option.styleClass" role="button" [attr.aria-pressed]="isSelected(option)"\n                [ngClass]="{\'p-highlight\':isSelected(option), \'p-disabled\': disabled || option.disabled, \n                \'p-button-icon-only\': (option.icon && !option.label)}" (click)="onItemClick($event,option,i)" (keydown.enter)="onItemClick($event,option,i)"\n                [attr.title]="option.title" [attr.aria-label]="option.label" (blur)="onBlur($event)" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy" pRipple>\n                <ng-container *ngIf="!itemTemplate else customcontent">\n                    <span [ngClass]="\'p-button-icon p-button-icon-left\'" [class]="option.icon" *ngIf="option.icon"></span>\n                    <span class="p-button-label">{{option.label}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: option, index: i}"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    ',providers:[SELECTBUTTON_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".ui-selectbutton{display:inline-block}.ui-selectbutton.ui-state-error{padding:0}.ui-selectbutton .ui-button.ui-state-focus{outline:0}",".p-button{margin:0;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-align:center;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right{-ms-flex-order:1;order:1}.p-button:disabled{cursor:default}.p-button-icon-only{-ms-flex-pack:center;justify-content:center}.p-button-icon-only .p-button-label{visibility:hidden;width:0;-ms-flex:0 0 auto;flex:0 0 auto}.p-button-vertical{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom{-ms-flex-order:2;order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}"]}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.propDecorators={tabindex:[{type:Input}],multiple:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],ariaLabelledBy:[{type:Input}],disabled:[{type:Input}],dataKey:[{type:Input}],optionLabel:[{type:Input}],onOptionClick:[{type:Output}],onChange:[{type:Output}],itemTemplate:[{type:ContentChild,args:[TemplateRef]}],options:[{type:Input}]},t}(),SelectButtonModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule,RippleModule],exports:[SelectButton],declarations:[SelectButton]}]}],t}();export{SELECTBUTTON_VALUE_ACCESSOR,SelectButton,SelectButtonModule};