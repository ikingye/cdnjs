import{Component,EventEmitter,ChangeDetectorRef,ChangeDetectionStrategy,ViewEncapsulation,Input,ContentChildren,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{ButtonModule}from"primeng/button";import{PrimeTemplate}from"primeng/api";var InplaceDisplay=function(){function t(){}return t.decorators=[{type:Component,args:[{selector:"p-inplaceDisplay",template:"<ng-content></ng-content>"}]}],t}(),InplaceContent=function(){function t(){}return t.decorators=[{type:Component,args:[{selector:"p-inplaceContent",template:"<ng-content></ng-content>"}]}],t}(),Inplace=function(){function t(t){this.cd=t,this.closeIcon="pi pi-times",this.onActivate=new EventEmitter,this.onDeactivate=new EventEmitter}return t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach(function(e){switch(e.getType()){case"display":t.displayTemplate=e.template;break;case"content":t.contentTemplate=e.template}})},t.prototype.onActivateClick=function(t){this.preventClick||this.activate(t)},t.prototype.onDeactivateClick=function(t){this.preventClick||this.deactivate(t)},t.prototype.activate=function(t){this.disabled||(this.active=!0,this.onActivate.emit(t),this.cd.markForCheck())},t.prototype.deactivate=function(t){this.disabled||(this.active=!1,this.hover=!1,this.onDeactivate.emit(t),this.cd.markForCheck())},t.prototype.onKeydown=function(t){13===t.which&&(this.activate(t),t.preventDefault())},t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.decorators=[{type:Component,args:[{selector:"p-inplace",template:'\n        <div [ngClass]="{\'p-inplace p-component\': true, \'p-inplace-closable\': closable}" [ngStyle]="style" [class]="styleClass">\n            <div class="p-inplace-display" (click)="onActivateClick($event)" tabindex="0" (keydown)="onKeydown($event)"   \n                [ngClass]="{\'p-disabled\':disabled}" *ngIf="!active">\n                <ng-content select="[pInplaceDisplay]"></ng-content>\n                <ng-container *ngTemplateOutlet="displayTemplate"></ng-container>\n            </div>\n            <div class="p-inplace-content" *ngIf="active">\n                <ng-content select="[pInplaceContent]"></ng-content>\n                <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n                <button type="button" [icon]="closeIcon" pButton (click)="onDeactivateClick($event)" *ngIf="closable"></button>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-inplace .p-inplace-display{display:inline;cursor:pointer}.p-inplace .p-inplace-content{display:inline}.p-fluid .p-inplace.p-inplace-closable .p-inplace-content{display:-ms-flexbox;display:flex}.p-fluid .p-inplace.p-inplace-closable .p-inplace-content>.p-inputtext{-ms-flex:1 1 auto;flex:1 1 auto;width:1%}"]}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.propDecorators={active:[{type:Input}],closable:[{type:Input}],disabled:[{type:Input}],preventClick:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],closeIcon:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],onActivate:[{type:Output}],onDeactivate:[{type:Output}]},t}(),InplaceModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule,ButtonModule],exports:[Inplace,InplaceDisplay,InplaceContent,ButtonModule],declarations:[Inplace,InplaceDisplay,InplaceContent]}]}],t}();export{Inplace,InplaceContent,InplaceDisplay,InplaceModule};