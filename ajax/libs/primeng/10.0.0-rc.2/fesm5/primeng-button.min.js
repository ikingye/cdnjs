import{ElementRef,Directive,Input,EventEmitter,Component,ChangeDetectionStrategy,ViewEncapsulation,ContentChildren,Output,NgModule}from"@angular/core";import{DomHandler}from"primeng/dom";import{CommonModule}from"@angular/common";import{RippleModule}from"primeng/ripple";import{PrimeTemplate}from"primeng/api";var ButtonDirective=function(){function t(t){this.el=t,this.iconPos="left"}return t.prototype.ngAfterViewInit=function(){if(this._initialStyleClass=this.el.nativeElement.className,DomHandler.addMultipleClasses(this.el.nativeElement,this.getStyleClass()),this.icon){var t=document.createElement("span");t.className="p-button-icon",t.setAttribute("aria-hidden","true");var e=this.label?"p-button-icon-"+this.iconPos:null;e&&DomHandler.addClass(t,e),DomHandler.addMultipleClasses(t,this.icon),this.el.nativeElement.appendChild(t)}var n=document.createElement("span");this.icon&&!this.label&&n.setAttribute("aria-hidden","true"),n.className="p-button-label",n.appendChild(document.createTextNode(this.label||"&nbsp;")),this.el.nativeElement.appendChild(n),this.initialized=!0},t.prototype.getStyleClass=function(){var t="p-button p-component";return this.icon&&!this.label&&(t+=" p-button-icon-only"),t},t.prototype.setStyleClass=function(){var t=this.getStyleClass();this.el.nativeElement.className=t+" "+this._initialStyleClass},Object.defineProperty(t.prototype,"label",{get:function(){return this._label},set:function(t){this._label=t,this.initialized&&(DomHandler.findSingle(this.el.nativeElement,".p-button-label").textContent=this._label||"&nbsp;",this.setStyleClass())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"icon",{get:function(){return this._icon},set:function(t){this._icon=t,this.initialized&&(this.iconPos?DomHandler.findSingle(this.el.nativeElement,".p-button-icon").className="p-button-icon p-button-icon-"+this.iconPos+" "+this._icon:DomHandler.findSingle(this.el.nativeElement,".p-button-icon").className="p-button-icon "+this._icon,this.setStyleClass())},enumerable:!1,configurable:!0}),t.prototype.ngOnDestroy=function(){for(;this.el.nativeElement.hasChildNodes();)this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);this.initialized=!1},t.ctorParameters=function(){return[{type:ElementRef}]},t.decorators=[{type:Directive,args:[{selector:"[pButton]"}]}],t.ctorParameters=function(){return[{type:ElementRef}]},t.propDecorators={iconPos:[{type:Input}],label:[{type:Input}],icon:[{type:Input}]},t}(),Button=function(){function t(){this.type="button",this.iconPos="left",this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter}return t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach(function(e){switch(e.getType()){case"content":default:t.contentTemplate=e.template}})},t.decorators=[{type:Component,args:[{selector:"p-button",template:'\n        <button [attr.type]="type" [class]="styleClass" [ngStyle]="style" [disabled]="disabled"\n            [ngClass]="{\'p-button p-component\':true,\n                        \'p-button-icon-only\': (icon && !label),\n                        \'p-button-vertical\': (iconPos === \'top\' || iconPos === \'bottom\') && label}"\n                        (click)="onClick.emit($event)" (focus)="onFocus.emit($event)" (blur)="onBlur.emit($event)" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet="contentTemplate"></ng-container>\n            <span [ngClass]="{\'p-button-icon\': true,\n                        \'p-button-icon-left\': iconPos === \'left\' && label,\n                        \'p-button-icon-right\': iconPos === \'right\' && label,\n                        \'p-button-icon-top\': iconPos === \'top\' && label,\n                        \'p-button-icon-bottom\': iconPos === \'bottom\' && label}"\n                        [class]="icon" *ngIf="icon" [attr.aria-hidden]="true"></span>\n            <span class="p-button-label" [attr.aria-hidden]="icon && !label">{{label||\'&nbsp;\'}}</span>\n            <span [ngClass]="\'p-badge\'" *ngIf="badge" [class]="badgeClass">{{badge}}</span>\n        </button>\n    ',changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],t.propDecorators={type:[{type:Input}],iconPos:[{type:Input}],icon:[{type:Input}],badge:[{type:Input}],label:[{type:Input}],disabled:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],badgeClass:[{type:Input}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],onClick:[{type:Output}],onFocus:[{type:Output}],onBlur:[{type:Output}]},t}(),ButtonModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule,RippleModule],exports:[ButtonDirective,Button],declarations:[ButtonDirective,Button]}]}],t}();export{Button,ButtonDirective,ButtonModule};