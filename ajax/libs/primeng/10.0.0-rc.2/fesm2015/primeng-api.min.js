import{ɵɵdefineInjectable,Injectable,Component,TemplateRef,Directive,Input,NgModule}from"@angular/core";import{Subject}from"rxjs";import{CommonModule}from"@angular/common";class PrimeNGConfig{constructor(){this.ripple=!1}}PrimeNGConfig.ɵprov=ɵɵdefineInjectable({factory:function(){return new PrimeNGConfig},token:PrimeNGConfig,providedIn:"root"}),PrimeNGConfig.decorators=[{type:Injectable,args:[{providedIn:"root"}]}];class ConfirmationService{constructor(){this.requireConfirmationSource=new Subject,this.acceptConfirmationSource=new Subject,this.requireConfirmation$=this.requireConfirmationSource.asObservable(),this.accept=this.acceptConfirmationSource.asObservable()}confirm(e){return this.requireConfirmationSource.next(e),this}close(){return this.requireConfirmationSource.next(null),this}onAccept(){this.acceptConfirmationSource.next()}}ConfirmationService.decorators=[{type:Injectable}];class MessageService{constructor(){this.messageSource=new Subject,this.clearSource=new Subject,this.messageObserver=this.messageSource.asObservable(),this.clearObserver=this.clearSource.asObservable()}add(e){e&&this.messageSource.next(e)}addAll(e){e&&e.length&&this.messageSource.next(e)}clear(e){this.clearSource.next(e||null)}}MessageService.decorators=[{type:Injectable}];class Header{}Header.decorators=[{type:Component,args:[{selector:"p-header",template:"<ng-content></ng-content>"}]}];class Footer{}Footer.decorators=[{type:Component,args:[{selector:"p-footer",template:"<ng-content></ng-content>"}]}];class PrimeTemplate{constructor(e){this.template=e}getType(){return this.name}}PrimeTemplate.ctorParameters=(()=>[{type:TemplateRef}]),PrimeTemplate.decorators=[{type:Directive,args:[{selector:"[pTemplate]",host:{}}]}],PrimeTemplate.ctorParameters=(()=>[{type:TemplateRef}]),PrimeTemplate.propDecorators={type:[{type:Input}],name:[{type:Input,args:["pTemplate"]}]};class SharedModule{}SharedModule.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Header,Footer,PrimeTemplate],declarations:[Header,Footer,PrimeTemplate]}]}];class TreeDragDropService{constructor(){this.dragStartSource=new Subject,this.dragStopSource=new Subject,this.dragStart$=this.dragStartSource.asObservable(),this.dragStop$=this.dragStopSource.asObservable()}startDrag(e){this.dragStartSource.next(e)}stopDrag(e){this.dragStopSource.next(e)}}TreeDragDropService.decorators=[{type:Injectable}];export{ConfirmationService,Footer,Header,MessageService,PrimeNGConfig,PrimeTemplate,SharedModule,TreeDragDropService};