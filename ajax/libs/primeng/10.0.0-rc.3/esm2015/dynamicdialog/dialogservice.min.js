import{Injectable,ComponentFactoryResolver,ApplicationRef,Injector,Type,EmbeddedViewRef,ComponentRef}from"@angular/core";import{DynamicDialogComponent}from"./dynamicdialog";import{DynamicDialogInjector}from"./dynamicdialog-injector";import{DynamicDialogConfig}from"./dynamicdialog-config";import{DynamicDialogRef}from"./dynamicdialog-ref";export class DialogService{constructor(o,e,t){this.componentFactoryResolver=o,this.appRef=e,this.injector=t}open(o,e){const t=this.appendDialogComponentToBody(e);return this.dialogComponentRef.instance.childComponentType=o,t}appendDialogComponentToBody(o){const e=new WeakMap;e.set(DynamicDialogConfig,o);const t=new DynamicDialogRef;e.set(DynamicDialogRef,t);const n=t.onClose.subscribe(()=>{this.dialogComponentRef.instance.close()}),i=t.onDestroy.subscribe(()=>{this.removeDialogComponentFromBody(),i.unsubscribe(),n.unsubscribe()}),a=this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent).create(new DynamicDialogInjector(this.injector,e));this.appRef.attachView(a.hostView);const r=a.hostView.rootNodes[0];return document.body.appendChild(r),this.dialogComponentRef=a,t}removeDialogComponentFromBody(){this.appRef.detachView(this.dialogComponentRef.hostView),this.dialogComponentRef.destroy()}};DialogService.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ApplicationRef},{type:Injector}]),DialogService.decorators=[{type:Injectable}],DialogService.ctorParameters=(()=>[{type:ComponentFactoryResolver},{type:ApplicationRef},{type:Injector}]);