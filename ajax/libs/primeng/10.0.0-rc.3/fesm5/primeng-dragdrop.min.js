import{EventEmitter,ElementRef,NgZone,Directive,Input,Output,HostListener,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";var Draggable=function(){function e(e,t){this.el=e,this.zone=t,this.onDragStart=new EventEmitter,this.onDragEnd=new EventEmitter,this.onDrag=new EventEmitter}return Object.defineProperty(e.prototype,"pDraggableDisabled",{get:function(){return this._pDraggableDisabled},set:function(e){this._pDraggableDisabled=e,this._pDraggableDisabled?this.unbindMouseListeners():(this.el.nativeElement.draggable=!0,this.bindMouseListeners())},enumerable:!1,configurable:!0}),e.prototype.ngAfterViewInit=function(){this.pDraggableDisabled||(this.el.nativeElement.draggable=!0,this.bindMouseListeners())},e.prototype.bindDragListener=function(){var e=this;this.dragListener||this.zone.runOutsideAngular(function(){e.dragListener=e.drag.bind(e),e.el.nativeElement.addEventListener("drag",e.dragListener)})},e.prototype.unbindDragListener=function(){var e=this;this.dragListener&&this.zone.runOutsideAngular(function(){e.el.nativeElement.removeEventListener("drag",e.dragListener),e.dragListener=null})},e.prototype.bindMouseListeners=function(){var e=this;this.mouseDownListener||this.mouseUpListener||this.zone.runOutsideAngular(function(){e.mouseDownListener=e.mousedown.bind(e),e.mouseUpListener=e.mouseup.bind(e),e.el.nativeElement.addEventListener("mousedown",e.mouseDownListener),e.el.nativeElement.addEventListener("mouseup",e.mouseUpListener)})},e.prototype.unbindMouseListeners=function(){var e=this;this.mouseDownListener&&this.mouseUpListener&&this.zone.runOutsideAngular(function(){e.el.nativeElement.removeEventListener("mousedown",e.mouseDownListener),e.el.nativeElement.removeEventListener("mouseup",e.mouseUpListener),e.mouseDownListener=null,e.mouseUpListener=null})},e.prototype.drag=function(e){this.onDrag.emit(e)},e.prototype.dragStart=function(e){this.allowDrag()&&!this.pDraggableDisabled?(this.dragEffect&&(e.dataTransfer.effectAllowed=this.dragEffect),e.dataTransfer.setData("text",this.scope),this.onDragStart.emit(e),this.bindDragListener()):e.preventDefault()},e.prototype.dragEnd=function(e){this.onDragEnd.emit(e),this.unbindDragListener()},e.prototype.mousedown=function(e){this.handle=e.target},e.prototype.mouseup=function(e){this.handle=null},e.prototype.allowDrag=function(){return!this.dragHandle||!this.handle||DomHandler.matches(this.handle,this.dragHandle)},e.prototype.ngOnDestroy=function(){this.unbindDragListener(),this.unbindMouseListeners()},e.ctorParameters=function(){return[{type:ElementRef},{type:NgZone}]},e.decorators=[{type:Directive,args:[{selector:"[pDraggable]"}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:NgZone}]},e.propDecorators={scope:[{type:Input,args:["pDraggable"]}],dragEffect:[{type:Input}],dragHandle:[{type:Input}],onDragStart:[{type:Output}],onDragEnd:[{type:Output}],onDrag:[{type:Output}],pDraggableDisabled:[{type:Input}],dragStart:[{type:HostListener,args:["dragstart",["$event"]]}],dragEnd:[{type:HostListener,args:["dragend",["$event"]]}]},e}(),Droppable=function(){function e(e,t){this.el=e,this.zone=t,this.onDragEnter=new EventEmitter,this.onDragLeave=new EventEmitter,this.onDrop=new EventEmitter}return e.prototype.ngAfterViewInit=function(){this.pDroppableDisabled||this.bindDragOverListener()},e.prototype.bindDragOverListener=function(){var e=this;this.dragOverListener||this.zone.runOutsideAngular(function(){e.dragOverListener=e.dragOver.bind(e),e.el.nativeElement.addEventListener("dragover",e.dragOverListener)})},e.prototype.unbindDragOverListener=function(){var e=this;this.dragOverListener&&this.zone.runOutsideAngular(function(){e.el.nativeElement.removeEventListener("dragover",e.dragOverListener),e.dragOverListener=null})},e.prototype.dragOver=function(e){e.preventDefault()},e.prototype.drop=function(e){this.allowDrop(e)&&(DomHandler.removeClass(this.el.nativeElement,"p-draggable-enter"),e.preventDefault(),this.onDrop.emit(e))},e.prototype.dragEnter=function(e){e.preventDefault(),this.dropEffect&&(e.dataTransfer.dropEffect=this.dropEffect),DomHandler.addClass(this.el.nativeElement,"p-draggable-enter"),this.onDragEnter.emit(e)},e.prototype.dragLeave=function(e){e.preventDefault(),DomHandler.removeClass(this.el.nativeElement,"p-draggable-enter"),this.onDragLeave.emit(e)},e.prototype.allowDrop=function(e){var t=e.dataTransfer.getData("text");if("string"==typeof this.scope&&t==this.scope)return!0;if(this.scope instanceof Array)for(var r=0;r<this.scope.length;r++)if(t==this.scope[r])return!0;return!1},e.prototype.ngOnDestroy=function(){this.unbindDragOverListener()},e.ctorParameters=function(){return[{type:ElementRef},{type:NgZone}]},e.decorators=[{type:Directive,args:[{selector:"[pDroppable]"}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:NgZone}]},e.propDecorators={scope:[{type:Input,args:["pDroppable"]}],pDroppableDisabled:[{type:Input}],dropEffect:[{type:Input}],onDragEnter:[{type:Output}],onDragLeave:[{type:Output}],onDrop:[{type:Output}],drop:[{type:HostListener,args:["drop",["$event"]]}],dragEnter:[{type:HostListener,args:["dragenter",["$event"]]}],dragLeave:[{type:HostListener,args:["dragleave",["$event"]]}]},e}(),DragDropModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Draggable,Droppable],declarations:[Draggable,Droppable]}]}],e}();export{DragDropModule,Draggable,Droppable};