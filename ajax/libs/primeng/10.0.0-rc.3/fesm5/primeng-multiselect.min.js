import{forwardRef,EventEmitter,Component,ViewEncapsulation,Input,Output,ElementRef,Renderer2,ChangeDetectorRef,ChangeDetectionStrategy,ViewChild,ContentChild,ContentChildren,NgModule}from"@angular/core";import{trigger,transition,style,animate}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{ObjectUtils,FilterUtils}from"primeng/utils";import{Footer,Header,PrimeTemplate,SharedModule}from"primeng/api";import{NG_VALUE_ACCESSOR}from"@angular/forms";import{ScrollingModule}from"@angular/cdk/scrolling";import{TooltipModule}from"primeng/tooltip";import{RippleModule}from"primeng/ripple";var __read=this&&this.__read||function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,l,o=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)s.push(n.value)}catch(e){l={error:e}}finally{try{n&&!n.done&&(i=o.return)&&i.call(o)}finally{if(l)throw l.error}}return s},__spread=this&&this.__spread||function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(__read(arguments[t]));return e},__values=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},MULTISELECT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return MultiSelect}),multi:!0},MultiSelectItem=function(){function e(){this.onClick=new EventEmitter,this.onKeydown=new EventEmitter}return e.prototype.onOptionClick=function(e){this.onClick.emit({originalEvent:e,option:this.option})},e.prototype.onOptionKeydown=function(e){this.onKeydown.emit({originalEvent:e,option:this.option})},e.decorators=[{type:Component,args:[{selector:"p-multiSelectItem",template:'\n        <li class="p-multiselect-item" (click)="onOptionClick($event)" (keydown)="onOptionKeydown($event)" [attr.aria-label]="option.label"\n            [attr.tabindex]="option.disabled ? null : \'0\'" [ngStyle]="{\'height\': itemSize + \'px\'}"\n            [ngClass]="{\'p-highlight\': selected, \'p-disabled\': (option.disabled || (maxSelectionLimitReached && !selected))}">\n            <div class="p-checkbox p-component">\n                <div class="p-checkbox-box" [ngClass]="{\'p-highlight\': selected}">\n                    <span class="p-checkbox-icon" [ngClass]="{\'pi pi-check\': selected}"></span>\n                </div>\n            </div>\n            <span *ngIf="!template">{{option.label}}</span>\n            <ng-container *ngTemplateOutlet="template; context: {$implicit: option}"></ng-container>\n        </li>\n    ',encapsulation:ViewEncapsulation.None}]}],e.propDecorators={option:[{type:Input}],selected:[{type:Input}],disabled:[{type:Input}],visible:[{type:Input}],itemSize:[{type:Input}],template:[{type:Input}],maxSelectionLimitReached:[{type:Input}],onClick:[{type:Output}],onKeydown:[{type:Output}]},e}(),MultiSelect=function(){function e(e,t,i){this.el=e,this.renderer=t,this.cd=i,this.scrollHeight="200px",this.filter=!0,this.displaySelectedLabel=!0,this.maxSelectedLabels=3,this.selectedItemsLabel="{0} items selected",this.showToggleAll=!0,this.emptyFilterMessage="No results found",this.resetFilterOnHide=!1,this.dropdownIcon="pi pi-chevron-down",this.showHeader=!0,this.autoZIndex=!0,this.baseZIndex=0,this.filterBy="label",this.showTransitionOptions=".12s cubic-bezier(0, 0, 0.2, 1)",this.hideTransitionOptions=".1s linear",this.filterMatchMode="contains",this.tooltip="",this.tooltipPosition="right",this.tooltipPositionStyle="absolute",this.autofocusFilter=!0,this.onChange=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter,this.onClick=new EventEmitter,this.onPanelShow=new EventEmitter,this.onPanelHide=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){},this.disabledSelectedOptions=[]}return Object.defineProperty(e.prototype,"defaultLabel",{get:function(){return this._defaultLabel},set:function(e){this._defaultLabel=e,this.updateLabel()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"placeholder",{get:function(){return this._placeholder},set:function(e){this._placeholder=e,this.updateLabel()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(e){var t=this.optionLabel?ObjectUtils.generateSelectItems(e,this.optionLabel):e;this.visibleOptions=t,this._options=t,this.updateLabel(),this.filterValue&&this.filterValue.length&&this.activateFilter()},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.updateLabel()},e.prototype.ngAfterContentInit=function(){var e=this;this.templates.forEach(function(t){switch(t.getType()){case"item":e.itemTemplate=t.template;break;case"selectedItems":e.selectedItemsTemplate=t.template;break;case"header":e.headerTemplate=t.template;break;case"footer":e.footerTemplate=t.template;break;default:e.itemTemplate=t.template}})},e.prototype.ngAfterViewInit=function(){this.overlayVisible&&this.show()},e.prototype.ngAfterViewChecked=function(){this.filtered&&(this.alignOverlay(),this.filtered=!1)},e.prototype.writeValue=function(e){this.value=e,this.updateLabel(),this.updateFilledState(),this.setDisabledSelectedOptions(),this.checkSelectionLimit(),this.cd.markForCheck()},e.prototype.checkSelectionLimit=function(){this.selectionLimit&&this.value&&this.value.length===this.selectionLimit?this.maxSelectionLimitReached=!0:this.maxSelectionLimitReached=!1},e.prototype.updateFilledState=function(){this.filled=this.value&&this.value.length>0},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype.onOptionClick=function(e){var t=e.option;if(!t.disabled){var i=t.value,n=this.findSelectionIndex(i);-1!=n?(this.value=this.value.filter(function(e,t){return t!=n}),this.selectionLimit&&(this.maxSelectionLimitReached=!1)):((!this.selectionLimit||!this.value||this.value.length<this.selectionLimit)&&(this.value=__spread(this.value||[],[i])),this.checkSelectionLimit()),this.onModelChange(this.value),this.onChange.emit({originalEvent:e.originalEvent,value:this.value,itemValue:i}),this.updateLabel(),this.updateFilledState()}},e.prototype.isSelected=function(e){return-1!=this.findSelectionIndex(e)},e.prototype.findSelectionIndex=function(e){var t=-1;if(this.value)for(var i=0;i<this.value.length;i++)if(ObjectUtils.equals(this.value[i],e,this.dataKey)){t=i;break}return t},e.prototype.toggleAll=function(e){if(this.isAllChecked())if(this.disabledSelectedOptions&&this.disabledSelectedOptions.length>0){var t=[];t=__spread(this.disabledSelectedOptions),this.value=t}else this.value=[];else{var i=this.getVisibleOptions();if(i){t=[];this.disabledSelectedOptions&&this.disabledSelectedOptions.length>0&&(t=__spread(this.disabledSelectedOptions));for(var n=0;n<i.length;n++){i[n].disabled||t.push(i[n].value)}this.value=t}}this.onModelChange(this.value),this.onChange.emit({originalEvent:e,value:this.value}),this.updateFilledState(),this.updateLabel()},e.prototype.isAllChecked=function(){if(this.filterValue&&this.filterValue.trim().length)return this.value&&this.visibleOptions&&this.visibleOptions.length&&this.isAllVisibleOptionsChecked();var e=this.getEnabledOptionCount(),t=this.disabledSelectedOptions.length;return this.value&&this.options&&this.value.length>0&&this.value.length==e+t},e.prototype.isAllVisibleOptionsChecked=function(){var e,t;if(this.visibleOptions&&0!==this.visibleOptions.length){try{for(var i=__values(this.visibleOptions),n=i.next();!n.done;n=i.next()){var l=n.value;if(!this.isSelected(l.value))return!1}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}return!0}return!1},e.prototype.getEnabledOptionCount=function(){var e,t;if(this.options){var i=0;try{for(var n=__values(this.options),l=n.next();!l.done;l=n.next()){l.value.disabled||i++}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return i}return 0},e.prototype.setDisabledSelectedOptions=function(){var e,t;if(this.options&&(this.disabledSelectedOptions=[],this.value))try{for(var i=__values(this.options),n=i.next();!n.done;n=i.next()){var l=n.value;l.disabled&&this.isSelected(l.value)&&this.disabledSelectedOptions.push(l.value)}}catch(t){e={error:t}}finally{try{n&&!n.done&&(t=i.return)&&t.call(i)}finally{if(e)throw e.error}}},e.prototype.show=function(){this.overlayVisible||(this.overlayVisible=!0)},e.prototype.onOverlayAnimationStart=function(e){switch(e.toState){case"visible":this.overlay=e.element,this.appendOverlay(),this.autoZIndex&&(this.overlay.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex)),this.alignOverlay(),this.bindDocumentClickListener(),this.bindDocumentResizeListener(),this.filterInputChild&&this.filterInputChild.nativeElement&&(this.preventModelTouched=!0,this.autofocusFilter&&this.filterInputChild.nativeElement.focus()),this.onPanelShow.emit();break;case"void":this.onOverlayHide()}},e.prototype.appendOverlay=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.overlay):DomHandler.appendChild(this.overlay,this.appendTo),this.overlay.style.minWidth||(this.overlay.style.minWidth=DomHandler.getWidth(this.containerViewChild.nativeElement)+"px"))},e.prototype.restoreOverlayAppend=function(){this.overlay&&this.appendTo&&this.el.nativeElement.appendChild(this.overlay)},e.prototype.alignOverlay=function(){this.overlay&&(this.appendTo?DomHandler.absolutePosition(this.overlay,this.containerViewChild.nativeElement):DomHandler.relativePosition(this.overlay,this.containerViewChild.nativeElement))},e.prototype.hide=function(){this.overlayVisible=!1,this.unbindDocumentClickListener(),this.resetFilterOnHide&&(this.filterInputChild.nativeElement.value="",this.onFilter()),this.onPanelHide.emit(),this.cd.markForCheck()},e.prototype.close=function(e){this.hide(),e.preventDefault(),e.stopPropagation()},e.prototype.onMouseclick=function(e,t){this.disabled||this.readonly||e.target.isSameNode(this.accessibleViewChild.nativeElement)||(this.onClick.emit(e),this.isOverlayClick(e)||(this.overlayVisible?this.hide():(t.focus(),this.show())))},e.prototype.isOverlayClick=function(e){return this.overlay&&this.overlay.contains(e.target)},e.prototype.isOutsideClicked=function(e){return!(this.el.nativeElement.isSameNode(e.target)||this.el.nativeElement.contains(e.target)||this.isOverlayClick(e))},e.prototype.onInputFocus=function(e){this.focus=!0,this.onFocus.emit({originalEvent:e})},e.prototype.onInputBlur=function(e){this.focus=!1,this.onBlur.emit({originalEvent:e}),this.preventModelTouched||this.onModelTouched(),this.preventModelTouched=!1},e.prototype.onOptionKeydown=function(e){if(!this.readonly)switch(e.originalEvent.which){case 40:var t=this.findNextItem(e.originalEvent.target.parentElement);t&&t.focus(),e.originalEvent.preventDefault();break;case 38:var i=this.findPrevItem(e.originalEvent.target.parentElement);i&&i.focus(),e.originalEvent.preventDefault();break;case 13:this.onOptionClick(e),e.originalEvent.preventDefault()}},e.prototype.findNextItem=function(e){var t=e.nextElementSibling;return t?DomHandler.hasClass(t.children[0],"p-disabled")||DomHandler.isHidden(t.children[0])?this.findNextItem(t):t.children[0]:null},e.prototype.findPrevItem=function(e){var t=e.previousElementSibling;return t?DomHandler.hasClass(t.children[0],"p-disabled")||DomHandler.isHidden(t.children[0])?this.findPrevItem(t):t.children[0]:null},e.prototype.onKeydown=function(e){switch(e.which){case 40:!this.overlayVisible&&e.altKey&&(this.show(),e.preventDefault());break;case 32:this.overlayVisible||(this.show(),e.preventDefault());break;case 27:this.hide()}},e.prototype.updateLabel=function(){if(this.value&&this.options&&this.value.length&&this.displaySelectedLabel){for(var e="",t=0;t<this.value.length;t++){var i=this.findLabelByValue(this.value[t]);i&&(e.length>0&&(e+=", "),e+=i)}if(this.value.length<=this.maxSelectedLabels)this.valuesAsString=e;else{var n=/{(.*?)}/;n.test(this.selectedItemsLabel)?this.valuesAsString=this.selectedItemsLabel.replace(this.selectedItemsLabel.match(n)[0],this.value.length+""):this.valuesAsString=this.selectedItemsLabel}}else this.valuesAsString=this.placeholder||this.defaultLabel},e.prototype.findLabelByValue=function(e){for(var t=null,i=0;i<this.options.length;i++){var n=this.options[i];if(null==e&&null==n.value||ObjectUtils.equals(e,n.value,this.dataKey)){t=n.label;break}}return t},e.prototype.onFilter=function(){var e=this.filterInputChild.nativeElement.value;e&&e.length?(this.filterValue=e,this.activateFilter()):(this.filterValue=null,this.visibleOptions=this.options,this.filtered=!1)},e.prototype.activateFilter=function(){if(this.options&&this.options.length){var e=this.filterBy.split(",");this.visibleOptions=FilterUtils.filter(this.options,e,this.filterValue,this.filterMatchMode,this.filterLocale),this.filtered=!0}},e.prototype.isItemVisible=function(e){if(!this.filterValue||!this.filterValue.trim().length)return!0;for(var t=0;t<this.visibleOptions.length;t++)if(this.visibleOptions[t].value==e.value)return!0},e.prototype.getVisibleOptions=function(){return this.visibleOptions||this.options},e.prototype.onHeaderCheckboxFocus=function(){this.headerCheckboxFocus=!0},e.prototype.onHeaderCheckboxBlur=function(){this.headerCheckboxFocus=!1},e.prototype.bindDocumentClickListener=function(){var e=this;this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",function(t){e.isOutsideClicked(t)&&e.hide()}))},e.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},e.prototype.bindDocumentResizeListener=function(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)},e.prototype.unbindDocumentResizeListener=function(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)},e.prototype.onWindowResize=function(){DomHandler.isAndroid()||this.hide()},e.prototype.onOverlayHide=function(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.overlay=null,this.onModelTouched()},e.prototype.ngOnDestroy=function(){this.restoreOverlayAppend(),this.onOverlayHide()},e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ChangeDetectorRef}]},e.decorators=[{type:Component,args:[{selector:"p-multiSelect",template:'\n        <div #container [ngClass]="{\'p-multiselect p-component\':true,\'p-multiselect-open\':overlayVisible,\'p-focus\':focus,\'p-disabled\': disabled}" [ngStyle]="style" [class]="styleClass"\n            (click)="onMouseclick($event,in)">\n            <div class="p-hidden-accessible">\n                <input #in type="text" readonly="readonly" [attr.id]="inputId" [attr.name]="name" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)"\n                       [disabled]="disabled" [attr.tabindex]="tabindex" (keydown)="onKeydown($event)" aria-haspopup="listbox" [attr.aria-expanded]="overlayVisible"\n                       [attr.aria-labelledby]="ariaLabelledBy" role="listbox">\n            </div>\n            <div class="p-multiselect-label-container" [pTooltip]="tooltip" [tooltipPosition]="tooltipPosition" [positionStyle]="tooltipPositionStyle" [tooltipStyleClass]="tooltipStyleClass">\n                <div class="p-multiselect-label" [ngClass]="{\'p-placeholder\': valuesAsString === (defaultLabel || placeholder), \'p-multiselect-label-empty\': ((valuesAsString == null || valuesAsString.length === 0) && (placeholder == null || placeholder.length === 0))}">\n                    <ng-container *ngIf="!selectedItemsTemplate">{{valuesAsString || \'empty\'}}</ng-container>\n                    <ng-container *ngTemplateOutlet="selectedItemsTemplate; context: {$implicit: value}"></ng-container>\n                </div>\n            </div>\n            <div [ngClass]="{\'p-multiselect-trigger\':true}">\n                <span class="p-multiselect-trigger-icon" [ngClass]="dropdownIcon"></span>\n            </div>\n            <div *ngIf="overlayVisible" [ngClass]="[\'p-multiselect-panel p-component\']" [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)"\n                [ngStyle]="panelStyle" [class]="panelStyleClass" (keydown)="onKeydown($event)">\n                <div class="p-multiselect-header" *ngIf="showHeader">\n                    <ng-content select="p-header"></ng-content>\n                    <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n                    <div class="p-checkbox p-component" *ngIf="showToggleAll && !selectionLimit">\n                        <div class="p-hidden-accessible">\n                            <input type="checkbox" readonly="readonly" [checked]="isAllChecked()" (focus)="onHeaderCheckboxFocus()" (blur)="onHeaderCheckboxBlur()" (keydown.space)="toggleAll($event)">\n                        </div>\n                        <div class="p-checkbox-box" role="checkbox" [attr.aria-checked]="isAllChecked()" [ngClass]="{\'p-highlight\':isAllChecked(), \'p-focus\': headerCheckboxFocus}" (click)="toggleAll($event)">\n                            <span class="p-checkbox-icon" [ngClass]="{\'pi pi-check\':isAllChecked()}"></span>\n                        </div>\n                    </div>\n                    <div class="p-multiselect-filter-container" *ngIf="filter">\n                        <input #filterInput type="text" role="textbox" [value]="filterValue||\'\'" (input)="onFilter()" class="p-multiselect-filter p-inputtext p-component" [attr.placeholder]="filterPlaceHolder" [attr.aria-label]="ariaFilterLabel">\n                        <span class="p-multiselect-filter-icon pi pi-search"></span>\n                    </div>\n                    <button class="p-multiselect-close p-link" type="button" (click)="close($event)" pRipple>\n                        <span class="p-multiselect-close-icon pi pi-times"></span>\n                    </button>\n                </div>\n                <div class="p-multiselect-items-wrapper" [style.max-height]="virtualScroll ? \'auto\' : (scrollHeight||\'auto\')">\n                    <ul class="p-multiselect-items p-component" role="listbox" aria-multiselectable="true">\n                        <ng-container *ngIf="!virtualScroll; else virtualScrollList">\n                            <ng-template ngFor let-option let-i="index" [ngForOf]="visibleOptions">\n                                <p-multiSelectItem [option]="option" [selected]="isSelected(option.value)" (onClick)="onOptionClick($event)" (onKeydown)="onOptionKeydown($event)"\n                                        [maxSelectionLimitReached]="maxSelectionLimitReached" [visible]="isItemVisible(option)" [template]="itemTemplate"></p-multiSelectItem>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport #viewport [ngStyle]="{\'height\': scrollHeight}" [itemSize]="itemSize" *ngIf="virtualScroll && visibleOptions && visibleOptions.length">\n                                <ng-container *cdkVirtualFor="let option of visibleOptions; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd">\n                                    <p-multiSelectItem [option]="option" [selected]="isSelected(option.value)" (onClick)="onOptionClick($event)" (onKeydown)="onOptionKeydown($event)"\n                                        [maxSelectionLimitReached]="maxSelectionLimitReached" [visible]="isItemVisible(option)" [template]="itemTemplate" [itemSize]="itemSize"></p-multiSelectItem>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf="filter && visibleOptions && visibleOptions.length === 0" class="p-multiselect-empty-message">{{emptyFilterMessage}}</li>\n                    </ul>\n                </div>\n                <div class="p-multiselect-footer" *ngIf="footerFacet || footerTemplate">\n                    <ng-content select="p-footer"></ng-content>\n                    <ng-container *ngTemplateOutlet="footerTemplate"></ng-container>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("overlayAnimation",[transition(":enter",[style({opacity:0,transform:"scaleY(0.8)"}),animate("{{showTransitionParams}}")]),transition(":leave",[animate("{{hideTransitionParams}}",style({opacity:0}))])])],host:{"[class.p-inputwrapper-filled]":"filled","[class.p-inputwrapper-focus]":"focus"},providers:[MULTISELECT_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-multiselect{display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.p-multiselect-trigger{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-negative:0;flex-shrink:0}.p-multiselect-label-container{overflow:hidden;-ms-flex:1 1 auto;flex:1 1 auto;cursor:pointer}.p-multiselect-label{display:block;white-space:nowrap;cursor:pointer;overflow:hidden;text-overflow:ellipsis}.p-multiselect-label-empty{overflow:hidden;visibility:hidden}.p-multiselect .p-multiselect-panel{min-width:100%}.p-multiselect-panel{position:absolute}.p-multiselect-items-wrapper{overflow:auto}.p-multiselect-items{margin:0;padding:0;list-style-type:none}.p-multiselect-item{cursor:pointer;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-multiselect-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.p-multiselect-filter-container{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.p-multiselect-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-multiselect-filter-container .p-inputtext{width:100%}.p-multiselect-close{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-negative:0;flex-shrink:0;overflow:hidden;position:relative}.p-fluid .p-multiselect{display:-ms-flexbox;display:flex}"]}]}],e.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ChangeDetectorRef}]},e.propDecorators={scrollHeight:[{type:Input}],defaultLabel:[{type:Input}],placeholder:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],panelStyle:[{type:Input}],panelStyleClass:[{type:Input}],inputId:[{type:Input}],disabled:[{type:Input}],readonly:[{type:Input}],filter:[{type:Input}],filterPlaceHolder:[{type:Input}],filterLocale:[{type:Input}],overlayVisible:[{type:Input}],tabindex:[{type:Input}],appendTo:[{type:Input}],dataKey:[{type:Input}],name:[{type:Input}],ariaLabelledBy:[{type:Input}],displaySelectedLabel:[{type:Input}],maxSelectedLabels:[{type:Input}],selectionLimit:[{type:Input}],selectedItemsLabel:[{type:Input}],showToggleAll:[{type:Input}],emptyFilterMessage:[{type:Input}],resetFilterOnHide:[{type:Input}],dropdownIcon:[{type:Input}],optionLabel:[{type:Input}],showHeader:[{type:Input}],autoZIndex:[{type:Input}],baseZIndex:[{type:Input}],filterBy:[{type:Input}],virtualScroll:[{type:Input}],itemSize:[{type:Input}],showTransitionOptions:[{type:Input}],hideTransitionOptions:[{type:Input}],ariaFilterLabel:[{type:Input}],filterMatchMode:[{type:Input}],tooltip:[{type:Input}],tooltipPosition:[{type:Input}],tooltipPositionStyle:[{type:Input}],tooltipStyleClass:[{type:Input}],autofocusFilter:[{type:Input}],containerViewChild:[{type:ViewChild,args:["container"]}],filterInputChild:[{type:ViewChild,args:["filterInput"]}],accessibleViewChild:[{type:ViewChild,args:["in"]}],footerFacet:[{type:ContentChild,args:[Footer]}],headerFacet:[{type:ContentChild,args:[Header]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],onChange:[{type:Output}],onFocus:[{type:Output}],onBlur:[{type:Output}],onClick:[{type:Output}],onPanelShow:[{type:Output}],onPanelHide:[{type:Output}],options:[{type:Input}]},e}(),MultiSelectModule=function(){function e(){}return e.decorators=[{type:NgModule,args:[{imports:[CommonModule,SharedModule,ScrollingModule,TooltipModule,RippleModule],exports:[MultiSelect,SharedModule,ScrollingModule],declarations:[MultiSelect,MultiSelectItem]}]}],e}();export{MULTISELECT_VALUE_ACCESSOR,MultiSelect,MultiSelectItem,MultiSelectModule};