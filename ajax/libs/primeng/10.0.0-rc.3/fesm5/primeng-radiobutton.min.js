import{forwardRef,EventEmitter,ChangeDetectorRef,Component,ChangeDetectionStrategy,Input,Output,ViewChild,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var RADIO_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return RadioButton}),multi:!0},RadioButton=function(){function t(t){this.cd=t,this.onClick=new EventEmitter,this.onFocus=new EventEmitter,this.onBlur=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.handleClick=function(t,e,n){t.preventDefault(),this.disabled||(this.select(t),n&&e.focus())},t.prototype.select=function(t){this.disabled||(this.inputViewChild.nativeElement.checked=!0,this.checked=!0,this.onModelChange(this.value),this.onClick.emit(t))},t.prototype.writeValue=function(t){this.checked=t==this.value,this.inputViewChild&&this.inputViewChild.nativeElement&&(this.inputViewChild.nativeElement.checked=this.checked),this.cd.markForCheck()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.onInputFocus=function(t){this.focused=!0,this.onFocus.emit(t)},t.prototype.onInputBlur=function(t){this.focused=!1,this.onModelTouched(),this.onBlur.emit(t)},t.prototype.onChange=function(t){this.select(t)},t.prototype.focus=function(){this.inputViewChild.nativeElement.focus()},t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.decorators=[{type:Component,args:[{selector:"p-radioButton",template:'\n        <div [ngStyle]="style" [ngClass]="{\'p-radiobutton p-component\':true,\'p-radiobutton-checked\': checked, \'p-radiobutton-disabled\': disabled, \'p-radiobutton-focused\': focused}" [class]="styleClass">\n            <div class="p-hidden-accessible">\n                <input #rb type="radio" [attr.id]="inputId" [attr.name]="name" [attr.value]="value" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy"\n                    [checked]="checked" (change)="onChange($event)" (focus)="onInputFocus($event)" (blur)="onInputBlur($event)" [disabled]="disabled">\n            </div>\n            <div (click)="handleClick($event, rb, true)" role="radio" [attr.aria-checked]="checked"\n                [ngClass]="{\'p-radiobutton-box\':true,\n                \'p-highlight\': checked, \'p-disabled\': disabled, \'p-focus\': focused}">\n                <span class="p-radiobutton-icon"></span>\n            </div>\n        </div>\n        <label (click)="select($event)" [class]="labelStyleClass"\n            [ngClass]="{\'p-radiobutton-label\':true, \'p-radiobutton-label-active\':rb.checked, \'p-disabled\':disabled, \'p-radiobutton-label-focus\':focused}"\n            *ngIf="label" [attr.for]="inputId">{{label}}</label>\n    ',providers:[RADIO_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.propDecorators={value:[{type:Input}],name:[{type:Input}],disabled:[{type:Input}],label:[{type:Input}],tabindex:[{type:Input}],inputId:[{type:Input}],ariaLabelledBy:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],labelStyleClass:[{type:Input}],onClick:[{type:Output}],onFocus:[{type:Output}],onBlur:[{type:Output}],inputViewChild:[{type:ViewChild,args:["rb"]}]},t}(),RadioButtonModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[RadioButton],declarations:[RadioButton]}]}],t}();export{RADIO_VALUE_ACCESSOR,RadioButton,RadioButtonModule};