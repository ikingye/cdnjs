import{forwardRef,EventEmitter,ElementRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Output,ContentChild,Input,ContentChildren,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{Header,PrimeTemplate,SharedModule}from"primeng/api";import{DomHandler}from"primeng/dom";import{NG_VALUE_ACCESSOR}from"@angular/forms";import*as Quill from"quill";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var l in e=arguments[n])Object.prototype.hasOwnProperty.call(e,l)&&(t[l]=e[l]);return t}).apply(this,arguments)},EDITOR_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Editor}),multi:!0},Editor=function(){function t(t){this.el=t,this.onTextChange=new EventEmitter,this.onSelectionChange=new EventEmitter,this.onInit=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.ngAfterViewInit=function(){var t=this,e=DomHandler.findSingle(this.el.nativeElement,"div.p-editor-content"),n={toolbar:DomHandler.findSingle(this.el.nativeElement,"div.p-editor-toolbar")},o=this.modules?__assign(__assign({},n),this.modules):n;this.quill=new Quill(e,{modules:o,placeholder:this.placeholder,readOnly:this.readonly,theme:"snow",formats:this.formats,bounds:this.bounds,debug:this.debug,scrollingContainer:this.scrollingContainer}),this.value&&this.quill.pasteHTML(this.value),this.quill.on("text-change",function(n,o,l){if("user"===l){var i=e.children[0].innerHTML,a=t.quill.getText().trim();"<p><br></p>"===i&&(i=null),t.onTextChange.emit({htmlValue:i,textValue:a,delta:n,source:l}),t.onModelChange(i),t.onModelTouched()}}),this.quill.on("selection-change",function(e,n,o){t.onSelectionChange.emit({range:e,oldRange:n,source:o})}),this.onInit.emit({editor:this.quill})},t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach(function(e){switch(e.getType()){case"toolbar":t.toolbarTemplate=e.template}})},t.prototype.writeValue=function(t){this.value=t,this.quill&&(t?this.quill.pasteHTML(t):this.quill.setText(""))},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.getQuill=function(){return this.quill},Object.defineProperty(t.prototype,"readonly",{get:function(){return this._readonly},set:function(t){this._readonly=t,this.quill&&(this._readonly?this.quill.disable():this.quill.enable())},enumerable:!1,configurable:!0}),t.ctorParameters=function(){return[{type:ElementRef}]},t.decorators=[{type:Component,args:[{selector:"p-editor",template:'\n        <div [ngClass]="\'p-editor-container\'" [class]="styleClass">\n            <div class="p-editor-toolbar" *ngIf="toolbar || toolbarTemplate">\n                <ng-content select="p-header"></ng-content>\n                <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n            </div>\n            <div class="p-editor-toolbar" *ngIf="!toolbar && !toolbarTemplate">\n                <span class="ql-formats">\n                    <select class="ql-header">\n                      <option value="1">Heading</option>\n                      <option value="2">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class="ql-font">\n                      <option selected>Sans Serif</option>\n                      <option value="serif">Serif</option>\n                      <option value="monospace">Monospace</option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-bold" aria-label="Bold" type="button"></button>\n                    <button class="ql-italic" aria-label="Italic" type="button"></button>\n                    <button class="ql-underline" aria-label="Underline" type="button"></button>\n                </span>\n                <span class="ql-formats">\n                    <select class="ql-color"></select>\n                    <select class="ql-background"></select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-list" value="ordered" aria-label="Ordered List" type="button"></button>\n                    <button class="ql-list" value="bullet" aria-label="Unordered List" type="button"></button>\n                    <select class="ql-align">\n                        <option selected></option>\n                        <option value="center"></option>\n                        <option value="right"></option>\n                        <option value="justify"></option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-link" aria-label="Insert Link" type="button"></button>\n                    <button class="ql-image" aria-label="Insert Image" type="button"></button>\n                    <button class="ql-code-block" aria-label="Insert Code Block" type="button"></button>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-clean" aria-label="Remove Styles" type="button"></button>\n                </span>\n            </div>\n            <div class="p-editor-content" [ngStyle]="style"></div>\n        </div>\n    ',providers:[EDITOR_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None}]}],t.ctorParameters=function(){return[{type:ElementRef}]},t.propDecorators={onTextChange:[{type:Output}],onSelectionChange:[{type:Output}],toolbar:[{type:ContentChild,args:[Header]}],style:[{type:Input}],styleClass:[{type:Input}],placeholder:[{type:Input}],formats:[{type:Input}],modules:[{type:Input}],bounds:[{type:Input}],scrollingContainer:[{type:Input}],debug:[{type:Input}],onInit:[{type:Output}],templates:[{type:ContentChildren,args:[PrimeTemplate]}],readonly:[{type:Input}]},t}(),EditorModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Editor,SharedModule],declarations:[Editor]}]}],t}();export{EDITOR_VALUE_ACCESSOR,Editor,EditorModule};