import{forwardRef,EventEmitter,ChangeDetectorRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,Output,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{NG_VALUE_ACCESSOR}from"@angular/forms";var RATING_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return Rating}),multi:!0},Rating=function(){function t(t){this.cd=t,this.stars=5,this.cancel=!0,this.iconOnClass="pi pi-star",this.iconOffClass="pi pi-star-o",this.iconCancelClass="pi pi-ban",this.onRate=new EventEmitter,this.onCancel=new EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.ngOnInit=function(){this.starsArray=[];for(var t=0;t<this.stars;t++)this.starsArray[t]=t},t.prototype.rate=function(t,e){this.readonly||this.disabled||(this.value=e+1,this.onModelChange(this.value),this.onModelTouched(),this.onRate.emit({originalEvent:t,value:e+1})),t.preventDefault()},t.prototype.clear=function(t){this.readonly||this.disabled||(this.value=null,this.onModelChange(this.value),this.onModelTouched(),this.onCancel.emit(t)),t.preventDefault()},t.prototype.writeValue=function(t){this.value=t,this.cd.detectChanges()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.decorators=[{type:Component,args:[{selector:"p-rating",template:'\n        <div class="p-rating" [ngClass]="{\'p-readonly\': readonly, \'p-disabled\': disabled}">\n            <span [attr.tabindex]="(disabled || readonly) ? null : \'0\'" *ngIf="cancel" (click)="clear($event)" (keydown.enter)="clear($event)" class="p-rating-icon p-rating-cancel" [ngClass]="iconCancelClass" [ngStyle]="iconCancelStyle"></span>\n            <span *ngFor="let star of starsArray;let i=index" class="p-rating-icon" [attr.tabindex]="(disabled || readonly) ? null : \'0\'"  (click)="rate($event,i)" (keydown.enter)="rate($event,i)"\n                [ngClass]="(!value || i >= value) ? iconOffClass : iconOnClass"\n                [ngStyle]="(!value || i >= value) ? iconOffStyle : iconOnStyle"></span>\n        </div>\n    ',providers:[RATING_VALUE_ACCESSOR],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-rating-icon{cursor:pointer}.p-rating.p-rating-readonly .p-rating-icon{cursor:default}"]}]}],t.ctorParameters=function(){return[{type:ChangeDetectorRef}]},t.propDecorators={disabled:[{type:Input}],readonly:[{type:Input}],stars:[{type:Input}],cancel:[{type:Input}],iconOnClass:[{type:Input}],iconOnStyle:[{type:Input}],iconOffClass:[{type:Input}],iconOffStyle:[{type:Input}],iconCancelClass:[{type:Input}],iconCancelStyle:[{type:Input}],onRate:[{type:Output}],onCancel:[{type:Output}]},t}(),RatingModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule],exports:[Rating],declarations:[Rating]}]}],t}();export{RATING_VALUE_ACCESSOR,Rating,RatingModule};