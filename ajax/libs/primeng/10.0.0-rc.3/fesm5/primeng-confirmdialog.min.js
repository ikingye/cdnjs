import{EventEmitter,ElementRef,Renderer2,NgZone,ChangeDetectorRef,Component,ChangeDetectionStrategy,ViewEncapsulation,Input,ContentChild,ViewChild,ContentChildren,NgModule}from"@angular/core";import{animation,style,animate,trigger,transition,useAnimation}from"@angular/animations";import{CommonModule}from"@angular/common";import{DomHandler}from"primeng/dom";import{ConfirmationService,Footer,PrimeTemplate,SharedModule}from"primeng/api";import{ButtonModule}from"primeng/button";var showAnimation=animation([style({transform:"{{transform}}",opacity:0}),animate("{{transition}}",style({transform:"none",opacity:1}))]),hideAnimation=animation([animate("{{transition}}",style({transform:"{{transform}}",opacity:0}))]),ConfirmDialog=function(){function t(t,e,n,o,i){var a=this;this.el=t,this.renderer=e,this.confirmationService=n,this.zone=o,this.cd=i,this.acceptIcon="pi pi-check",this.acceptLabel="Yes",this.acceptVisible=!0,this.rejectIcon="pi pi-times",this.rejectLabel="No",this.rejectVisible=!0,this.closeOnEscape=!0,this.blockScroll=!0,this.closable=!0,this.autoZIndex=!0,this.baseZIndex=0,this.transitionOptions="150ms cubic-bezier(0, 0, 0.2, 1)",this.focusTrap=!0,this.defaultFocus="accept",this._position="center",this.transformOptions="scale(0.7)",this.subscription=this.confirmationService.requireConfirmation$.subscribe(function(t){t?t.key===a.key&&(a.confirmation=t,a.confirmationOptions={message:a.confirmation.message||a.message,icon:a.confirmation.icon||a.icon,header:a.confirmation.header||a.header,rejectVisible:null==a.confirmation.rejectVisible?a.rejectVisible:a.confirmation.rejectVisible,acceptVisible:null==a.confirmation.acceptVisible?a.acceptVisible:a.confirmation.acceptVisible,acceptLabel:a.confirmation.acceptLabel||a.acceptLabel,rejectLabel:a.confirmation.rejectLabel||a.rejectLabel,acceptIcon:a.confirmation.acceptIcon||a.acceptIcon,rejectIcon:a.confirmation.rejectIcon||a.rejectIcon,acceptButtonStyleClass:a.confirmation.acceptButtonStyleClass||a.acceptButtonStyleClass,rejectButtonStyleClass:a.confirmation.rejectButtonStyleClass||a.rejectButtonStyleClass,defaultFocus:a.confirmation.defaultFocus||a.defaultFocus,blockScroll:!1===a.confirmation.blockScroll||!0===a.confirmation.blockScroll?a.confirmation.blockScroll:a.blockScroll},a.confirmation.accept&&(a.confirmation.acceptEvent=new EventEmitter,a.confirmation.acceptEvent.subscribe(a.confirmation.accept)),a.confirmation.reject&&(a.confirmation.rejectEvent=new EventEmitter,a.confirmation.rejectEvent.subscribe(a.confirmation.reject)),a.visible=!0):a.hide()})}return Object.defineProperty(t.prototype,"visible",{get:function(){return this._visible},set:function(t){this._visible=t,this._visible&&!this.maskVisible&&(this.maskVisible=!0),this.cd.markForCheck()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"position",{get:function(){return this._position},set:function(t){switch(this._position=t,t){case"topleft":case"bottomleft":case"left":this.transformOptions="translate3d(-100%, 0px, 0px)";break;case"topright":case"bottomright":case"right":this.transformOptions="translate3d(100%, 0px, 0px)";break;case"bottom":this.transformOptions="translate3d(0px, 100%, 0px)";break;case"top":this.transformOptions="translate3d(0px, -100%, 0px)";break;default:this.transformOptions="scale(0.7)"}},enumerable:!1,configurable:!0}),t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach(function(e){switch(e.getType()){case"footerTemplate":t.footerTemplate=e.template}})},t.prototype.option=function(t){var e=this.confirmationOptions||this;if(e.hasOwnProperty(t))return e[t]},t.prototype.onAnimationStart=function(t){switch(t.toState){case"visible":this.container=t.element,this.wrapper=this.container.parentElement,this.contentContainer=DomHandler.findSingle(this.container,".p-dialog-content");var e=this.getElementToFocus();e&&e.focus(),this.appendContainer(),this.moveOnTop(),this.bindGlobalListeners(),this.enableModality()}},t.prototype.onAnimationEnd=function(t){switch(t.toState){case"void":this.onOverlayHide()}},t.prototype.getElementToFocus=function(){switch(this.option("defaultFocus")){case"accept":return DomHandler.findSingle(this.container,".p-confirm-dialog-accept");case"reject":return DomHandler.findSingle(this.container,".p-confirm-dialog-reject");case"close":return DomHandler.findSingle(this.container,".p-dialog-header-close");case"none":return null;default:return DomHandler.findSingle(this.container,".p-confirm-dialog-accept")}},t.prototype.appendContainer=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.wrapper):DomHandler.appendChild(this.wrapper,this.appendTo))},t.prototype.restoreAppend=function(){this.wrapper&&this.appendTo&&this.el.nativeElement.appendChild(this.wrapper)},t.prototype.enableModality=function(){this.option("blockScroll")&&DomHandler.addClass(document.body,"p-overflow-hidden")},t.prototype.disableModality=function(){this.maskVisible=!1,this.option("blockScroll")&&DomHandler.removeClass(document.body,"p-overflow-hidden"),this.container&&this.cd.detectChanges()},t.prototype.close=function(t){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide(),t.preventDefault()},t.prototype.hide=function(){this.visible=!1,this.confirmation=null,this.confirmationOptions=null},t.prototype.moveOnTop=function(){this.autoZIndex&&(this.container.style.zIndex=String(this.baseZIndex+ ++DomHandler.zindex),this.wrapper.style.zIndex=String(this.baseZIndex+(DomHandler.zindex-1)))},t.prototype.getMaskClass=function(){var t={"p-dialog-mask p-component-overlay":!0,"p-dialog-mask-scrollblocker":this.blockScroll};return t[this.getPositionClass().toString()]=!0,t},t.prototype.getPositionClass=function(){var t=this,e=["left","right","top","topleft","topright","bottom","bottomleft","bottomright"].find(function(e){return e===t.position});return e?"p-dialog-"+e:""},t.prototype.bindGlobalListeners=function(){var t=this;(this.closeOnEscape&&this.closable||this.focusTrap&&!this.documentEscapeListener)&&(this.documentEscapeListener=this.renderer.listen("document","keydown",function(e){if(27==e.which&&t.closeOnEscape&&t.closable&&parseInt(t.container.style.zIndex)===DomHandler.zindex+t.baseZIndex&&t.visible&&t.close(e),9===e.which&&t.focusTrap){e.preventDefault();var n=DomHandler.getFocusableElements(t.container);if(n&&n.length>0)if(document.activeElement){var o=n.indexOf(document.activeElement);e.shiftKey?-1==o||0===o?n[n.length-1].focus():n[o-1].focus():-1==o||o===n.length-1?n[0].focus():n[o+1].focus()}else n[0].focus()}}))},t.prototype.unbindGlobalListeners=function(){this.documentEscapeListener&&(this.documentEscapeListener(),this.documentEscapeListener=null)},t.prototype.onOverlayHide=function(){this.disableModality(),this.unbindGlobalListeners(),this.container=null},t.prototype.ngOnDestroy=function(){this.restoreAppend(),this.onOverlayHide(),this.subscription.unsubscribe()},t.prototype.accept=function(){this.confirmation.acceptEvent&&this.confirmation.acceptEvent.emit(),this.hide()},t.prototype.reject=function(){this.confirmation.rejectEvent&&this.confirmation.rejectEvent.emit(),this.hide()},t.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ConfirmationService},{type:NgZone},{type:ChangeDetectorRef}]},t.decorators=[{type:Component,args:[{selector:"p-confirmDialog",template:'\n        <div [class]="maskStyleClass" [ngClass]="getMaskClass()" *ngIf="maskVisible">\n            <div [ngClass]="{\'p-dialog p-confirm-dialog p-component\':true,\'p-dialog-rtl\':rtl}" [ngStyle]="style" [class]="styleClass" (mousedown)="moveOnTop()"\n                [@animation]="{value: \'visible\', params: {transform: transformOptions, transition: transitionOptions}}" (@animation.start)="onAnimationStart($event)" (@animation.done)="onAnimationEnd($event)" *ngIf="visible">\n                <div class="p-dialog-header">\n                    <span class="p-dialog-title" *ngIf="option(\'header\')">{{option(\'header\')}}</span>\n                    <div class="p-dialog-header-icons">\n                        <button *ngIf="closable" type="button" [ngClass]="{\'p-dialog-header-icon p-dialog-header-close p-link\':true}" (click)="close($event)" (keydown.enter)="close($event)">\n                            <span class="pi pi-times"></span>\n                        </button>\n                    </div>\n                </div>\n                <div #content class="p-dialog-content">\n                    <i [ngClass]="\'p-confirm-dialog-icon\'" [class]="option(\'icon\')" *ngIf="option(\'icon\')"></i>\n                    <span class="p-confirm-dialog-message" [innerHTML]="option(\'message\')"></span>\n                </div>\n                <div class="p-dialog-footer" *ngIf="footer || footerTemplate">\n                    <ng-content select="p-footer"></ng-content>\n                    <ng-container *ngTemplateOutlet="footerTemplate"></ng-container>\n                </div>\n                <div class="p-dialog-footer" *ngIf="!footer">\n                    <button type="button" pButton [icon]="option(\'acceptIcon\')" [label]="option(\'acceptLabel\')" (click)="accept()" [ngClass]="\'p-confirm-dialog-accept\'" [class]="option(\'acceptButtonStyleClass\')" *ngIf="option(\'acceptVisible\')"></button>\n                    <button type="button" pButton [icon]="option(\'rejectIcon\')" [label]="option(\'rejectLabel\')" (click)="reject()" [ngClass]="\'p-confirm-dialog-reject\'" [class]="option(\'rejectButtonStyleClass\')" *ngIf="option(\'rejectVisible\')"></button>\n                </div>\n            </div>\n        </div>\n    ',animations:[trigger("animation",[transition("void => visible",[useAnimation(showAnimation)]),transition("visible => void",[useAnimation(hideAnimation)])])],changeDetection:ChangeDetectionStrategy.OnPush,encapsulation:ViewEncapsulation.None,styles:[".p-dialog-mask{position:fixed;top:0;left:0;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;pointer-events:none;background-color:transparent;transition-property:background-color}.p-dialog-mask.p-component-overlay{pointer-events:auto}.p-dialog{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;pointer-events:auto;max-height:90%;-ms-transform:scale(1);transform:scale(1);position:relative}.p-dialog-content{overflow-y:auto}.p-dialog-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.p-dialog-title{list-style:outside}.p-dialog .p-dialog-header-icons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.p-dialog .p-dialog-header-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;overflow:hidden;position:relative}.p-dialog-mask.p-dialog-mask-leave{background-color:transparent}.p-fluid .p-dialog-footer .p-button{width:auto}.p-dialog-bottom .p-dialog,.p-dialog-bottomleft .p-dialog,.p-dialog-bottomright .p-dialog,.p-dialog-left .p-dialog,.p-dialog-right .p-dialog,.p-dialog-top .p-dialog,.p-dialog-topleft .p-dialog,.p-dialog-topright .p-dialog{margin:.75rem;transform:translate3d(0,0,0)}.p-dialog-maximized{transition:none;-ms-transform:none;transform:none;width:100vw!important;max-height:100%;height:100%}.p-dialog-maximized .p-dialog-content{-ms-flex-positive:1;flex-grow:1}.p-dialog-left{-ms-flex-pack:start;justify-content:flex-start}.p-dialog-right{-ms-flex-pack:end;justify-content:flex-end}.p-dialog-top{-ms-flex-align:start;align-items:flex-start}.p-dialog-topleft{-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:start;align-items:flex-start}.p-dialog-topright{-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:start;align-items:flex-start}.p-dialog-bottom{-ms-flex-align:end;align-items:flex-end}.p-dialog-bottomleft{-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:end;align-items:flex-end}.p-dialog-bottomright{-ms-flex-pack:end;justify-content:flex-end;-ms-flex-align:end;align-items:flex-end}.p-dialog .p-resizable-handle{position:absolute;font-size:.1px;display:block;cursor:se-resize;width:12px;height:12px;right:1px;bottom:1px}.p-confirm-dialog .p-dialog-content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}"]}]}],t.ctorParameters=function(){return[{type:ElementRef},{type:Renderer2},{type:ConfirmationService},{type:NgZone},{type:ChangeDetectorRef}]},t.propDecorators={header:[{type:Input}],icon:[{type:Input}],message:[{type:Input}],style:[{type:Input}],styleClass:[{type:Input}],maskStyleClass:[{type:Input}],acceptIcon:[{type:Input}],acceptLabel:[{type:Input}],acceptVisible:[{type:Input}],rejectIcon:[{type:Input}],rejectLabel:[{type:Input}],rejectVisible:[{type:Input}],acceptButtonStyleClass:[{type:Input}],rejectButtonStyleClass:[{type:Input}],closeOnEscape:[{type:Input}],blockScroll:[{type:Input}],rtl:[{type:Input}],closable:[{type:Input}],appendTo:[{type:Input}],key:[{type:Input}],autoZIndex:[{type:Input}],baseZIndex:[{type:Input}],transitionOptions:[{type:Input}],focusTrap:[{type:Input}],defaultFocus:[{type:Input}],visible:[{type:Input}],position:[{type:Input}],footer:[{type:ContentChild,args:[Footer]}],contentViewChild:[{type:ViewChild,args:["content"]}],templates:[{type:ContentChildren,args:[PrimeTemplate]}]},t}(),ConfirmDialogModule=function(){function t(){}return t.decorators=[{type:NgModule,args:[{imports:[CommonModule,ButtonModule],exports:[ConfirmDialog,ButtonModule,SharedModule],declarations:[ConfirmDialog]}]}],t}();export{ConfirmDialog,ConfirmDialogModule};