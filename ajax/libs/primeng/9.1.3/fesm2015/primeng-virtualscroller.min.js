import{EventEmitter,ElementRef,Input,ContentChild,ContentChildren,ViewChild,Output,Component,ChangeDetectionStrategy,NgModule}from"@angular/core";import{CommonModule}from"@angular/common";import{Header,Footer,PrimeTemplate,SharedModule}from"primeng/api";import{CdkVirtualScrollViewport,ScrollingModule}from"@angular/cdk/scrolling";var __decorate=this&&this.__decorate||function(e,t,r,o){var l,i=arguments.length,a=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,o);else for(var n=e.length-1;n>=0;n--)(l=e[n])&&(a=(i<3?l(a):i>3?l(t,r,a):l(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a};let VirtualScroller=class{constructor(e){this.el=e,this.trackBy=((e,t)=>t),this.onLazyLoad=new EventEmitter,this._totalRecords=0,this.page=0,this._first=0,this.loadedPages=[]}get totalRecords(){return this._totalRecords}set totalRecords(e){this._totalRecords=e,console.log("totalRecords is deprecated, provide a value with the length of virtual items instead.")}get first(){return this._first}set first(e){this._first=e,console.log("first property is deprecated, use scrollToIndex function to scroll a specific item.")}get cache(){return this._cache}set cache(e){this._cache=e,console.log("cache is deprecated as it is always on.")}ngAfterContentInit(){this.templates.forEach(e=>{switch(e.getType()){case"item":this.itemTemplate=e.template;break;case"loadingItem":this.loadingItemTemplate=e.template;break;default:this.itemTemplate=e.template}})}onScrollIndexChange(e){if(this.lazy){this.createPageRange(Math.floor(e/this.rows)).forEach(e=>this.loadPage(e))}}createPageRange(e){let t=[];return 0!==e&&t.push(e-1),t.push(e),e!==Math.ceil(this.value.length/this.rows)-1&&t.push(e+1),t}loadPage(e){this.loadedPages.includes(e)||(this.onLazyLoad.emit({first:this.rows*e,rows:this.rows}),this.loadedPages.push(e))}getBlockableElement(){return this.el.nativeElement.children[0]}scrollTo(e,t){this.scrollToIndex(e,t)}scrollToIndex(e,t){this.viewport&&this.viewport.scrollToIndex(e,t)}clearCache(){this.loadedPages=[]}ngOnChanges(e){e.value&&(this.lazy||this.clearCache())}};VirtualScroller.ctorParameters=(()=>[{type:ElementRef}]),__decorate([Input()],VirtualScroller.prototype,"value",void 0),__decorate([Input()],VirtualScroller.prototype,"itemSize",void 0),__decorate([Input()],VirtualScroller.prototype,"style",void 0),__decorate([Input()],VirtualScroller.prototype,"styleClass",void 0),__decorate([Input()],VirtualScroller.prototype,"scrollHeight",void 0),__decorate([Input()],VirtualScroller.prototype,"lazy",void 0),__decorate([Input()],VirtualScroller.prototype,"rows",void 0),__decorate([Input()],VirtualScroller.prototype,"minBufferPx",void 0),__decorate([Input()],VirtualScroller.prototype,"maxBufferPx",void 0),__decorate([Input()],VirtualScroller.prototype,"trackBy",void 0),__decorate([ContentChild(Header)],VirtualScroller.prototype,"header",void 0),__decorate([ContentChild(Footer)],VirtualScroller.prototype,"footer",void 0),__decorate([ContentChildren(PrimeTemplate)],VirtualScroller.prototype,"templates",void 0),__decorate([ViewChild(CdkVirtualScrollViewport)],VirtualScroller.prototype,"viewport",void 0),__decorate([Output()],VirtualScroller.prototype,"onLazyLoad",void 0),__decorate([Input()],VirtualScroller.prototype,"totalRecords",null),__decorate([Input()],VirtualScroller.prototype,"first",null),__decorate([Input()],VirtualScroller.prototype,"cache",null);let VirtualScrollerModule=class{};VirtualScrollerModule=__decorate([NgModule({imports:[CommonModule,ScrollingModule],exports:[VirtualScroller=__decorate([Component({selector:"p-virtualScroller",template:'\n        <div [ngClass]="\'ui-virtualscroller ui-widget\'" [ngStyle]="style" [class]="styleClass">\n            <div class="ui-virtualscroller-header ui-widget-header ui-corner-top" *ngIf="header">\n                <ng-content select="p-header"></ng-content>\n            </div>\n            <div #content class="ui-virtualscroller-content ui-widget-content">\n                <div class="ui-virtualscroller-list">\n                    <cdk-virtual-scroll-viewport #viewport [ngStyle]="{\'height\': scrollHeight}" [itemSize]="itemSize" [minBufferPx]="minBufferPx" [maxBufferPx]="maxBufferPx" (scrolledIndexChange)="onScrollIndexChange($event)">\n                        <ng-container *cdkVirtualFor="let item of value; trackBy: trackBy; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd; ">\n                            <div [ngStyle]="{\'height\': itemSize + \'px\'}" class="ui-virtualscroller-item">\n                                <ng-container *ngTemplateOutlet="item ? itemTemplate : loadingItemTemplate; context: {$implicit: item, index: i, count: c, first: f, last: l, even: e, odd: o}"></ng-container>\n                            </div>\n                        </ng-container>\n                    </cdk-virtual-scroll-viewport>\n                </div>\n            </div>\n            <div class="ui-virtualscroller-footer ui-widget-header ui-corner-bottom" *ngIf="footer">\n                <ng-content select="p-footer"></ng-content>\n            </div>\n        </div>\n    ',changeDetection:ChangeDetectionStrategy.Default})],VirtualScroller),SharedModule,ScrollingModule],declarations:[VirtualScroller]})],VirtualScrollerModule);export{VirtualScroller,VirtualScrollerModule};