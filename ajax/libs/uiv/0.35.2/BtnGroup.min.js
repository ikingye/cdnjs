function mergeData(){for(var e,t,a={},r=arguments.length;r--;)for(var s=0,n=Object.keys(arguments[r]);s<n.length;s++)switch(e=n[s]){case"class":case"style":case"directives":Array.isArray(a[e])||(a[e]=[]),a[e]=a[e].concat(arguments[r][e]);break;case"staticClass":if(!arguments[r][e])break;void 0===a[e]&&(a[e]=""),a[e]&&(a[e]+=" "),a[e]+=arguments[r][e].trim();break;case"on":case"nativeOn":a[e]||(a[e]={});for(var o=0,c=Object.keys(arguments[r][e]);o<c.length;o++)t=c[o],a[e][t]?a[e][t]=[].concat(a[e][t],arguments[r][e][t]):a[e][t]=arguments[r][e][t];break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":a[e]||(a[e]={}),a[e]=__assign({},arguments[r][e],a[e]);break;case"slot":case"key":case"ref":case"tag":case"show":case"keepAlive":default:a[e]||(a[e]=arguments[r][e])}return a}var __assign=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var s in t=arguments[a])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},defineProperty=function(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e},BtnGroup={functional:!0,render:function(e,t){var a=t.props,r=t.children;return e("div",mergeData(t.data,{class:defineProperty({"btn-group":!a.vertical,"btn-group-vertical":a.vertical,"btn-group-justified":a.justified},"btn-group-"+a.size,a.size),attrs:{role:"group","data-toggle":"buttons"}}),r)},props:{size:String,vertical:{type:Boolean,default:!1},justified:{type:Boolean,default:!1}}};export default BtnGroup;