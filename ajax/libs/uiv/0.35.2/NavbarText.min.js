function mergeData(){for(var a,e,r={},t=arguments.length;t--;)for(var s=0,c=Object.keys(arguments[t]);s<c.length;s++)switch(a=c[s]){case"class":case"style":case"directives":Array.isArray(r[a])||(r[a]=[]),r[a]=r[a].concat(arguments[t][a]);break;case"staticClass":if(!arguments[t][a])break;void 0===r[a]&&(r[a]=""),r[a]&&(r[a]+=" "),r[a]+=arguments[t][a].trim();break;case"on":case"nativeOn":r[a]||(r[a]={});for(var n=0,o=Object.keys(arguments[t][a]);n<o.length;n++)e=o[n],r[a][e]?r[a][e]=[].concat(r[a][e],arguments[t][a][e]):r[a][e]=arguments[t][a][e];break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":r[a]||(r[a]={}),r[a]=__assign({},arguments[t][a],r[a]);break;case"slot":case"key":case"ref":case"tag":case"show":case"keepAlive":default:r[a]||(r[a]=arguments[t][a])}return r}var __assign=Object.assign||function(a){for(var e,r=1,t=arguments.length;r<t;r++)for(var s in e=arguments[r])Object.prototype.hasOwnProperty.call(e,s)&&(a[s]=e[s]);return a},NavbarText={functional:!0,render:function(a,e){var r=e.children,t=e.data,s=e.props;return a("p",mergeData(t,{class:{"navbar-text":!0,"navbar-left":s.left,"navbar-right":s.right}}),r)},props:{left:Boolean,right:Boolean}};export default NavbarText;