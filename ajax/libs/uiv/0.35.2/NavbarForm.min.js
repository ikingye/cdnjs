function mergeData(){for(var a,e,r={},s=arguments.length;s--;)for(var t=0,c=Object.keys(arguments[s]);t<c.length;t++)switch(a=c[t]){case"class":case"style":case"directives":Array.isArray(r[a])||(r[a]=[]),r[a]=r[a].concat(arguments[s][a]);break;case"staticClass":if(!arguments[s][a])break;void 0===r[a]&&(r[a]=""),r[a]&&(r[a]+=" "),r[a]+=arguments[s][a].trim();break;case"on":case"nativeOn":r[a]||(r[a]={});for(var o=0,n=Object.keys(arguments[s][a]);o<n.length;o++)e=n[o],r[a][e]?r[a][e]=[].concat(r[a][e],arguments[s][a][e]):r[a][e]=arguments[s][a][e];break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":r[a]||(r[a]={}),r[a]=__assign({},arguments[s][a],r[a]);break;case"slot":case"key":case"ref":case"tag":case"show":case"keepAlive":default:r[a]||(r[a]=arguments[s][a])}return r}var __assign=Object.assign||function(a){for(var e,r=1,s=arguments.length;r<s;r++)for(var t in e=arguments[r])Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=e[t]);return a},NavbarForm={functional:!0,render:function(a,e){var r=e.children,s=e.data,t=e.props;return a("form",mergeData(s,{class:{"navbar-form":!0,"navbar-left":t.left,"navbar-right":t.right}}),r)},props:{left:Boolean,right:Boolean}};export default NavbarForm;