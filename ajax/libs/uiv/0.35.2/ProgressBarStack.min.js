function mergeData(){for(var e,a,r={},t=arguments.length;t--;)for(var s=0,l=Object.keys(arguments[t]);s<l.length;s++)switch(e=l[s]){case"class":case"style":case"directives":Array.isArray(r[e])||(r[e]=[]),r[e]=r[e].concat(arguments[t][e]);break;case"staticClass":if(!arguments[t][e])break;void 0===r[e]&&(r[e]=""),r[e]&&(r[e]+=" "),r[e]+=arguments[t][e].trim();break;case"on":case"nativeOn":r[e]||(r[e]={});for(var n=0,o=Object.keys(arguments[t][e]);n<o.length;n++)a=o[n],r[e][a]?r[e][a]=[].concat(r[e][a],arguments[t][e][a]):r[e][a]=arguments[t][e][a];break;case"attrs":case"props":case"domProps":case"scopedSlots":case"staticStyle":case"hook":case"transition":r[e]||(r[e]={}),r[e]=__assign({},arguments[t][e],r[e]);break;case"slot":case"key":case"ref":case"tag":case"show":case"keepAlive":default:r[e]||(r[e]=arguments[t][e])}return r}var __assign=Object.assign||function(e){for(var a,r=1,t=arguments.length;r<t;r++)for(var s in a=arguments[r])Object.prototype.hasOwnProperty.call(a,s)&&(e[s]=a[s]);return e},defineProperty=function(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e},ProgressBarStack={functional:!0,render:function(e,a){var r=a.props;return e("div",mergeData(a.data,{class:defineProperty({"progress-bar":!0,"progress-bar-striped":r.striped,active:r.striped&&r.active},"progress-bar-"+r.type,Boolean(r.type)),style:{minWidth:r.minWidth?"2em":null,width:r.value+"%"},attrs:{role:"progressbar","aria-valuemin":0,"aria-valuenow":r.value,"aria-valuemax":100}}),r.label?r.labelText?r.labelText:r.value+"%":null)},props:{value:{type:Number,required:!0,validator:function(e){return e>=0&&e<=100}},labelText:String,type:String,label:{type:Boolean,default:!1},minWidth:{type:Boolean,default:!1},striped:{type:Boolean,default:!1},active:{type:Boolean,default:!1}}};export default ProgressBarStack;