{"version":3,"file":"Pagination.js","sources":["../src/utils/arrayUtils.js","../src/components/pagination/Pagination.vue"],"sourcesContent":["export function spliceIfExist (arr, item) {\n  if (Array.isArray(arr)) {\n    const index = arr.indexOf(item)\n    if (index >= 0) {\n      arr.splice(index, 1)\n    }\n  }\n}\n\nexport function range (end, start = 0, step = 1) {\n  let arr = []\n  for (let i = start; i < end; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function nodeListToArray (nodeList) {\n  return Array.prototype.slice.call(nodeList || [])\n}\n\nexport function onlyUnique (value, index, self) {\n  return self.indexOf(value) === index\n}\n","<template>\n  <nav aria-label=\"Page navigation\" :class=\"navClasses\">\n    <ul class=\"pagination\" :class=\"classes\">\n      <li :class=\"{disabled:value<=1||disabled}\" v-if=\"boundaryLinks\">\n        <a href=\"#\" role=\"button\" aria-label=\"First\" @click.prevent=\"onPageChange(1)\">\n          <span aria-hidden=\"true\">&laquo;</span>\n        </a>\n      </li>\n      <li :class=\"{disabled:value<= 1||disabled}\" v-if=\"directionLinks\">\n        <a href=\"#\" role=\"button\" aria-label=\"Previous\" @click.prevent=\"onPageChange(value-1)\">\n          <span aria-hidden=\"true\">&lsaquo;</span>\n        </a>\n      </li>\n      <li :class=\"{disabled:disabled}\" v-if=\"sliceStart>0\">\n        <a href=\"#\" role=\"button\" aria-label=\"Previous group\" @click.prevent=\"toPage(1)\">\n          <span aria-hidden=\"true\">&hellip;</span>\n        </a>\n      </li>\n      <li v-for=\"item in sliceArray\" :key=\"item\" :class=\"{active:value===item+1,disabled:disabled}\">\n        <a href=\"#\" role=\"button\" @click.prevent=\"onPageChange(item + 1)\">{{item + 1}}</a>\n      </li>\n      <li :class=\"{disabled:disabled}\" v-if=\"sliceStart<totalPage-maxSize\">\n        <a href=\"#\" role=\"button\" aria-label=\"Next group\" @click.prevent=\"toPage(0)\">\n          <span aria-hidden=\"true\">&hellip;</span>\n        </a>\n      </li>\n      <li :class=\"{disabled:value>=totalPage||disabled}\" v-if=\"directionLinks\">\n        <a href=\"#\" role=\"button\" aria-label=\"Next\" @click.prevent=\"onPageChange(value+1)\">\n          <span aria-hidden=\"true\">&rsaquo;</span>\n        </a>\n      </li>\n      <li :class=\"{disabled:value>=totalPage||disabled}\" v-if=\"boundaryLinks\">\n        <a href=\"#\" role=\"button\" aria-label=\"Last\" @click.prevent=\"onPageChange(totalPage)\">\n          <span aria-hidden=\"true\">&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n</template>\n\n<script>\n  import {range} from '../../utils/arrayUtils'\n\n  export default {\n    props: {\n      value: {\n        type: Number,\n        required: true,\n        validator: v => v >= 1\n      },\n      boundaryLinks: {\n        type: Boolean,\n        default: false\n      },\n      directionLinks: {\n        type: Boolean,\n        default: true\n      },\n      size: String,\n      align: String,\n      totalPage: {\n        type: Number,\n        required: true,\n        validator: v => v >= 0\n      },\n      maxSize: {\n        type: Number,\n        default: 5,\n        validator: v => v >= 0\n      },\n      disabled: Boolean\n    },\n    data () {\n      return {\n        sliceStart: 0\n      }\n    },\n    computed: {\n      navClasses () {\n        return {\n          [`text-${this.align}`]: Boolean(this.align)\n        }\n      },\n      classes () {\n        return {\n          [`pagination-${this.size}`]: Boolean(this.size)\n        }\n      },\n      sliceArray () {\n        return range(this.totalPage).slice(this.sliceStart, this.sliceStart + this.maxSize)\n      }\n    },\n    methods: {\n      calculateSliceStart () {\n        const currentPage = this.value\n        const chunkSize = this.maxSize\n        const currentChunkStart = this.sliceStart\n        const currentChunkEnd = currentChunkStart + chunkSize\n        if (currentPage > currentChunkEnd) {\n          const lastChunkStart = this.totalPage - chunkSize\n          if (currentPage > lastChunkStart) {\n            this.sliceStart = lastChunkStart\n          } else {\n            this.sliceStart = currentPage - 1\n          }\n        } else if (currentPage < currentChunkStart + 1) {\n          if (currentPage > chunkSize) {\n            this.sliceStart = currentPage - chunkSize\n          } else {\n            this.sliceStart = 0\n          }\n        }\n      },\n      onPageChange (page) {\n        if (!this.disabled && page > 0 && page <= this.totalPage && page !== this.value) {\n          this.$emit('input', page)\n          this.$emit('change', page)\n        }\n      },\n      toPage (pre) {\n        if (this.disabled) {\n          return\n        }\n        const chunkSize = this.maxSize\n        const currentChunkStart = this.sliceStart\n        const lastChunkStart = this.totalPage - chunkSize\n        const start = pre ? currentChunkStart - chunkSize : currentChunkStart + chunkSize\n        if (start < 0) {\n          this.sliceStart = 0\n        } else if (start > lastChunkStart) {\n          this.sliceStart = lastChunkStart\n        } else {\n          this.sliceStart = start\n        }\n      }\n    },\n    created () {\n      this.$watch(vm => [vm.value, vm.maxSize, vm.totalPage].join(), this.calculateSliceStart, {\n        immediate: true\n      })\n    }\n  }\n</script>\n"],"names":["range","end","start","step","arr","i","push","render","Number","v","Boolean","String","align","size","totalPage","slice","sliceStart","maxSize","currentPage","value","chunkSize","currentChunkStart","currentChunkEnd","lastChunkStart","page","disabled","$emit","pre","$watch","vm","join","calculateSliceStart"],"mappings":"AASO,SAASA,KAAT,CAAgBC,GAAhB,EAA0C;MAArBC,KAAqB,uEAAb,CAAa;MAAVC,IAAU,uEAAH,CAAG;;MAC3CC,MAAM,EAAV;OACK,IAAIC,IAAIH,KAAb,EAAoBG,IAAIJ,GAAxB,EAA6BI,KAAKF,IAAlC,EAAwC;QAClCG,IAAJ,CAASD,CAAT;;SAEKD,GAAP;;;;;;;;;;;;;;;;;;AC6BF,iBAAe,EAACG;;;;;;;;;;;;;;;;;;GAAD,qBAAA;SACN;WACE;YACCC,MADD;gBAEK,IAFL;iBAGM;eAAKC,KAAK,CAAV;;KAJR;mBAMU;YACPC,OADO;eAEJ;KARN;oBAUW;YACRA,OADQ;eAEL;KAZN;UAcCC,MAdD;WAeEA,MAfF;eAgBM;YACHH,MADG;gBAEC,IAFD;iBAGE;eAAKC,KAAK,CAAV;;KAnBR;aAqBI;YACDD,MADC;eAEE,CAFF;iBAGI;eAAKC,KAAK,CAAV;;KAxBR;cA0BKC;GA3BC;MAAA,kBA6BL;WACC;kBACO;KADd;GA9BW;;YAkCH;cAAA,wBACM;0CAED,KAAKE,KADhB,EAC0BF,QAAQ,KAAKE,KAAb,CAD1B;KAFM;WAAA,qBAMG;gDAEQ,KAAKC,IADtB,EAC+BH,QAAQ,KAAKG,IAAb,CAD/B;KAPM;cAAA,wBAWM;aACLb,MAAM,KAAKc,SAAX,EAAsBC,KAAtB,CAA4B,KAAKC,UAAjC,EAA6C,KAAKA,UAAL,GAAkB,KAAKC,OAApE,CAAP;;GA9CS;WAiDJ;uBAAA,iCACgB;UACfC,cAAc,KAAKC,KAAzB;UACMC,YAAY,KAAKH,OAAvB;UACMI,oBAAoB,KAAKL,UAA/B;UACMM,kBAAkBD,oBAAoBD,SAA5C;UACIF,cAAcI,eAAlB,EAAmC;YAC3BC,iBAAiB,KAAKT,SAAL,GAAiBM,SAAxC;YACIF,cAAcK,cAAlB,EAAkC;eAC3BP,UAAL,GAAkBO,cAAlB;SADF,MAEO;eACAP,UAAL,GAAkBE,cAAc,CAAhC;;OALJ,MAOO,IAAIA,cAAcG,oBAAoB,CAAtC,EAAyC;YAC1CH,cAAcE,SAAlB,EAA6B;eACtBJ,UAAL,GAAkBE,cAAcE,SAAhC;SADF,MAEO;eACAJ,UAAL,GAAkB,CAAlB;;;KAjBC;gBAAA,wBAqBOQ,IArBP,EAqBa;UACd,CAAC,KAAKC,QAAN,IAAkBD,OAAO,CAAzB,IAA8BA,QAAQ,KAAKV,SAA3C,IAAwDU,SAAS,KAAKL,KAA1E,EAAiF;aAC1EO,KAAL,CAAW,OAAX,EAAoBF,IAApB;aACKE,KAAL,CAAW,QAAX,EAAqBF,IAArB;;KAxBG;UAAA,kBA2BCG,GA3BD,EA2BM;UACP,KAAKF,QAAT,EAAmB;;;UAGbL,YAAY,KAAKH,OAAvB;UACMI,oBAAoB,KAAKL,UAA/B;UACMO,iBAAiB,KAAKT,SAAL,GAAiBM,SAAxC;UACMlB,QAAQyB,MAAMN,oBAAoBD,SAA1B,GAAsCC,oBAAoBD,SAAxE;UACIlB,QAAQ,CAAZ,EAAe;aACRc,UAAL,GAAkB,CAAlB;OADF,MAEO,IAAId,QAAQqB,cAAZ,EAA4B;aAC5BP,UAAL,GAAkBO,cAAlB;OADK,MAEA;aACAP,UAAL,GAAkBd,KAAlB;;;GAzFO;SAAA,qBA6FF;SACJ0B,MAAL,CAAY;aAAM,CAACC,GAAGV,KAAJ,EAAWU,GAAGZ,OAAd,EAAuBY,GAAGf,SAA1B,EAAqCgB,IAArC,EAAN;KAAZ,EAA+D,KAAKC,mBAApE,EAAyF;iBAC5E;KADb;;CA9FJ;;;;"}