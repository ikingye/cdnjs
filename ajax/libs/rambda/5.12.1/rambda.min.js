"use strict";function F(){return!1}function T(){return!0}function add(t,e){return 1===arguments.length?e=>add(t,e):Number(t)+Number(e)}function curry(t,e=[]){return(...n)=>(e=>e.length>=t.length?t(...e):curry(t,e))([...e,...n])}function adjustFn(t,e,n){const r=t<0?n.length+t:t;if(t>=n.length||r<0)return n;const o=n.slice();return o[r]=e(o[r]),o}Object.defineProperty(exports,"__esModule",{value:!0});const adjust=curry(adjustFn);function all(t,e){if(1===arguments.length)return e=>all(t,e);for(let n=0;n<e.length;n++)if(!t(e[n],n))return!1;return!0}function allPass(t){return e=>{let n=0;for(;n<t.length;){if(!t[n](e))return!1;n++}return!0}}function always(t){return()=>t}function and(t,e){return 1===arguments.length?e=>and(t,e):t&&e}function any(t,e){if(1===arguments.length)return e=>any(t,e);let n=0;for(;n<e.length;){if(t(e[n],n))return!0;n++}return!1}function anyPass(t){return e=>{let n=0;for(;n<t.length;){if(t[n](e))return!0;n++}return!1}}function append(t,e){if(1===arguments.length)return e=>append(t,e);if("string"==typeof e)return`${e}${t}`;const n=e.slice();return n.push(t),n}const _isArray=Array.isArray;function __findHighestArity(t,e=0){for(const n in t)!1!==t.hasOwnProperty(n)&&"constructor"!==n&&("object"==typeof t[n]&&(e=Math.max(e,__findHighestArity(t[n]))),"function"==typeof t[n]&&(e=Math.max(e,t[n].length)));return e}function __filterUndefined(){const t=[];let e=0;const n=arguments.length;for(;e<n&&void 0!==arguments[e];)t[e]=arguments[e],e++;return t}function __applySpecWithArity(t,e,n){const r=e-n.length;if(1===r)return r=>__applySpecWithArity(t,e,__filterUndefined(...n,r));if(2===r)return(r,o)=>__applySpecWithArity(t,e,__filterUndefined(...n,r,o));if(3===r)return(r,o,i)=>__applySpecWithArity(t,e,__filterUndefined(...n,r,o,i));if(4===r)return(r,o,i,s)=>__applySpecWithArity(t,e,__filterUndefined(...n,r,o,i,s));if(r>4)return(...r)=>__applySpecWithArity(t,e,__filterUndefined(...n,...r));if(_isArray(t)){const r=[];let o=0;const i=t.length;for(;o<i;o++)("object"==typeof t[o]||_isArray(t[o]))&&(r[o]=__applySpecWithArity(t[o],e,n)),"function"==typeof t[o]&&(r[o]=t[o](...n));return r}const o={};for(const r in t)!1!==t.hasOwnProperty(r)&&"constructor"!==r&&("object"!=typeof t[r]?"function"==typeof t[r]&&(o[r]=t[r](...n)):o[r]=__applySpecWithArity(t[r],e,n));return o}function applySpec(t,...e){const n=__findHighestArity(t);return 0===n?()=>({}):__applySpecWithArity(t,n,e)}function assocFn(t,e,n){return Object.assign({},n,{[t]:e})}const assoc=curry(assocFn);function _isInteger(t){return t<<0===t}var _isInteger$1=Number.isInteger||_isInteger;function assocPathFn(t,e,n){const r="string"==typeof t?t.split("."):t;if(0===r.length)return e;const o=r[0];if(r.length>1){const t="object"!=typeof n||null===n||!n.hasOwnProperty(o)?_isInteger(parseInt(r[1],10))?[]:{}:n[o];e=assocPathFn(Array.prototype.slice.call(r,1),e,t)}return assoc(o,e,n)}const assocPath=curry(assocPathFn);function both(t,e){return 1===arguments.length?e=>both(t,e):(...n)=>t(...n)&&e(...n)}function chain(t,e){return 1===arguments.length?e=>chain(t,e):[].concat(...e.map(t))}function clampFn(t,e,n){if(t>e)throw new Error("min must not be greater than max in clamp(min, max, value)");return n>=t&&n<=e?n:n>e?e:n<t?t:void 0}const clamp=curry(clampFn);function clone(t){const e=_isArray(t)?Array(t.length):{};if(t&&t.getTime)return new Date(t.getTime());for(const n in t){const r=t[n];e[n]="object"==typeof r&&null!==r?r.getTime?new Date(r.getTime()):clone(r):r}return e}function complement(t){return(...e)=>!t(...e)}function compose(...t){if(0===t.length)throw new Error("compose requires at least one argument");return(...e)=>{const n=t.slice();if(n.length>0){let t=n.pop()(...e);for(;n.length>0;)t=n.pop()(t);return t}}}function concat(t,e){return 1===arguments.length?e=>concat(t,e):"string"==typeof t?`${t}${e}`:[...t,...e]}function cond(t){return e=>{let n,r=!1;return t.forEach(([t,o])=>{!r&&t(e)&&(r=!0,n=o(e))}),n}}function _curryN(t,e,n){return function(){let r=0,o=0;const i=e.length,s=arguments.length,u=new Array(i+s);for(;r<i;)u[r]=e[r],r++;for(;o<s;)u[i+o]=arguments[o],o++;const c=t-u.length;return u.length>=t?n.apply(this,u):_arity(c,_curryN(t,u,n))}}function _arity(t,e){switch(t){case 0:return function(){return e.apply(this,arguments)};case 1:return function(t){return e.apply(this,arguments)};case 2:return function(t,n){return e.apply(this,arguments)};case 3:return function(t,n,r){return e.apply(this,arguments)};case 4:return function(t,n,r,o){return e.apply(this,arguments)};case 5:return function(t,n,r,o,i){return e.apply(this,arguments)};case 6:return function(t,n,r,o,i,s){return e.apply(this,arguments)};case 7:return function(t,n,r,o,i,s,u){return e.apply(this,arguments)};case 8:return function(t,n,r,o,i,s,u,c){return e.apply(this,arguments)};case 9:return function(t,n,r,o,i,s,u,c,p){return e.apply(this,arguments)};case 10:return function(t,n,r,o,i,s,u,c,p,l){return e.apply(this,arguments)};default:throw new Error("First argument to _arity must be a non-negative integer no greater than ten")}}function curryN(t,e){return 1===arguments.length?e=>curryN(t,e):_arity(t,_curryN(t,[],e))}const _keys=Object.keys;function map(t,e){if(1===arguments.length)return e=>map(t,e);if(void 0===e)return[];if(_isArray(e)){let n=0;const r=e.length,o=Array(r);for(;n<r;)o[n]=t(e[n],n,e),n++;return o}let n=0;const r=_keys(e),o=r.length,i={};for(;n<o;){const o=r[n];i[o]=t(e[o],o,e),n++}return i}function max(t,e){return 1===arguments.length?e=>max(t,e):e>t?e:t}function reduceFn(t,e,n){if(!_isArray(n))throw new TypeError("reduce: list must be array or iterable");let r=0;const o=n.length;for(;r<o;)e=t(e,n[r],r,n),r++;return e}const reduce=curry(reduceFn);function converge(t,e){if(1===arguments.length)return e=>converge(t,e);return curryN(reduce((t,e)=>max(t,e.length),0,e),function(){return t.apply(this,map(t=>t.apply(this,arguments),e))})}const dec=t=>t-1;function flagIs(t){return null==t||!0===Number.isNaN(t)}function defaultTo(t,...e){if(1===arguments.length)return(...e)=>defaultTo(t,...e);const n=e.length-1;let r,o=n+1,i=!1;for(;!i;){const t=e[n-o+1];0===o?i=!0:flagIs(t)?o-=1:(r=t,i=!0)}return void 0===r?t:r}function type(t){const e=typeof t;if(null===t)return"Null";if(void 0===t)return"Undefined";if("boolean"===e)return"Boolean";if("number"===e)return Number.isNaN(t)?"NaN":"Number";if("string"===e)return"String";if(_isArray(t))return"Array";if(t instanceof RegExp)return"RegExp";const n=t&&t.toString?t.toString():"";return["true","false"].includes(n)?"Boolean":Number.isNaN(Number(n))?n.startsWith("async")?"Async":"[object Promise]"===n?"Promise":"function"===e?"Function":t instanceof String?"String":"Object":"Number"}function parseError(t){const e=t.__proto__.toString();return["Error","TypeError"].includes(e)?[e,t.message]:[]}function parseDate(t){return t.toDateString?[!0,t.getTime()]:[!1]}function parseRegex(t){return t.constructor!==RegExp?[!1]:[!0,t.toString()]}function equals(t,e){if(1===arguments.length)return e=>equals(t,e);const n=type(t);if(n!==type(e))return!1;if(["NaN","Undefined","Null"].includes(n))return!0;if("Number"===n)return Object.is(-0,t)===Object.is(-0,e)&&t.toString()===e.toString();if(["String","Boolean"].includes(n))return t.toString()===e.toString();if("Array"===n){const n=Array.from(t),r=Array.from(e);if(n.toString()!==r.toString())return!1;let o=!0;return n.forEach((t,e)=>{o&&(t===r[e]||equals(t,r[e])||(o=!1))}),o}const r=parseRegex(t),o=parseRegex(e);if(r[0])return!!o[0]&&r[1]===o[1];if(o[0])return!1;const i=parseDate(t),s=parseDate(e);if(i[0])return!!s[0]&&i[1]===s[1];if(s[0])return!1;const u=parseError(t),c=parseError(e);if(u[0])return!!c[0]&&(u[0]===c[0]&&u[1]===c[1]);if("Object"===n){const n=Object.keys(t);if(n.length!==Object.keys(e).length)return!1;let r=!0;return n.forEach(n=>{if(r){const o=t[n],i=e[n];o===i||equals(o,i)||(r=!1)}}),r}return!1}function includes(t,e){if(1===arguments.length)return e=>includes(t,e);if("string"==typeof e)return e.includes(t);if(!e)throw new TypeError(`Cannot read property 'indexOf' of ${e}`);if(!_isArray(e))return!1;let n=-1;for(;++n<e.length;)if(equals(e[n],t))return!0;return!1}function uniq(t){let e=-1;const n=[];for(;++e<t.length;){const r=t[e];includes(r,n)||n.push(r)}return n}function difference(t,e){return 1===arguments.length?e=>difference(t,e):uniq(t).filter(t=>!includes(t,e))}function dissoc(t,e){if(1===arguments.length)return e=>dissoc(t,e);if(null==e)return{};const n={};for(const t in e)n[t]=e[t];return delete n[t],n}function divide(t,e){return 1===arguments.length?e=>divide(t,e):t/e}function drop(t,e){return 1===arguments.length?e=>drop(t,e):e.slice(t>0?t:0)}function dropLast(t,e){return 1===arguments.length?e=>dropLast(t,e):t>0?e.slice(0,-t):e.slice()}function either(t,e){return 1===arguments.length?e=>either(t,e):(...n)=>Boolean(t(...n)||e(...n))}function endsWith(t,e){return 1===arguments.length?e=>endsWith(t,e):e.endsWith(t)}function filterObject(t,e){const n={};for(const r in e)t(e[r],r,e)&&(n[r]=e[r]);return n}function filter(t,e){if(1===arguments.length)return e=>filter(t,e);if(!e)return[];if(!_isArray(e))return filterObject(t,e);let n=0;const r=e.length,o=[];for(;n<r;){const r=e[n];t(r,n)&&o.push(r),n++}return o}function find(t,e){if(1===arguments.length)return e=>find(t,e);let n=0;const r=e.length;for(;n<r;){const r=e[n];if(t(r,n))return r;n++}}function findIndex(t,e){if(1===arguments.length)return e=>findIndex(t,e);const n=e.length;let r=-1;for(;++r<n;)if(t(e[r],r))return r;return-1}function findLast(t,e){if(1===arguments.length)return e=>findLast(t,e);let n=e.length;for(;--n>=0;)if(t(e[n],n))return e[n]}function findLastIndex(t,e){if(1===arguments.length)return e=>findLastIndex(t,e);let n=e.length;for(;--n>=0;)if(t(e[n],n))return n;return-1}function flatten(t,e){const n=void 0===e?[]:e;for(let e=0;e<t.length;e++)_isArray(t[e])?flatten(t[e],n):n.push(t[e]);return n}function flipFn(t){return(...e)=>{if(1===e.length)return n=>t(n,e[0]);if(2===e.length)return t(e[1],e[0]);if(3===e.length)return t(e[1],e[0],e[2]);if(4===e.length)return t(e[1],e[0],e[2],e[3]);throw new Error("R.flip doesn't work with arity > 4")}}function flip(t){return flipFn(t)}function forEach(t,e){if(1===arguments.length)return e=>forEach(t,e);if(void 0!==e){if(_isArray(e)){let n=0;const r=e.length;for(;n<r;)t(e[n],n,e),n++}else{let n=0;const r=_keys(e),o=r.length;for(;n<o;){const o=r[n];t(e[o],o,e),n++}}return e}}function fromPairs(t){const e={};return t.forEach(([t,n])=>e[t]=n),e}function groupBy(t,e){if(1===arguments.length)return e=>groupBy(t,e);const n={};for(let r=0;r<e.length;r++){const o=e[r],i=t(o);n[i]||(n[i]=[]),n[i].push(o)}return n}function groupWith(t,e){if(!_isArray(e))throw new TypeError("list.reduce is not a function");const n=e.slice();if(1===e.length)return[n];const r=[];let o=[];return n.reduce((n,i,s)=>{if(0===s)return i;const u=t(n,i),c=0===o.length,p=s===e.length-1;return u?(c&&o.push(n),o.push(i),p&&r.push(o),i):c?(r.push([n]),p&&r.push([i]),i):(r.push(o),p&&r.push([i]),o=[],i)},void 0),r}function has(t,e){return 1===arguments.length?e=>has(t,e):!!e&&void 0!==e[t]}function path(t,e){if(1===arguments.length)return e=>path(t,e);if(null==e)return;let n=e,r=0;const o="string"==typeof t?t.split("."):t;for(;r<o.length;){if(null==n)return;n=n[o[r]],r++}return n}function hasPath(t,e){return 1===arguments.length?e=>hasPath(t,e):void 0!==path(t,e)}function head(t){return"string"==typeof t?t[0]||"":t[0]}function _objectIs(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}var _objectIs$1=Object.is||_objectIs;function identical(t,e){return 1===arguments.length?e=>identical(t,e):_objectIs$1(t,e)}function identity(t){return t}function ifElseFn(t,e,n){return(...r)=>{return!0===("boolean"==typeof t?t:t(...r))?e(...r):n(...r)}}const ifElse=curry(ifElseFn),inc=t=>t+1;function indexByPath(t,e){const n={};for(let r=0;r<e.length;r++){const o=e[r];n[path(t,o)]=o}return n}function indexBy(t,e){if(1===arguments.length)return e=>indexBy(t,e);if("string"==typeof t)return indexByPath(t,e);const n={};for(let r=0;r<e.length;r++){const o=e[r];n[t(o)]=o}return n}function indexOf(t,e){if(1===arguments.length)return e=>indexOf(t,e);let n=-1;const{length:r}=e;for(;++n<r;)if(e[n]===t)return n;return-1}function baseSlice(t,e,n){let r=-1,{length:o}=t;(n=n>o?o:n)<0&&(n+=o),o=e>n?0:n-e>>>0,e>>>=0;const i=Array(o);for(;++r<o;)i[r]=t[r+e];return i}function init(t){return"string"==typeof t?t.slice(0,-1):t.length?baseSlice(t,0,-1):[]}function intersection(t,e){return 1===arguments.length?e=>intersection(t,e):filter(t=>includes(t,e),t)}function intersperse(t,e){if(1===arguments.length)return e=>intersperse(t,e);let n=-1;const r=e.length,o=[];for(;++n<r;)n===r-1?o.push(e[n]):o.push(e[n],t);return o}function is(t,e){return 1===arguments.length?e=>is(t,e):null!=e&&e.constructor===t||e instanceof t}function isEmpty(t){const e=type(t);return!["Undefined","NaN","Number","Null"].includes(e)&&(!t||("Object"===e?0===Object.keys(t).length:"Array"===e&&0===t.length))}function isNil(t){return null==t}function join(t,e){return 1===arguments.length?e=>join(t,e):e.join(t)}function keys(t){return Object.keys(t)}function last(t){return"string"==typeof t?t[t.length-1]||"":t[t.length-1]}function lastIndexOf(t,e){if(1===arguments.length)return e=>lastIndexOf(t,e);let n=e.length;for(;--n>0;)if(equals(e[n],t))return n;return-1}function length(t){return!t&&""!==t||void 0===t.length?NaN:t.length}function lens(t,e){return 1===arguments.length?e=>lens(t,e):function(n){return function(r){return n(t(r)).map(t=>e(t,r))}}}function nth(t,e){if(1===arguments.length)return e=>nth(t,e);const n=t<0?e.length+t:t;return"[object String]"===Object.prototype.toString.call(e)?e.charAt(n):e[n]}function updateFn(t,e,n){return n.slice().fill(e,t,t+1)}const update=curry(updateFn);function lensIndex(t){return lens(nth(t),update(t))}function lensPath(t){return lens(path(t),assocPath(t))}function prop(t,e){return 1===arguments.length?e=>prop(t,e):e?e[t]:void 0}function lensProp(t){return lens(prop(t),assoc(t))}function match(t,e){if(1===arguments.length)return e=>match(t,e);const n=e.match(t);return null===n?[]:n}function mathMod(t,e){return 1===arguments.length?e=>mathMod(t,e):!_isInteger$1(t)||!_isInteger$1(e)||e<1?NaN:(t%e+e)%e}function maxByFn(t,e,n){return t(n)>t(e)?n:e}const maxBy=curry(maxByFn);function sum(t){return t.reduce((t,e)=>t+e,0)}function mean(t){return sum(t)/t.length}function median(t){const e=t.length;if(0===e)return NaN;const n=2-e%2,r=(e-n)/2;return mean(Array.prototype.slice.call(t,0).sort((t,e)=>t===e?0:t<e?-1:1).slice(r,r+n))}function merge(t,e){return 1===arguments.length?e=>merge(t,e):Object.assign({},t||{},e||{})}function mergeAll(t){let e={};return map(t=>{e=merge(e,t)},t),e}function mergeDeepRight(t,e){if(1===arguments.length)return e=>mergeDeepRight(t,e);const n=JSON.parse(JSON.stringify(t));return Object.keys(e).forEach(r=>{"Object"===type(e[r])&&"Object"===type(t[r])?n[r]=mergeDeepRight(t[r],e[r]):n[r]=e[r]}),n}function mergeLeft(t,e){return 1===arguments.length?e=>mergeLeft(t,e):merge(e,t)}function min(t,e){return 1===arguments.length?e=>min(t,e):e<t?e:t}function minByFn(t,e,n){return t(n)<t(e)?n:e}const minBy=curry(minByFn);function modulo(t,e){return 1===arguments.length?e=>modulo(t,e):t%e}function moveFn(t,e,n){if(t<0||e<0)throw new Error("Rambda.move does not support negative indexes");if(t>n.length-1||e>n.length-1)return n;const r=n.slice();return r[t]=n[e],r[e]=n[t],r}const move=curry(moveFn);function multiply(t,e){return 1===arguments.length?e=>multiply(t,e):t*e}function negate(t){return-t}function none(t,e){if(1===arguments.length)return e=>none(t,e);for(let n=0;n<e.length;n++)if(!t(e[n],n))return!0;return!1}function not(t){return!t}function of(t){return[t]}function omit(t,e){if(1===arguments.length)return e=>omit(t,e);if(null==e)return;const n="string"==typeof t?t.split(","):t,r={};for(const t in e)n.includes(t)||(r[t]=e[t]);return r}const Identity=t=>({x:t,map:e=>Identity(e(t))});function overFn(t,e,n){return t(t=>Identity(e(t)))(n).x}const over=curry(overFn);function partial(t,...e){const n=t.length;return(...r)=>e.length+r.length>=n?t(...e,...r):partial(t,...[...e,...r])}function whenObject(t,e){const n={},r={};return Object.entries(e).forEach(([e,o])=>{t(o,e)?n[e]=o:r[e]=o}),[n,r]}function partition(t,e){if(1===arguments.length)return e=>partition(t,e);if(!_isArray(e))return whenObject(t,e);const n=[],r=[];let o=-1;for(;o++<e.length-1;)t(e[o],o)?n.push(e[o]):r.push(e[o]);return[n,r]}function pathEqFn(t,e,n){return equals(path(t,n),e)}const pathEq=curry(pathEqFn);function pathOrFn(t,e,n){return defaultTo(t,path(e,n))}const pathOr=curry(pathOrFn);function paths(t,e){return 1===arguments.length?e=>paths(t,e):t.map(t=>path(t,e))}function pick(t,e){if(1===arguments.length)return e=>pick(t,e);if(null==e)return;const n="string"==typeof t?t.split(","):t,r={};let o=0;for(;o<n.length;)n[o]in e&&(r[n[o]]=e[n[o]]),o++;return r}function pickAll(t,e){if(1===arguments.length)return e=>pickAll(t,e);if(null==e)return;const n="string"==typeof t?t.split(","):t,r={};let o=0;for(;o<n.length;)n[o]in e?r[n[o]]=e[n[o]]:r[n[o]]=void 0,o++;return r}function pipe(...t){if(0===t.length)throw new Error("pipe requires at least one argument");return compose(...t.reverse())}function pluck(t,e){if(1===arguments.length)return e=>pluck(t,e);const n=[];return map(e=>{void 0!==e[t]&&n.push(e[t])},e),n}function prepend(t,e){return 1===arguments.length?e=>prepend(t,e):"string"==typeof e?`${t}${e}`:[t].concat(e)}const product=reduce(multiply,1);function propEqFn(t,e,n){return!!n&&n[t]===e}const propEq=curry(propEqFn);function propIsFn(t,e,n){return is(t,n[e])}const propIs=curry(propIsFn);function propOrFn(t,e,n){return n?defaultTo(t,n[e]):t}const propOr=curry(propOrFn);function range(t,e){if(1===arguments.length)return e=>range(t,e);if(Number.isNaN(Number(t))||Number.isNaN(Number(e)))throw new TypeError("Both arguments to range must be numbers");if(e<t)return[];const n=e-t,r=Array(n);for(let e=0;e<n;e++)r[e]=t+e;return r}function reject(t,e){return 1===arguments.length?e=>reject(t,e):filter((e,n)=>!t(e,n),e)}function repeat(t,e){return 1===arguments.length?e=>repeat(t,e):Array(e).fill(t)}function replaceFn(t,e,n){return n.replace(t,e)}const replace=curry(replaceFn);function reverse(t){if("string"==typeof t)return t.split("").reverse().join("");return t.slice().reverse()}function setFn(t,e,n){return over(t,always(e),n)}const set=curry(setFn);function sliceFn(t,e,n){return n.slice(t,e)}const slice=curry(sliceFn);function sort(t,e){if(1===arguments.length)return e=>sort(t,e);return e.slice().sort(t)}function sortBy(t,e){if(1===arguments.length)return e=>sortBy(t,e);return e.slice().sort((e,n)=>{const r=t(e),o=t(n);return r===o?0:r<o?-1:1})}function split(t,e){return 1===arguments.length?e=>split(t,e):e.split(t)}function splitEvery(t,e){if(1===arguments.length)return e=>splitEvery(t,e);if(t<1)throw new Error("First argument to splitEvery must be a positive integer");const n=[];let r=0;for(;r<e.length;)n.push(e.slice(r,r+=t));return n}function startsWith(t,e){return 1===arguments.length?e=>startsWith(t,e):e.startsWith(t)}function subtract(t,e){return 1===arguments.length?e=>subtract(t,e):t-e}function symmetricDifference(t,e){return 1===arguments.length?e=>symmetricDifference(t,e):concat(filter(t=>!includes(t,e),t),filter(e=>!includes(e,t),e))}function tail(t){return drop(1,t)}function take(t,e){return 1===arguments.length?e=>take(t,e):t<0?e.slice():"string"==typeof e?e.slice(0,t):baseSlice(e,0,t)}function takeLast(t,e){if(1===arguments.length)return e=>takeLast(t,e);const n=e.length;if(t<0)return e.slice();let r=t>n?n:t;return"string"==typeof e?e.slice(n-r):baseSlice(e,r=n-r,n)}function tap(t,e){return 1===arguments.length?e=>tap(t,e):(t(e),e)}function test(t,e){if(1===arguments.length)return e=>test(t,e);if("string"==typeof t)throw new TypeError(`‘test’ requires a value of type RegExp as its first argument; received "${t}"`);return-1!==e.search(t)}function times(t,e){if(1===arguments.length)return e=>times(t,e);if(!Number.isInteger(e)||e<0)throw new RangeError("n must be an integer");return map(t,range(0,e))}function toLower(t){return t.toLowerCase()}function toPairs(t){return Object.entries(t)}function toString(t){return t.toString()}function toUpper(t){return t.toUpperCase()}function transpose(t){return t.reduce((t,e)=>(e.forEach((e,n)=>_isArray(t[n])?t[n].push(e):t.push([e])),t),[])}function trim(t){return t.trim()}function isFunction(t){return["Async","Function"].includes(type(t))}function isPromise(t){return["Async","Promise"].includes(type(t))}function tryCatch(t,e){if(!isFunction(t))throw new Error(`R.tryCatch | fn '${t}'`);const n=isFunction(e);return isPromise(t)?(...r)=>new Promise(o=>{t(...r).then(o).catch(()=>n?isPromise(e)?void e(...r).then(o):o(e(...r)):o(e))}):(...r)=>{try{return t(...r)}catch(t){return n?e(t,...r):e}}}function union(t,e){if(1===arguments.length)return e=>union(t,e);const n=t.slice();return e.forEach(e=>{includes(e,t)||n.push(e)}),n}function uniqWith(t,e){if(1===arguments.length)return e=>uniqWith(t,e);let n=-1;const r=e.length,o=[];for(;++n<r;){const r=e[n];any(e=>t(r,e),o)||o.push(r)}return o}function unless(t,e){return 1===arguments.length?e=>unless(t,e):n=>t(n)?n:e(n)}function values(t){return"Object"!==type(t)?[]:Object.values(t)}const Const=t=>({x:t,map:e=>Const(t)});function view(t,e){return 1===arguments.length?e=>view(t,e):t(Const)(e).x}function whenFn(t,e,n){return t(n)?e(n):n}const when=curry(whenFn);function where(t,e){if(void 0===e)return e=>where(t,e);let n=!0;for(const r in t){const o=t[r](e[r]);n&&!1===o&&(n=!1)}return n}function whereEq(t,e){if(1===arguments.length)return e=>whereEq(t,e);const n=filter((t,n)=>equals(t,e[n]),t);return Object.keys(n).length===Object.keys(t).length}function without(t,e){return void 0===e?e=>without(t,e):reduce((e,n)=>includes(n,t)?e:e.concat(n),[],e)}function xor(t,e){return 1===arguments.length?e=>xor(t,e):Boolean(t)&&!e||Boolean(e)&&!t}function zip(t,e){if(1===arguments.length)return e=>zip(t,e);const n=[],r=Math.min(t.length,e.length);for(let o=0;o<r;o++)n[o]=[t[o],e[o]];return n}function zipObj(t,e){return 1===arguments.length?e=>zipObj(t,e):take(e.length,t).reduce((t,n,r)=>(t[n]=e[r],t),{})}exports.F=F,exports.T=T,exports.add=add,exports.adjust=adjust,exports.all=all,exports.allPass=allPass,exports.always=always,exports.and=and,exports.any=any,exports.anyPass=anyPass,exports.append=append,exports.applySpec=applySpec,exports.assoc=assoc,exports.assocPath=assocPath,exports.both=both,exports.chain=chain,exports.clamp=clamp,exports.clone=clone,exports.complement=complement,exports.compose=compose,exports.concat=concat,exports.cond=cond,exports.converge=converge,exports.curry=curry,exports.curryN=curryN,exports.dec=dec,exports.defaultTo=defaultTo,exports.difference=difference,exports.dissoc=dissoc,exports.divide=divide,exports.drop=drop,exports.dropLast=dropLast,exports.either=either,exports.endsWith=endsWith,exports.equals=equals,exports.filter=filter,exports.find=find,exports.findIndex=findIndex,exports.findLast=findLast,exports.findLastIndex=findLastIndex,exports.flatten=flatten,exports.flip=flip,exports.forEach=forEach,exports.fromPairs=fromPairs,exports.groupBy=groupBy,exports.groupWith=groupWith,exports.has=has,exports.hasPath=hasPath,exports.head=head,exports.identical=identical,exports.identity=identity,exports.ifElse=ifElse,exports.inc=inc,exports.includes=includes,exports.indexBy=indexBy,exports.indexOf=indexOf,exports.init=init,exports.intersection=intersection,exports.intersperse=intersperse,exports.is=is,exports.isEmpty=isEmpty,exports.isNil=isNil,exports.join=join,exports.keys=keys,exports.last=last,exports.lastIndexOf=lastIndexOf,exports.length=length,exports.lens=lens,exports.lensIndex=lensIndex,exports.lensPath=lensPath,exports.lensProp=lensProp,exports.map=map,exports.match=match,exports.mathMod=mathMod,exports.max=max,exports.maxBy=maxBy,exports.maxByFn=maxByFn,exports.mean=mean,exports.median=median,exports.merge=merge,exports.mergeAll=mergeAll,exports.mergeDeepRight=mergeDeepRight,exports.mergeLeft=mergeLeft,exports.min=min,exports.minBy=minBy,exports.minByFn=minByFn,exports.modulo=modulo,exports.move=move,exports.multiply=multiply,exports.negate=negate,exports.none=none,exports.not=not,exports.nth=nth,exports.of=of,exports.omit=omit,exports.over=over,exports.partial=partial,exports.partition=partition,exports.path=path,exports.pathEq=pathEq,exports.pathOr=pathOr,exports.paths=paths,exports.pick=pick,exports.pickAll=pickAll,exports.pipe=pipe,exports.pluck=pluck,exports.prepend=prepend,exports.product=product,exports.prop=prop,exports.propEq=propEq,exports.propIs=propIs,exports.propOr=propOr,exports.range=range,exports.reduce=reduce,exports.reject=reject,exports.repeat=repeat,exports.replace=replace,exports.reverse=reverse,exports.set=set,exports.slice=slice,exports.sort=sort,exports.sortBy=sortBy,exports.split=split,exports.splitEvery=splitEvery,exports.startsWith=startsWith,exports.subtract=subtract,exports.sum=sum,exports.symmetricDifference=symmetricDifference,exports.tail=tail,exports.take=take,exports.takeLast=takeLast,exports.tap=tap,exports.test=test,exports.times=times,exports.toLower=toLower,exports.toPairs=toPairs,exports.toString=toString,exports.toUpper=toUpper,exports.transpose=transpose,exports.trim=trim,exports.tryCatch=tryCatch,exports.type=type,exports.union=union,exports.uniq=uniq,exports.uniqWith=uniqWith,exports.unless=unless,exports.update=update,exports.values=values,exports.view=view,exports.when=when,exports.where=where,exports.whereEq=whereEq,exports.without=without,exports.xor=xor,exports.zip=zip,exports.zipObj=zipObj;