{"version":3,"sources":["../../../../src/lib/providers/launch/launch.ts"],"names":["Angulartics2LaunchByAdobe","angulartics2","_this","this","payload","_satellite","console","warn","setUsername","subscribe","x","setUserProperties","prototype","userId","properties","startTracking","pageTrack","pipe","filterDeveloperMode","path","eventTrack","action","track","eventProperties","Injectable","args","providedIn","Angulartics2"],"mappings":"yYASE,SAAAA,EACYC,GADZ,IAAAC,EAAAC,KACYA,KAAAF,aAAAA,EAFZE,KAAAC,QAAe,GAIT,oBAAuBC,YACzBC,QAAQC,KAAK,qBAEfJ,KAAKF,aAAaO,YACfC,WAAU,SAACC,GAAc,OAAAR,EAAKM,YAAYE,MAC7CP,KAAKF,aAAaU,kBACfF,WAAU,SAACC,GAAM,OAAAR,EAAKS,kBAAkBD,aAG7CV,EAAAY,UAAAJ,YAAA,SAAYK,QACN,IAAuBA,GAAUA,IACnCV,KAAKC,QAAQS,OAASA,IAI1Bb,EAAAY,UAAAD,kBAAA,SAAkBG,QACZ,IAAuBA,GAAcA,IACvCX,KAAKC,QAAQU,WAAaA,IAI9Bd,EAAAY,UAAAG,cAAA,WAAA,IAAAb,EAAAC,KACEA,KAAKF,aAAae,UACfC,KAAKd,KAAKF,aAAaiB,uBACvBT,WAAU,SAACC,GAAM,OAAAR,EAAKc,UAAUN,EAAES,SACrChB,KAAKF,aAAamB,WACfH,KAAKd,KAAKF,aAAaiB,uBACvBT,WAAU,SAACC,GAAM,OAAAR,EAAKkB,WAAWV,EAAEW,OAAQX,EAAEI,gBAGlDd,EAAAY,UAAAI,UAAA,SAAUG,GACRhB,KAAKC,QAAUD,KAAKC,SAAW,GAC/BD,KAAKC,QAAQe,KAAOA,EAEhB,oBAAuBd,YAAcA,YACvCA,WAAWiB,MAAM,YAAanB,KAAKC,UAQvCJ,EAAAY,UAAAQ,WAAA,SAAWC,EAAgBP,GACzBA,EAAaA,GAAc,GAG3BX,KAAKC,QAAQiB,OAASA,EACtBlB,KAAKC,QAAQmB,gBAAkBT,EAE3B,oBAAuBT,YAAcA,YACvCA,WAAWiB,MAAM,aAAcnB,KAAKC,0JAzDzCoB,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAJjBC,EAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare const _satellite: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2LaunchByAdobe {\n  payload: any = {};\n  constructor(\n    protected angulartics2: Angulartics2,\n  ) {\n    if ('undefined' === typeof _satellite) {\n      console.warn('Launch not found!');\n    }\n    this.angulartics2.setUsername\n      .subscribe((x: string) => this.setUsername(x));\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  setUsername(userId: string | boolean) {\n    if ('undefined' !== typeof userId && userId) {\n      this.payload.userId = userId;\n    }\n  }\n\n  setUserProperties(properties: any) {\n    if ('undefined' !== typeof properties && properties) {\n      this.payload.properties = properties;\n    }\n  }\n\n  startTracking() {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    this.payload = this.payload || {};\n    this.payload.path = path;\n\n    if ('undefined' !== typeof _satellite && _satellite) {\n      _satellite.track('pageTrack', this.payload);\n    }\n  }\n\n  /**\n   * @param action associated with the event\n   * @param properties associated with the event\n   */\n  eventTrack(action: string, properties: any) {\n    properties = properties || {};\n\n    // add properties to payload\n    this.payload.action = action;\n    this.payload.eventProperties = properties;\n\n    if ('undefined' !== typeof _satellite && _satellite) {\n      _satellite.track('eventTrack', this.payload);\n    }\n  }\n}\n"]}