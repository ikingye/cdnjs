{"version":3,"sources":["../../../../src/lib/providers/pyze/pyze.ts"],"names":["Angulartics2Pyze","angulartics2","_this","this","setUsername","subscribe","x","setUserId","setUserProperties","postTraits","prototype","startTracking","pageTrack","pipe","filterDeveloperMode","path","eventTrack","action","properties","Pyze","postPageView","page","e","ReferenceError","PyzeEvents","postCustomEventWithAttributes","userId","PyzeIdentity","setUserIdentifier","Injectable","args","providedIn","Angulartics2"],"mappings":"qYAYI,SAAAA,EAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,aAAAA,EAChBE,KAAKF,aAAaG,YAAYC,WAAU,SAACC,GAAc,OAAAJ,EAAKK,UAAUD,MACtEH,KAAKF,aAAaO,kBAAkBH,WAAU,SAACC,GAAM,OAAAJ,EAAKO,WAAWH,aAGzEN,EAAAU,UAAAC,cAAA,WAAA,IAAAT,EAAAC,KACIA,KAAKF,aAAaW,UACfC,KAAKV,KAAKF,aAAaa,uBACvBT,WAAU,SAACC,GAAM,OAAAJ,EAAKU,UAAUN,EAAES,SACrCZ,KAAKF,aAAae,WACfH,KAAKV,KAAKF,aAAaa,uBACvBT,WAAU,SAACC,GAAM,OAAAJ,EAAKc,WAAWV,EAAEW,OAAQX,EAAEY,gBAGpDlB,EAAAU,UAAAE,UAAA,SAAUG,GACN,IACII,KAAKC,aAAa,cAAe,CAAEC,KAAMN,IAC3C,MAAOO,GACL,KAAMA,aAAaC,gBACnB,MAAMD,IAKdtB,EAAAU,UAAAM,WAAA,SAAWC,EAAgBC,GACvB,IACIM,WAAWC,8BAA8BR,EAAQC,GACnD,MAAOI,GACL,KAAMA,aAAaC,gBACnB,MAAMD,IAKdtB,EAAAU,UAAAH,UAAA,SAAUmB,GACN,IACIC,aAAaC,kBAAkBF,GACjC,MAAOJ,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKdtB,EAAAU,UAAAD,WAAA,SAAWS,GACP,IACIS,aAAalB,WAAWS,GAC1B,MAAOI,GACP,KAAMA,aAAaC,gBACjB,MAAMD,oJApDjBO,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAPjBC,EAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Pyze: any;\ndeclare var PyzeEvents: any;\ndeclare var PyzeIdentity: any;\n\n\n@Injectable({ providedIn: 'root' })\nexport class  Angulartics2Pyze {\n\n    constructor(private angulartics2: Angulartics2) {\n        this.angulartics2.setUsername.subscribe((x: string) => this.setUserId(x));\n        this.angulartics2.setUserProperties.subscribe((x) => this.postTraits(x));\n    }\n\n    startTracking(): void {\n        this.angulartics2.pageTrack\n          .pipe(this.angulartics2.filterDeveloperMode())\n          .subscribe((x) => this.pageTrack(x.path));\n        this.angulartics2.eventTrack\n          .pipe(this.angulartics2.filterDeveloperMode())\n          .subscribe((x) => this.eventTrack(x.action, x.properties));\n    }\n\n    pageTrack(path: string) {\n        try {\n            Pyze.postPageView('Page Viewed', { page: path });\n        } catch (e) {\n            if (!(e instanceof ReferenceError)) {\n            throw e;\n            }\n        }\n    }\n\n    eventTrack(action: string, properties: any) {\n        try {\n            PyzeEvents.postCustomEventWithAttributes(action, properties);\n        } catch (e) {\n            if (!(e instanceof ReferenceError)) {\n            throw e;\n            }\n        }\n    }\n\n    setUserId(userId: string) {\n        try {\n            PyzeIdentity.setUserIdentifier(userId);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) {\n            throw e;\n          }\n        }\n      }\n\n    postTraits(properties: string) {\n        try {\n            PyzeIdentity.postTraits(properties);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) {\n            throw e;\n          }\n        }\n    }\n}\n"]}