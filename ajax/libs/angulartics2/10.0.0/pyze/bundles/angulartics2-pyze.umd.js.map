{"version":3,"file":"angulartics2-pyze.umd.js","sources":["../../../../src/lib/providers/pyze/pyze.ts","../../../../src/lib/providers/pyze/angulartics2-pyze.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Pyze: any;\ndeclare var PyzeEvents: any;\ndeclare var PyzeIdentity: any;\n\n\n@Injectable({ providedIn: 'root' })\nexport class  Angulartics2Pyze {\n\n    constructor(private angulartics2: Angulartics2) {\n        this.angulartics2.setUsername.subscribe((x: string) => this.setUserId(x));\n        this.angulartics2.setUserProperties.subscribe((x) => this.postTraits(x));\n    }\n\n    startTracking(): void {\n        this.angulartics2.pageTrack\n          .pipe(this.angulartics2.filterDeveloperMode())\n          .subscribe((x) => this.pageTrack(x.path));\n        this.angulartics2.eventTrack\n          .pipe(this.angulartics2.filterDeveloperMode())\n          .subscribe((x) => this.eventTrack(x.action, x.properties));\n    }\n\n    pageTrack(path: string) {\n        try {\n            Pyze.postPageView('Page Viewed', { page: path });\n        } catch (e) {\n            if (!(e instanceof ReferenceError)) {\n            throw e;\n            }\n        }\n    }\n\n    eventTrack(action: string, properties: any) {\n        try {\n            PyzeEvents.postCustomEventWithAttributes(action, properties);\n        } catch (e) {\n            if (!(e instanceof ReferenceError)) {\n            throw e;\n            }\n        }\n    }\n\n    setUserId(userId: string) {\n        try {\n            PyzeIdentity.setUserIdentifier(userId);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) {\n            throw e;\n          }\n        }\n      }\n\n    postTraits(properties: string) {\n        try {\n            PyzeIdentity.postTraits(properties);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) {\n            throw e;\n          }\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './pyze';\n"],"names":["Injectable","Angulartics2"],"mappings":";;;;;;;QAYI,0BAAoB,YAA0B;YAA9C,iBAGC;YAHmB,iBAAY,GAAZ,YAAY,CAAc;YAC1C,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;YAC1E,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;SAC5E;QAED,wCAAa,GAAb;YAAA,iBAOC;YANG,IAAI,CAAC,YAAY,CAAC,SAAS;iBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;iBAC7C,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,CAAC,UAAU;iBACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC;iBAC7C,SAAS,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,GAAA,CAAC,CAAC;SAChE;QAED,oCAAS,GAAT,UAAU,IAAY;YAClB,IAAI;gBACA,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;aACpD;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;oBACpC,MAAM,CAAC,CAAC;iBACP;aACJ;SACJ;QAED,qCAAU,GAAV,UAAW,MAAc,EAAE,UAAe;YACtC,IAAI;gBACA,UAAU,CAAC,6BAA6B,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;aAChE;YAAC,OAAO,CAAC,EAAE;gBACR,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;oBACpC,MAAM,CAAC,CAAC;iBACP;aACJ;SACJ;QAED,oCAAS,GAAT,UAAU,MAAc;YACpB,IAAI;gBACA,YAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;oBAClC,MAAM,CAAC,CAAC;iBACT;aACF;SACF;QAEH,qCAAU,GAAV,UAAW,UAAkB;YACzB,IAAI;gBACA,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;aACvC;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,EAAE,CAAC,YAAY,cAAc,CAAC,EAAE;oBAClC,MAAM,CAAC,CAAC;iBACT;aACF;SACJ;;;;;gBAvDJA,aAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;gBAPzBC,eAAY;;;ICFrB;;;;;;;;;;;;;;"}