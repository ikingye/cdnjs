{"version":3,"sources":["../../../../src/lib/uiroutermodule/uirouter.ts","../../../../src/lib/uiroutermodule/uirouter.module.ts"],"names":["UIRouterTracking","transitionService","this","prototype","path","trans","$to","url","format","params","trackLocation","settings","_this","subject","Subject","onSuccess","next","priority","prepareExternalUrl","Injectable","args","providedIn","TransitionService","Angulartics2UirouterModule","forRoot","ngModule","providers","provide","ANGULARTICS2_TOKEN","useValue","RouterlessTracking","useClass","Angulartics2","NgModule","imports","Angulartics2OnModule"],"mappings":"2eAgBE,SAAAA,EAAoBC,GAAAC,KAAAD,kBAAAA,SAEpBD,EAAAG,UAAAC,KAAA,SAAKC,GACH,OAAOA,EAAMC,MAAMC,IAAIC,OAAOH,EAAMI,WAGtCT,EAAAG,UAAAO,cAAA,SAAcC,GAAd,IAAAC,EAAAV,KACQW,EAAU,IAAIC,EAAAA,QAUpB,OATAZ,KAAKD,kBAAkBc,UACrB,IACA,SAAAV,GACE,OAAOQ,EAAQG,KAAK,CAAET,IAAKK,EAAKR,KAAKC,OAEvC,CACEY,UAAW,MAGRJ,GAGTb,EAAAG,UAAAe,mBAAA,SAAmBX,GACjB,OAAOA,wJAvBVY,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAbLC,EAAAA,sCCarB,SAAAC,YACSA,EAAAC,QAAP,SACEb,GAEA,YAFA,IAAAA,IAAAA,EAAA,IAEO,CACLc,SAAUF,EACVG,UAAW,CACT,CAAEC,QAASC,EAAAA,mBAAoBC,SAAU,CAAElB,SAAQA,IACnD,CAAEgB,QAASG,EAAAA,mBAAoBC,SAAU/B,GACzCgC,EAAAA,yCAZPC,EAAAA,SAAQb,KAAA,CAAC,CACRc,QAAS,CAACC,EAAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Transition, TransitionService } from '@uirouter/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { RouterlessTracking, TrackNavigationEnd } from 'angulartics2';\n\n/**\n * Track Route changes for applications using UI-Router\n *\n * @link https://ui-router.github.io/ng2/docs/latest/\n *\n * referenced: https://github.com/ui-router/sample-app-angular/blob/9adb533b85c0f0fccef23968489cca0a5ec84654/src/app/util/ga.ts\n */\n@Injectable({ providedIn: 'root' })\nexport class UIRouterTracking implements RouterlessTracking {\n  constructor(private transitionService: TransitionService) {}\n\n  path(trans: Transition) {\n    return trans.$to().url.format(trans.params());\n  }\n\n  trackLocation(settings): Observable<TrackNavigationEnd> {\n    const subject = new Subject<TrackNavigationEnd>();\n    this.transitionService.onSuccess(\n      {},\n      trans => {\n        return subject.next({ url: this.path(trans) });\n      },\n      {\n        priority: -10000,\n      },\n    );\n    return subject;\n  }\n\n  prepareExternalUrl(url: string): string {\n    return url;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport {\n  Angulartics2,\n  Angulartics2OnModule,\n  Angulartics2Settings,\n  ANGULARTICS2_TOKEN,\n  RouterlessTracking,\n} from 'angulartics2';\nimport { UIRouterTracking } from './uirouter';\n\n@NgModule({\n  imports: [Angulartics2OnModule],\n})\nexport class Angulartics2UirouterModule {\n  static forRoot(\n    settings: Partial<Angulartics2Settings> = {},\n  ): ModuleWithProviders<Angulartics2UirouterModule> {\n    return {\n      ngModule: Angulartics2UirouterModule,\n      providers: [\n        { provide: ANGULARTICS2_TOKEN, useValue: { settings } },\n        { provide: RouterlessTracking, useClass: UIRouterTracking },\n        Angulartics2,\n      ],\n    };\n  }\n}\n"]}