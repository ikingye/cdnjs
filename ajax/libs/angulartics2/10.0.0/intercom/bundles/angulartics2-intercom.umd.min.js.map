{"version":3,"sources":["../../../../src/lib/providers/intercom/intercom.ts"],"names":["Angulartics2Intercom","angulartics2","_this","this","setUserProperties","subscribe","x","setUserPropertiesOnce","prototype","startTracking","pageTrack","pipe","filterDeveloperMode","path","eventTrack","action","properties","url","e","ReferenceError","Intercom","userId","user_id","Injectable","args","providedIn","Angulartics2"],"mappings":"6YASE,SAAAA,EACUC,GADV,IAAAC,EAAAC,KACUA,KAAAF,aAAAA,EAERE,KAAKF,aAAaG,kBACfC,WAAU,SAACC,GAAM,OAAAJ,EAAKE,kBAAkBE,MAC3CH,KAAKF,aAAaM,sBACfF,WAAU,SAACC,GAAM,OAAAJ,EAAKE,kBAAkBE,aAG7CN,EAAAQ,UAAAC,cAAA,WAAA,IAAAP,EAAAC,KACEA,KAAKF,aAAaS,UACfC,KAAKR,KAAKF,aAAaW,uBACvBP,WAAU,SAACC,GAAM,OAAAJ,EAAKQ,UAAUJ,EAAEO,SACrCV,KAAKF,aAAaa,WACfH,KAAKR,KAAKF,aAAaW,uBACvBP,WAAU,SAACC,GAAM,OAAAJ,EAAKY,WAAWR,EAAES,OAAQT,EAAEU,gBAGlDhB,EAAAQ,UAAAE,UAAA,SAAUG,GACR,IACEV,KAAKW,WAAW,WAAY,CAC1BG,IAAKJ,IAEP,MAAOK,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZlB,EAAAQ,UAAAM,WAAA,SAAWC,EAAgBC,GACzB,IACEI,SAAS,aAAcL,EAAQC,GAC/B,MAAOE,GACP,KAAMA,aAAaC,gBACjB,MAAMD,IAKZlB,EAAAQ,UAAAJ,kBAAA,SAAkBY,GAChB,IACMA,EAAWK,SAAWL,EAAWM,UACnCN,EAAWM,QAAUN,EAAWK,QAGlCD,SAAS,OAAQJ,GACjB,MAAOE,GACP,KAAMA,aAAaC,gBACjB,MAAMD,oJApDbK,EAAAA,WAAUC,KAAA,CAAC,CAAEC,WAAY,oDAJjBC,EAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Angulartics2 } from 'angulartics2';\n\ndeclare var Intercom: any;\n\n@Injectable({ providedIn: 'root' })\nexport class Angulartics2Intercom {\n\n  constructor(\n    private angulartics2: Angulartics2\n  ) {\n    this.angulartics2.setUserProperties\n      .subscribe((x) => this.setUserProperties(x));\n    this.angulartics2.setUserPropertiesOnce\n      .subscribe((x) => this.setUserProperties(x));\n  }\n\n  startTracking(): void {\n    this.angulartics2.pageTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.pageTrack(x.path));\n    this.angulartics2.eventTrack\n      .pipe(this.angulartics2.filterDeveloperMode())\n      .subscribe((x) => this.eventTrack(x.action, x.properties));\n  }\n\n  pageTrack(path: string) {\n    try {\n      this.eventTrack('Pageview', {\n        url: path\n      });\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  eventTrack(action: string, properties: any) {\n    try {\n      Intercom('trackEvent', action, properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n\n  setUserProperties(properties: any) {\n    try {\n      if (properties.userId && !properties.user_id) {\n        properties.user_id = properties.userId;\n      }\n\n      Intercom('boot', properties);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) {\n        throw e;\n      }\n    }\n  }\n}\n"]}